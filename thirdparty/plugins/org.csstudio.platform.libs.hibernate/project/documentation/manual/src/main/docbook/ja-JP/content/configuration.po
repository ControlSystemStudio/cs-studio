# translation of Collection_Mapping.po to
# Xi HUANG <xhuang@redhat.com>, 2007, 2009.
msgid ""
msgstr ""
"Project-Id-Version: Collection_Mapping\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2010-02-11T05:38:15\n"
"PO-Revision-Date: 2009-12-21 17:12+1000\n"
"Last-Translator: Xi HUANG <xhuang@redhat.com>\n"
"Language-Team:  <en@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: KBabel 1.11.4\n"

#. Tag: title
#, no-c-format
msgid "Configuration"
msgstr "設定"

#. Tag: para
#, no-c-format
msgid ""
"Hibernate is designed to operate in many different environments and, as "
"such, there is a broad range of configuration parameters. Fortunately, most "
"have sensible default values and Hibernate is distributed with an example "
"<literal>hibernate.properties</literal> file in <literal>etc/</literal> that "
"displays the various options. Simply put the example file in your classpath "
"and customize it to suit your needs."
msgstr ""
"Hibernate は様々な環境で動作するようにデザインされているため、非常に多くの設"
"定要素があります。幸いなことに、 Hibernate は、公開されているパッケージの "
"<literal>etc/</literal> フォルダの <literal>hibernate.properties</literal> "
"に、ほとんどの設定要素の適切なデフォルト値が記述されています。この "
"<literal>hibernate.properties</literal> をクラスパスに設定し、設定要素をカス"
"タマイズするだけです。"

#. Tag: title
#, no-c-format
msgid "Programmatic configuration"
msgstr "プログラム上の設定"

#. Tag: para
#, no-c-format
msgid ""
"An instance of <classname>org.hibernate.cfg.Configuration</classname> "
"represents an entire set of mappings of an application's Java types to an "
"SQL database. The <classname>org.hibernate.cfg.Configuration</classname> is "
"used to build an immutable <interfacename>org.hibernate.SessionFactory</"
"interfacename>. The mappings are compiled from various XML mapping files."
msgstr ""
"<classname>org.hibernate.cfg.Configuration</classname> のインスタンスは、 "
"Java の型と SQL データベースのマッピング情報をすべて持っています。 "
"<literal>Configuration</literal> は、（不変の） "
"<interfacename>SessionFactory</interfacename> を生成するときに使用します。複"
"数の XML マッピングファイルを変換し、マッピング情報にします。"

#. Tag: para
#, no-c-format
msgid ""
"You can obtain a <classname>org.hibernate.cfg.Configuration</classname> "
"instance by instantiating it directly and specifying XML mapping documents. "
"If the mapping files are in the classpath, use <literal>addResource()</"
"literal>. For example:"
msgstr ""
"通常、 <classname>org.hibernate.cfg.Configuration</classname> インスタンス"
"は、特定の XML マッピングファイルによって直接初期化されます。もし、マッピング"
"ファイルがクラスパスに設定されている場合、次のメソッドを使ってください。 "
"<literal>addResource()</literal> :"

#. Tag: para
#, no-c-format
msgid ""
"An alternative way is to specify the mapped class and allow Hibernate to "
"find the mapping document for you:"
msgstr ""
"代替案 (こちらのほうが良いときもあります) としてマッピングクラスを指定する方"
"法もあります。 Hibernate に、マッピングファイルを 見つけさせてください："

#. Tag: para
#, no-c-format
msgid ""
"Hibernate will then search for mapping files named <filename>/org/hibernate/"
"auction/Item.hbm.xml</filename> and <filename>/org/hibernate/auction/Bid.hbm."
"xml</filename> in the classpath. This approach eliminates any hardcoded "
"filenames."
msgstr ""
"Hibernate は、クラスパスにある以下のような名前のマッピングファイルを見つけま"
"す。 <filename>/org/hibernate/auction/Item.hbm.xml</filename> 、 <filename>/"
"org/hibernate/auction/Bid.hbm.xml</filename> 。この方法だと、ハードコーディン"
"グされたファイル名を排除できます。"

#. Tag: para
#, no-c-format
msgid ""
"A <classname>org.hibernate.cfg.Configuration</classname> also allows you to "
"specify configuration properties. For example:"
msgstr ""
"<classname>org.hibernate.cfg.Configuration</classname> は、設定プロパティを指"
"定することもできます："

#. Tag: para
#, no-c-format
msgid ""
"This is not the only way to pass configuration properties to Hibernate. Some "
"alternative options include:"
msgstr ""
"Hibernate に設定プロパティを渡す方法は1つではありません。さまざまなオプション"
"を用意しています："

#. Tag: para
#, no-c-format
msgid ""
"Pass an instance of <classname>java.util.Properties</classname> to "
"<literal>Configuration.setProperties()</literal>."
msgstr ""
"<literal>java.util.Properties</literal> インスタンスを "
"<literal>Configuration.setProperties()</literal> に渡します。"

#. Tag: para
#, no-c-format
msgid ""
"Place a file named <filename>hibernate.properties</filename> in a root "
"directory of the classpath."
msgstr ""
"<literal>hibernate.properties</literal> をクラスパスのルートディレクトリに置"
"きます。"

#. Tag: para
#, no-c-format
msgid ""
"Set <literal>System</literal> properties using <literal>java -"
"Dproperty=value</literal>."
msgstr ""
"<literal>System</literal> プロパティが <literal>java -Dproperty=value</"
"literal> を使うように設定します。"

#. Tag: para
#, no-c-format
msgid ""
"Include <literal>&lt;property&gt;</literal> elements in <literal>hibernate."
"cfg.xml</literal> (this is discussed later)."
msgstr ""
"<literal>&lt;property&gt;</literal> 要素を <filename>hibernate.cfg.xml</"
"filename> （後述）に設定します。"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"If you want to get started quickly<filename>hibernate.properties</filename> "
"is the easiest approach."
msgstr ""
"<literal>hibernate.properties</literal> をクラスパスのルートディレクトリに置"
"きます。"

#. Tag: para
#, no-c-format
msgid ""
"The <classname>org.hibernate.cfg.Configuration</classname> is intended as a "
"startup-time object that will be discarded once a <literal>SessionFactory</"
"literal> is created."
msgstr ""
"<classname>org.hibernate.cfg.Configuration</classname> は、起動時にだけあるオ"
"ブジェクトであり、一度 <literal>SessionFactory</literal> を生成した後は、破棄"
"されることを意図しています。"

#. Tag: title
#, no-c-format
msgid "Obtaining a SessionFactory"
msgstr "SessionFactory を取得する"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"When all mappings have been parsed by the <classname>org.hibernate.cfg."
"Configuration</classname>, the application must obtain a factory for "
"<interfacename>org.hibernate.Session</interfacename> instances. This factory "
"is intended to be shared by all application threads:"
msgstr ""
"<classname>org.hibernate.cfg.Configuration</classname> がすべてのマッピング情"
"報を解析したら、アプリケーションは、 <classname>org.hibernate.Session</"
"classname> インスタンスのためにファクトリを取得しなければなりません。この "
"SessionFactory は、 Hibernate を使用するすべてのスレッドで共有されるべきです:"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Hibernate does allow your application to instantiate more than one "
"<interfacename>org.hibernate.SessionFactory</interfacename>. This is useful "
"if you are using more than one database."
msgstr ""
"Hibernate は、アプリケーションが <classname>org.hibernate.SessionFactory</"
"classname> を複数生成することを可能にします。これは、複数のデータベースを使用"
"する場合に便利です。"

#. Tag: title
#, no-c-format
msgid "JDBC connections"
msgstr "JDBC コネクション"

#. Tag: para
#, no-c-format
msgid ""
"It is advisable to have the <interfacename>org.hibernate.SessionFactory</"
"interfacename> create and pool JDBC connections for you. If you take this "
"approach, opening a <interfacename>org.hibernate.Session</interfacename> is "
"as simple as:"
msgstr ""
"通常、開発者は <interfacename>org.hibernate.SessionFactory</interfacename> を"
"生成し、 SessionFactory で JDBC コネクションをプーリングしたいと考えます。そ"
"のアプローチを採用する場合、単純に <interfacename>org.hibernate.Session</"
"interfacename> をオープンしてください："

#. Tag: para
#, no-c-format
msgid ""
"Once you start a task that requires access to the database, a JDBC "
"connection will be obtained from the pool."
msgstr ""
"これだけで、プーリングした JDBC コネクションを使って目的のデータベースにアク"
"セスすることができます。"

#. Tag: para
#, no-c-format
msgid ""
"Before you can do this, you first need to pass some JDBC connection "
"properties to Hibernate. All Hibernate property names and semantics are "
"defined on the class <classname>org.hibernate.cfg.Environment</classname>. "
"The most important settings for JDBC connection configuration are outlined "
"below."
msgstr ""
"そのためには、 JDBC コネクションのプロパティを Hibernate に設定する必要があり"
"ます。すべての Hibernate プロパティ名とセマンティクスは <classname>org."
"hibernate.cfg.Environment</classname> クラスに定義されています。この設定は "
"JDBC コネクション設定の中で一番重要なものです。"

#. Tag: para
#, no-c-format
msgid ""
"Hibernate will obtain and pool connections using <classname>java.sql."
"DriverManager</classname> if you set the following properties:"
msgstr ""
"もし、以下のプロパティを設定すると、 Hibernate はコネクションを取得するために"
"（プールも） <classname>java.sql.DriverManager</classname> を使います:"

#. Tag: title
#, no-c-format
msgid "Hibernate JDBC Properties"
msgstr "Hibernate JDBC プロパティ"

#. Tag: entry
#, no-c-format
msgid "Property name"
msgstr "プロパティ名"

#. Tag: entry
#, no-c-format
msgid "Purpose"
msgstr "意味"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.connection.driver_class</property>"
msgstr "<property>hibernate.connection.driver_class</property>"

#. Tag: entry
#, no-c-format
msgid "<emphasis>JDBC driver class</emphasis>"
msgstr "JDBC のドライバークラス"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.connection.url</property>"
msgstr "<property>hibernate.connection.url</property>"

#. Tag: entry
#, fuzzy, no-c-format
msgid "<emphasis>JDBC URL</emphasis>"
msgstr "JDBC のドライバークラス"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.connection.username</property>"
msgstr "<property>hibernate.connection.username</property>"

#. Tag: entry
#, fuzzy, no-c-format
msgid "<emphasis>database user</emphasis>"
msgstr "<emphasis>データベースユーザ</emphasis> (オプション)"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.connection.password</property>"
msgstr "<property>hibernate.connection.password</property>"

#. Tag: entry
#, fuzzy, no-c-format
msgid "<emphasis>database user password</emphasis>"
msgstr "<emphasis>データベースユーザのパスワード</emphasis> (オプション)"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.connection.pool_size</property>"
msgstr "<property>hibernate.connection.pool_size</property>"

#. Tag: entry
#, no-c-format
msgid "<emphasis>maximum number of pooled connections</emphasis>"
msgstr "<emphasis>プールするコネクションの最大数</emphasis>"

#. Tag: para
#, no-c-format
msgid ""
"Hibernate's own connection pooling algorithm is, however, quite rudimentary. "
"It is intended to help you get started and is <emphasis>not intended for use "
"in a production system</emphasis>, or even for performance testing. You "
"should use a third party pool for best performance and stability. Just "
"replace the <property>hibernate.connection.pool_size</property> property "
"with connection pool specific settings. This will turn off Hibernate's "
"internal pool. For example, you might like to use c3p0."
msgstr ""
"Hibernate のコネクションプールアルゴリズムは非常に初歩的なものです。これはす"
"ぐに始められるようにと用意されたもので、 <emphasis>製品として使用することを意"
"図していません</emphasis> 。また、パフォーマンスのテストのためのものでもあり"
"ません。最高のパフォーマンスと安定性を持ったプールを実現したければ、サード"
"パーティのツールをお勧めします。 <literal>hibernate.connection.pool_size</"
"literal> プロパティと適切なコネクションプールの設定を置き換えてください。これ"
"により Hibernate のインターナルプールを無効にします。例えば次のように C3P0 を"
"使います。"

#. Tag: para
#, no-c-format
msgid ""
"C3P0 is an open source JDBC connection pool distributed along with Hibernate "
"in the <filename>lib</filename> directory. Hibernate will use its "
"<classname>org.hibernate.connection.C3P0ConnectionProvider</classname> for "
"connection pooling if you set <property>hibernate.c3p0.*</property> "
"properties. If you would like to use Proxool, refer to the packaged "
"<filename>hibernate.properties</filename> and the Hibernate web site for "
"more information."
msgstr ""
"C3P0 はオープンソース JDBC コネクションプールで、 Hibernate の <literal>lib</"
"literal> ディレクトリにあります。もし、 <literal>hibernate.c3p0.*</literal> "
"プロパティをセットすれば、 Hibernate は、 <literal>C3P0ConnectionProvider</"
"literal> を使います。もし Proxool を使いたい場合は、 <literal>hibernate."
"properties</literal> パッケージを参照したり、 Hibernate の Web サイトでより多"
"くの情報を取得してください。"

#. Tag: para
#, no-c-format
msgid ""
"The following is an example <filename>hibernate.properties</filename> file "
"for c3p0:"
msgstr ""
"C3P0 用の <literal>hibernate.properties</literal> ファイルを例として示しま"
"す："

#. Tag: para
#, no-c-format
msgid ""
"For use inside an application server, you should almost always configure "
"Hibernate to obtain connections from an application server "
"<interfacename>javax.sql.Datasource</interfacename> registered in JNDI. You "
"will need to set at least one of the following properties:"
msgstr ""
"アプリケーションサーバー上で使う場合は、 Hibernate を設定し、アプリケーション"
"サーバーからコネクションを取得するようにしてください。 <interfacename>javax."
"sql.Datasource</interfacename> を JNDI に登録します。そしてプロパティを以下の"
"ように設定してください:"

#. Tag: title
#, no-c-format
msgid "Hibernate Datasource Properties"
msgstr "Hibernate データソースプロパティ"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.connection.datasource</property>"
msgstr "<property>hibernate.connection.datasource</property>"

#. Tag: entry
#, fuzzy, no-c-format
msgid "<emphasis>datasource JNDI name</emphasis>"
msgstr "<emphasis>データベースユーザ</emphasis> (オプション)"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.jndi.url</property>"
msgstr "<property>hibernate.jndi.url</property>"

#. Tag: entry
#, no-c-format
msgid "<emphasis>URL of the JNDI provider</emphasis> (optional)"
msgstr "<emphasis>JNDI プロバイダの URL</emphasis> (オプション)"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.jndi.class</property>"
msgstr "<property>hibernate.jndi.class</property>"

#. Tag: entry
#, no-c-format
msgid ""
"<emphasis>class of the JNDI <literal>InitialContextFactory</literal></"
"emphasis> (optional)"
msgstr ""
"<emphasis>JNDI のクラス <literal>InitialContextFactory</literal></emphasis> "
"(オプション)"

#. Tag: entry
#, no-c-format
msgid "<emphasis>database user</emphasis> (optional)"
msgstr "<emphasis>データベースユーザ</emphasis> (オプション)"

#. Tag: entry
#, no-c-format
msgid "<emphasis>database user password</emphasis> (optional)"
msgstr "<emphasis>データベースユーザのパスワード</emphasis> (オプション)"

#. Tag: para
#, no-c-format
msgid ""
"Here is an example <filename>hibernate.properties</filename> file for an "
"application server provided JNDI datasource:"
msgstr ""
"アプリケーションサーバーから提供された JNDI データソースを使う "
"<filename>hibernate.properties</filename> ファイルの例を示します："

#. Tag: para
#, no-c-format
msgid ""
"JDBC connections obtained from a JNDI datasource will automatically "
"participate in the container-managed transactions of the application server."
msgstr ""
"JNDI データソースから取得した JDBC コネクションは、アプリケーションサーバーの"
"コンテナ管理トランザクションに自動的に参加します。"

#. Tag: para
#, no-c-format
msgid ""
"Arbitrary connection properties can be given by prepending "
"\"<literal>hibernate.connection</literal>\" to the connection property name. "
"For example, you can specify a <property>charSet</property> connection "
"property using <property>hibernate.connection.charSet</property>."
msgstr ""
"任意のコネクションプロパティは、追加された \"<literal>hibernate.connnection</"
"literal>\" プロパティ名によって与えられます。例えば、 <property>charSet</"
"property> を設定したい場合は、 <property>hibernate.connection.charSet</"
"property> を使います。"

#. Tag: para
#, no-c-format
msgid ""
"You can define your own plugin strategy for obtaining JDBC connections by "
"implementing the interface <interfacename>org.hibernate.connection."
"ConnectionProvider</interfacename>, and specifying your custom "
"implementation via the <property>hibernate.connection.provider_class</"
"property> property."
msgstr ""
"JDBC コネクションを取得する戦略を持つ独自のプラグインを定義する場合は、 "
"<interfacename>org.hibernate.connection.ConnectionProvider</interfacename> イ"
"ンターフェースを実装してください。そして、実装クラスを <property>hibernate."
"connection.provider_class</property> に設定してください。"

#. Tag: title
#, no-c-format
msgid "Optional configuration properties"
msgstr "オプション設定プロパティ"

#. Tag: para
#, no-c-format
msgid ""
"There are a number of other properties that control the behavior of "
"Hibernate at runtime. All are optional and have reasonable default values."
msgstr ""
"これらのプロパティはランタイムに Hibernate の挙動を制御するものです。これらの"
"プロパティはすべて妥当なデフォルト値があり、任意で設定します。"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"<emphasis>Some of these properties are \"system-level\" only.</emphasis> "
"System-level properties can be set only via <literal>java -Dproperty=value</"
"literal> or <filename>hibernate.properties</filename>. They "
"<emphasis>cannot</emphasis> be set by the other techniques described above."
msgstr ""
"<emphasis>注意：これらのプロパティは「システムレベル」のみです。</emphasis> "
"システムレベルプロパティは <literal>java -Dproperty=value</literal> 、もしく"
"は <literal>hibernate.properties</literal> でのみ設定可能です。それ以外の設定"
"方法は <emphasis>ありません</emphasis> 。"

#. Tag: title
#, no-c-format
msgid "Hibernate Configuration Properties"
msgstr "Hibernate 設定プロパティ"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.dialect</property>"
msgstr "<property>hibernate.dialect</property>"

#. Tag: entry
#, no-c-format
msgid ""
"The classname of a Hibernate <classname>org.hibernate.dialect.Dialect</"
"classname> which allows Hibernate to generate SQL optimized for a particular "
"relational database."
msgstr ""
"Hibernate のクラス名 <classname>org.hibernate.dialect.Dialect</classname> が"
"入ります。これはリレーショナルデータベースごとに最適化された SQL を生成しま"
"す。"

#. Tag: para
#, no-c-format
msgid ""
"<emphasis role=\"strong\">e.g.</emphasis> <literal>full.classname.of."
"Dialect</literal>"
msgstr ""
"<emphasis role=\"strong\">例</emphasis><literal>full.classname.of.Dialect</"
"literal>"

#. Tag: para
#, no-c-format
msgid ""
"In most cases Hibernate will actually be able to choose the correct "
"<classname>org.hibernate.dialect.Dialect</classname> implementation based on "
"the <literal>JDBC metadata</literal> returned by the JDBC driver."
msgstr ""

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.show_sql</property>"
msgstr "<property>hibernate.show_sql</property>"

#. Tag: entry
#, no-c-format
msgid ""
"Write all SQL statements to console. This is an alternative to setting the "
"log category <literal>org.hibernate.SQL</literal> to <literal>debug</"
"literal>."
msgstr ""
"発行されたすべての SQL をコンソールに出力します。これはログカテゴリの "
"<literal>org.hibernate.SQL</literal> に <literal>debug</literal> を設定する方"
"法の代替手段です。"

#. Tag: para
#, no-c-format
msgid ""
"<emphasis role=\"strong\">e.g.</emphasis> <literal>true</literal> | "
"<literal>false</literal>"
msgstr ""
"<emphasis role=\"strong\">例</emphasis><literal>true</literal> | "
"<literal>false</literal>"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.format_sql</property>"
msgstr "<property>hibernate.format_sql</property>"

#. Tag: entry
#, no-c-format
msgid "Pretty print the SQL in the log and console."
msgstr "ログとコンソールの SQL を整形して表示します。"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.default_schema</property>"
msgstr "<property>hibernate.default_schema</property>"

#. Tag: entry
#, no-c-format
msgid ""
"Qualify unqualified table names with the given schema/tablespace in "
"generated SQL."
msgstr "生成される SQL 文のテーブルに設定するスキーマ/テーブルスペースです。"

#. Tag: para
#, no-c-format
msgid ""
"<emphasis role=\"strong\">e.g.</emphasis> <literal>SCHEMA_NAME</literal>"
msgstr "<emphasis role=\"strong\">例.</emphasis><literal>SCHEMA_NAME</literal>"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.default_catalog</property>"
msgstr "<property>hibernate.default_catalog</property>"

#. Tag: entry
#, no-c-format
msgid ""
"Qualifies unqualified table names with the given catalog in generated SQL."
msgstr "生成される SQL 文のテーブルに設定するカタログです。"

#. Tag: para
#, no-c-format
msgid ""
"<emphasis role=\"strong\">e.g.</emphasis> <literal>CATALOG_NAME</literal>"
msgstr "<emphasis role=\"strong\">例</emphasis><literal>CATALOG_NAME</literal>"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.session_factory_name</property>"
msgstr "<property>hibernate.session_factory_name</property>"

#. Tag: entry
#, no-c-format
msgid ""
"The <interfacename>org.hibernate.SessionFactory</interfacename> will be "
"automatically bound to this name in JNDI after it has been created."
msgstr ""
"<interfacename>org.hibernate.SessionFactory</interfacename> は生成後、この名"
"前で JNDI に自動的に登録されます。"

#. Tag: para
#, no-c-format
msgid ""
"<emphasis role=\"strong\">e.g.</emphasis> <literal>jndi/composite/name</"
"literal>"
msgstr ""
"<emphasis role=\"strong\">例</emphasis><literal>jndi/composite/name</literal>"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.max_fetch_depth</property>"
msgstr "<property>hibernate.max_fetch_depth</property>"

#. Tag: entry
#, no-c-format
msgid ""
"Sets a maximum \"depth\" for the outer join fetch tree for single-ended "
"associations (one-to-one, many-to-one). A <literal>0</literal> disables "
"default outer join fetching."
msgstr ""
"外部結合フェッチの最大深度を設定します。結合する関連は対一関連のみ（一対一、"
"多対一）です。 <literal>0</literal> を指定すると外部結合フェッチは無効になり"
"ます。"

#. Tag: para
#, no-c-format
msgid ""
"<emphasis role=\"strong\">e.g.</emphasis> recommended values between "
"<literal>0</literal> and <literal>3</literal>"
msgstr ""
"<emphasis role=\"strong\">例：</emphasis> 推奨する値は <literal>0</literal> "
"から <literal>3</literal> の間です。"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.default_batch_fetch_size</property>"
msgstr "<property>hibernate.default_batch_fetch_size</property>"

#. Tag: entry
#, no-c-format
msgid "Sets a default size for Hibernate batch fetching of associations."
msgstr "関連フェッチのデフォルト Hibernate バッチサイズを指定します。"

#. Tag: para
#, no-c-format
msgid ""
"<emphasis role=\"strong\">e.g.</emphasis> recommended values <literal>4</"
"literal>, <literal>8</literal>, <literal>16</literal>"
msgstr ""
"<emphasis role=\"strong\">例：</emphasis> 推奨する値は <literal>4</"
"literal> , <literal>8</literal> , <literal>16</literal> です。"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.default_entity_mode</property>"
msgstr "<property>hibernate.default_entity_mode</property>"

#. Tag: entry
#, fuzzy, no-c-format
msgid ""
"Sets a default mode for entity representation for all sessions opened from "
"this <literal>SessionFactory</literal>"
msgstr ""
"<literal>SessionFactory</literal> からセッションをオープンしたときに使用する"
"エンティティのデフォルトモードを設定します。"

#. Tag: para
#, no-c-format
msgid ""
"<literal>dynamic-map</literal>, <literal>dom4j</literal>, <literal>pojo</"
"literal>"
msgstr ""
"<literal>dynamic-map</literal>, <literal>dom4j</literal>, <literal>pojo</"
"literal>"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.order_updates</property>"
msgstr "<property>hibernate.order_updates</property>"

#. Tag: entry
#, no-c-format
msgid ""
"Forces Hibernate to order SQL updates by the primary key value of the items "
"being updated. This will result in fewer transaction deadlocks in highly "
"concurrent systems."
msgstr ""
"項目が更新されたときに、別の SQL で主キーを更新することを強制します。この場"
"合、同時実行可能なシステムでは、まれにデッドロックが発生する可能性がありま"
"す。"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.generate_statistics</property>"
msgstr "<property>hibernate.generate_statistics</property>"

#. Tag: entry
#, no-c-format
msgid ""
"If enabled, Hibernate will collect statistics useful for performance tuning."
msgstr ""
"有効の場合、 Hibernate はパフォーマンスチューニングに有効な統計情報を収集しま"
"す。"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.use_identifier_rollback</property>"
msgstr "<property>hibernate.use_identifier_rollback</property>"

#. Tag: entry
#, no-c-format
msgid ""
"If enabled, generated identifier properties will be reset to default values "
"when objects are deleted."
msgstr ""
"有効の場合、オブジェクトが削除されたときに識別子プロパティをリセットし、デ"
"フォルト値にしたものを生成します。"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.use_sql_comments</property>"
msgstr "<property>hibernate.use_sql_comments</property>"

#. Tag: entry
#, no-c-format
msgid ""
"If turned on, Hibernate will generate comments inside the SQL, for easier "
"debugging, defaults to <literal>false</literal>."
msgstr ""
"有効の場合、 SQL 内にコメントを生成します。これはデバックを容易にします。デ"
"フォルトの値は <literal>false</literal> です。"

#. Tag: title
#, no-c-format
msgid "Hibernate JDBC and Connection Properties"
msgstr "Hibernate JDBC とコネクションプロパティ"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.jdbc.fetch_size</property>"
msgstr "<property>hibernate.jdbc.fetch_size</property>"

#. Tag: entry
#, no-c-format
msgid ""
"A non-zero value determines the JDBC fetch size (calls <literal>Statement."
"setFetchSize()</literal>)."
msgstr ""
"値が0でない場合、 JDBC フェッチサイズを決定します ( <literal>Statement."
"setFetchSize()</literal> を呼びます)。"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.jdbc.batch_size</property>"
msgstr "<property>hibernate.jdbc.batch_size</property>"

#. Tag: entry
#, no-c-format
msgid "A non-zero value enables use of JDBC2 batch updates by Hibernate."
msgstr "値が0でない場合、 Hibernate が JDBC2 バッチ更新を使用します。"

#. Tag: para
#, no-c-format
msgid ""
"<emphasis role=\"strong\">e.g.</emphasis> recommended values between "
"<literal>5</literal> and <literal>30</literal>"
msgstr ""
"<emphasis role=\"strong\">例：</emphasis> 推奨する値は <literal>5</literal> "
"から <literal>30</literal> の間です。"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.jdbc.batch_versioned_data</property>"
msgstr "<property>hibernate.jdbc.batch_versioned_data</property>"

#. Tag: entry
#, no-c-format
msgid ""
"Set this property to <literal>true</literal> if your JDBC driver returns "
"correct row counts from <literal>executeBatch()</literal>. Iit is usually "
"safe to turn this option on. Hibernate will then use batched DML for "
"automatically versioned data. Defaults to <literal>false</literal>."
msgstr ""
"もし JDBC ドライバが <literal>executeBatch()</literal> によって正確な行数を返"
"す場合、このプロパティを <literal>true</literal> にしてください （通常はこの"
"オプションを ON するのが安全です）。 Hibernate は、自動バージョンデータのため"
"バッチ DML を使います。デフォルトの値は <literal>false</literal> です。"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.jdbc.factory_class</property>"
msgstr "<property>hibernate.jdbc.factory_class</property>"

#. Tag: entry
#, no-c-format
msgid ""
"Select a custom <interfacename>org.hibernate.jdbc.Batcher</interfacename>. "
"Most applications will not need this configuration property."
msgstr ""
"カスタム <interfacename>org.hibernate.jdbc.Batcher</interfacename> を選びま"
"す。ほとんどのアプリケーションに、この設定プロパティは必要ありません。"

#. Tag: para
#, no-c-format
msgid ""
"<emphasis role=\"strong\">e.g.</emphasis> <literal>classname.of."
"BatcherFactory</literal>"
msgstr ""
"<emphasis role=\"strong\">例</emphasis><literal>classname.of.BatcherFactory</"
"literal>"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.jdbc.use_scrollable_resultset</property>"
msgstr "<property>hibernate.jdbc.use_scrollable_resultset</property>"

#. Tag: entry
#, no-c-format
msgid ""
"Enables use of JDBC2 scrollable resultsets by Hibernate. This property is "
"only necessary when using user-supplied JDBC connections. Hibernate uses "
"connection metadata otherwise."
msgstr ""
"Hibernate による JDBC2 のスクロール可能なリザルトセットの使用を有効にします。"
"このプロパティは、ユーザーによって提供された JDBC コネクションを使用している"
"場合のみ必要で、そうでなければ Hibernate はコネクションメタデータを使用しま"
"す。"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.jdbc.use_streams_for_binary</property>"
msgstr "<property>hibernate.jdbc.use_streams_for_binary</property>"

#. Tag: entry
#, no-c-format
msgid ""
"Use streams when writing/reading <literal>binary</literal> or "
"<literal>serializable</literal> types to/from JDBC. <emphasis>*system-level "
"property*</emphasis>"
msgstr ""
"JDBC へ/から <literal>binary</literal> や <literal>serializable</literal> の"
"書き込み/読み込みストリームを使います (システムレベルのプロパティ)。"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.jdbc.use_get_generated_keys</property>"
msgstr "<property>hibernate.jdbc.use_get_generated_keys</property>"

#. Tag: entry
#, no-c-format
msgid ""
"Enables use of JDBC3 <literal>PreparedStatement.getGeneratedKeys()</literal> "
"to retrieve natively generated keys after insert. Requires JDBC3+ driver and "
"JRE1.4+, set to false if your driver has problems with the Hibernate "
"identifier generators. By default, it tries to determine the driver "
"capabilities using connection metadata."
msgstr ""
"挿入の後に自動生成された主キーを取得するための JDBC3 "
"<literal>PreparedStatement.getGeneratedKeys()</literal> の使用を有効にしま"
"す。これは JDBC3+ ドライバと JRE1.4+ を必要とし、もし Hibernate の識別子ジェ"
"ネレータに問題が発生するようなら false に設定してください。デフォルトではコネ"
"クションメタデータを使いドライバの能力を決定します。"

#. Tag: para
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>true|false</literal>"
msgstr "<emphasis role=\"strong\">例</emphasis><literal>true|false</literal>"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.connection.provider_class</property>"
msgstr "<property>hibernate.connection.provider_class</property>"

#. Tag: entry
#, no-c-format
msgid ""
"The classname of a custom <interfacename>org.hibernate.connection."
"ConnectionProvider</interfacename> which provides JDBC connections to "
"Hibernate."
msgstr ""
"JDBC コネクションを Hibernate に提供する独自の <literal>ConnectionProvider</"
"literal> のクラス名。"

#. Tag: para
#, no-c-format
msgid ""
"<emphasis role=\"strong\">e.g.</emphasis> <literal>classname.of."
"ConnectionProvider</literal>"
msgstr ""
"<emphasis role=\"strong\">例</emphasis><literal>classname.of."
"ConnectionProvider</literal>"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.connection.isolation</property>"
msgstr "<property>hibernate.connection.isolation</property>"

#. Tag: entry
#, no-c-format
msgid ""
"Sets the JDBC transaction isolation level. Check <interfacename>java.sql."
"Connection</interfacename> for meaningful values, but note that most "
"databases do not support all isolation levels and some define additional, "
"non-standard isolations."
msgstr ""
"JDBC トランザクション分離レベルを設定します。妥当な値を調べるためには "
"<interfacename>java.sql.Connection</interfacename> をチェックしてください。し"
"かし使用するデータベースが、すべての分離レベルをサポートしているとは限りませ"
"ん。"

#. Tag: para
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>1, 2, 4, 8</literal>"
msgstr "<emphasis role=\"strong\">例</emphasis><literal>1, 2, 4, 8</literal>"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.connection.autocommit</property>"
msgstr "<property>hibernate.connection.autocommit</property>"

#. Tag: entry
#, no-c-format
msgid "Enables autocommit for JDBC pooled connections (it is not recommended)."
msgstr ""
"プールされている JDBC コネクションの自動コミットを有効にする（非推奨）。"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.connection.release_mode</property>"
msgstr "<property>hibernate.connection.release_mode</property>"

#. Tag: entry
#, no-c-format
msgid ""
"Specifies when Hibernate should release JDBC connections. By default, a JDBC "
"connection is held until the session is explicitly closed or disconnected. "
"For an application server JTA datasource, use <literal>after_statement</"
"literal> to aggressively release connections after every JDBC call. For a "
"non-JTA connection, it often makes sense to release the connection at the "
"end of each transaction, by using <literal>after_transaction</literal>. "
"<literal>auto</literal> will choose <literal>after_statement</literal> for "
"the JTA and CMT transaction strategies and <literal>after_transaction</"
"literal> for the JDBC transaction strategy."
msgstr ""
"Hibernate がいつ JDBC コネクションをリリースするかを指定します。デフォルトで"
"はセッションが明示的にクローズまたは切断されてもコネクションは保持します。ア"
"プリケーションサーバーの JTA データソースの場合、すべての JDBC コールの後、強"
"制的にコネクションをリリースするために <literal>after_statement</literal> を"
"使ってください。非 JTA コネクションの場合、各トランザクションが終了したとき"
"に <literal>after_transaction</literal> を使い、コネクションをリリースしてく"
"ださい。 <literal>auto</literal> にすると、 JTA や CMT トランザクションの場"
"合、 <literal>after_statement</literal> でクローズし、 JDBC トランザクション"
"の場合、 <literal>after_transaction</literal> でクローズします。"

#. Tag: para
#, no-c-format
msgid ""
"<emphasis role=\"strong\">e.g.</emphasis> <literal>auto</literal> (default) "
"| <literal>on_close</literal> | <literal>after_transaction</literal> | "
"<literal>after_statement</literal>"
msgstr ""
"<emphasis role=\"strong\">例</emphasis><literal>auto</literal> (デフォルト) "
"| <literal>on_close</literal> | <literal>after_transaction</literal> | "
"<literal>after_statement</literal>"

#. Tag: para
#, no-c-format
msgid ""
"This setting only affects <literal>Session</literal>s returned from "
"<literal>SessionFactory.openSession</literal>. For <literal>Session</"
"literal>s obtained through <literal>SessionFactory.getCurrentSession</"
"literal>, the <literal>CurrentSessionContext</literal> implementation "
"configured for use controls the connection release mode for those "
"<literal>Session</literal>s. See <xref linkend=\"architecture-current-session"
"\" />"
msgstr ""
"この設定は <literal>SessionFactory.openSession</literal> から取得した "
"<literal>Session</literal> だけに効果があります。 <literal>SessionFactory."
"getCurrentSession</literal> を通じて取得した <literal>Session</literal> で"
"は、 <literal>CurrentSessionContext</literal> の実装によって、コネクションの"
"リリースモードを設定します。 <xref linkend=\"architecture-current-session\"/"
"> を参照してください。"

#. Tag: entry
#, no-c-format
msgid ""
"<property>hibernate.connection.</property><emphasis>&lt;propertyName&gt;</"
"emphasis>"
msgstr ""
"<property>hibernate.connection.</property><emphasis>&lt;propertyName&gt;</"
"emphasis>"

#. Tag: entry
#, no-c-format
msgid ""
"Pass the JDBC property <emphasis>&lt;propertyName&gt;</emphasis> to "
"<literal>DriverManager.getConnection()</literal>."
msgstr ""
"JDBC プロパティ <emphasis>&lt;propertyName&gt;</emphasis> を "
"<literal>DriverManager.getConnection()</literal> に渡します。"

#. Tag: entry
#, fuzzy, no-c-format
msgid ""
"<property>hibernate.jndi.</property><emphasis>&lt;propertyName&gt;</emphasis>"
msgstr ""
"<literal>hibernate.jndi.</literal><emphasis>&lt;property&gt;</emphasis> を"
"使って、システムプロパティとして"

#. Tag: entry
#, no-c-format
msgid ""
"Pass the property <emphasis>&lt;propertyName&gt;</emphasis> to the JNDI "
"<literal>InitialContextFactory</literal>."
msgstr ""
"プロパティ <emphasis>&lt;propertyName&gt;</emphasis> を JNDI "
"<literal>InitialContextFactory</literal> に渡します。"

#. Tag: title
#, no-c-format
msgid "Hibernate Cache Properties"
msgstr "Hibernate キャッシュプロパティ"

#. Tag: entry
#, no-c-format
msgid "<literal>hibernate.cache.provider_class</literal>"
msgstr "<literal>hibernate.cache.provider_class</literal>"

#. Tag: entry
#, no-c-format
msgid "The classname of a custom <literal>CacheProvider</literal>."
msgstr "カスタム <literal>CacheProvider</literal> のクラス名です。"

#. Tag: para
#, no-c-format
msgid ""
"<emphasis role=\"strong\">e.g.</emphasis> <literal>classname.of."
"CacheProvider</literal>"
msgstr ""
"<emphasis role=\"strong\">例</emphasis><literal>classname.of.CacheProvider</"
"literal>"

#. Tag: entry
#, no-c-format
msgid "<literal>hibernate.cache.use_minimal_puts</literal>"
msgstr "<literal>hibernate.cache.use_minimal_puts</literal>"

#. Tag: entry
#, no-c-format
msgid ""
"Optimizes second-level cache operation to minimize writes, at the cost of "
"more frequent reads. This setting is most useful for clustered caches and, "
"in Hibernate3, is enabled by default for clustered cache implementations."
msgstr ""
"書き込みを最小限にするために、二次キャッシュの操作を最適化します。その代わり"
"に、読み込みがより頻繁に発生するようになります。このセッティングはクラスタ"
"キャッシュで役に立ちます。 Hibernate3 ではクラスタキャッシュ実装用にデフォル"
"トでは有効になっています。 "

#. Tag: entry
#, no-c-format
msgid "<literal>hibernate.cache.use_query_cache</literal>"
msgstr "<literal>hibernate.cache.use_query_cache</literal>"

#. Tag: entry
#, no-c-format
msgid ""
"Enables the query cache. Individual queries still have to be set cachable."
msgstr ""
"特定のクエリがキャッシュ可能な場合に、クエリキャッシュを有効にします。 "

#. Tag: entry
#, no-c-format
msgid "<literal>hibernate.cache.use_second_level_cache</literal>"
msgstr "<literal>hibernate.cache.use_second_level_cache</literal>"

#. Tag: entry
#, no-c-format
msgid ""
"Can be used to completely disable the second level cache, which is enabled "
"by default for classes which specify a <literal>&lt;cache&gt;</literal> "
"mapping."
msgstr ""
"二次キャッシュを完全に無効にする場合に使います。デフォルトでは有効で、クラス"
"の <literal>&lt;cache&gt;</literal> マッピングで制御します。"

#. Tag: entry
#, no-c-format
msgid "<literal>hibernate.cache.query_cache_factory</literal>"
msgstr "<literal>hibernate.cache.query_cache_factory</literal>"

#. Tag: entry
#, no-c-format
msgid ""
"The classname of a custom <literal>QueryCache</literal> interface, defaults "
"to the built-in <literal>StandardQueryCache</literal>."
msgstr ""
"カスタム <literal>QueryCache</literal> インターフェースのクラス名を指定しま"
"す。デフォルトでは <literal>StandardQueryCache</literal> になります。"

#. Tag: para
#, no-c-format
msgid ""
"<emphasis role=\"strong\">e.g.</emphasis> <literal>classname.of.QueryCache</"
"literal>"
msgstr ""
"<emphasis role=\"strong\">e.g.</emphasis> <literal>classname.of.QueryCache</"
"literal>"

#. Tag: entry
#, no-c-format
msgid "<literal>hibernate.cache.region_prefix</literal>"
msgstr "<literal>hibernate.cache.region_prefix</literal>"

#. Tag: entry
#, no-c-format
msgid "A prefix to use for second-level cache region names."
msgstr "二次キャッシュの領域名の接頭辞です。"

#. Tag: para
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>prefix</literal>"
msgstr "<emphasis role=\"strong\">例</emphasis><literal>prefix</literal>"

#. Tag: entry
#, no-c-format
msgid "<literal>hibernate.cache.use_structured_entries</literal>"
msgstr "<literal>hibernate.cache.use_structured_entries</literal>"

#. Tag: entry
#, no-c-format
msgid ""
"Forces Hibernate to store data in the second-level cache in a more human-"
"friendly format."
msgstr ""
"二次キャッシュに格納するデータを、人が理解しやすいフォーマットにします。 "

#. Tag: title
#, no-c-format
msgid "Hibernate Transaction Properties"
msgstr "Hibernate トランザクションプロパティ"

#. Tag: entry
#, no-c-format
msgid "<literal>hibernate.transaction.factory_class</literal>"
msgstr "<literal>hibernate.transaction.factory_class</literal>"

#. Tag: entry
#, no-c-format
msgid ""
"The classname of a <literal>TransactionFactory</literal> to use with "
"Hibernate <literal>Transaction</literal> API (defaults to "
"<literal>JDBCTransactionFactory</literal>)."
msgstr ""
"Hibernate <literal>Transaction</literal> API と一緒に使われる "
"<literal>TransactionFactory</literal> のクラス名です。 （デフォルトでは "
"<literal>JDBCTransactionFactory</literal> です）。"

#. Tag: para
#, no-c-format
msgid ""
"<emphasis role=\"strong\">e.g.</emphasis> <literal>classname.of."
"TransactionFactory</literal>"
msgstr ""
"<emphasis role=\"strong\">例</emphasis><literal>classname.of."
"TransactionFactory</literal>>"

#. Tag: entry
#, no-c-format
msgid "<literal>jta.UserTransaction</literal>"
msgstr "<literal>jta.UserTransaction</literal>"

#. Tag: entry
#, no-c-format
msgid ""
"A JNDI name used by <literal>JTATransactionFactory</literal> to obtain the "
"JTA <literal>UserTransaction</literal> from the application server."
msgstr ""
"アプリケーションサーバーから JTA <literal>UserTransaction</literal> を取得す"
"るために <literal>JTATransactionFactory</literal> に使われる JNDI 名です。"

#. Tag: entry
#, fuzzy, no-c-format
msgid "<literal>hibernate.transaction.manager_lookup_class</literal>"
msgstr "<literal>hibernate.transaction. manager_lookup_class</literal>"

#. Tag: entry
#, no-c-format
msgid ""
"The classname of a <literal>TransactionManagerLookup</literal>. It is "
"required when JVM-level caching is enabled or when using hilo generator in a "
"JTA environment."
msgstr ""
"<literal>TransactionManagerLookup</literal> のクラス名です。 JTA 環境におい"
"て、 JVM レベルのキャッシュを有効にするときか、 hilo ジェネレータが使用される"
"ときに必要です。"

#. Tag: para
#, no-c-format
msgid ""
"<emphasis role=\"strong\">e.g.</emphasis> <literal>classname.of."
"TransactionManagerLookup</literal>"
msgstr ""
"<emphasis role=\"strong\">例</emphasis><literal>classname.of."
"TransactionManagerLookup</literal>"

#. Tag: entry
#, fuzzy, no-c-format
msgid "<literal>hibernate.transaction.flush_before_completion</literal>"
msgstr "<literal>hibernate.transaction. flush_before_completion</literal>"

#. Tag: entry
#, no-c-format
msgid ""
"If enabled, the session will be automatically flushed during the before "
"completion phase of the transaction. Built-in and automatic session context "
"management is preferred, see <xref linkend=\"architecture-current-session\" /"
">."
msgstr ""
"有効の場合、トランザクションの completion フェーズの前に自動的にセッションを"
"フラッシュします。内蔵の自動セッションコンテキスト管理に適しています。 <xref "
"linkend=\"architecture-current-session\"/> を参照してください。"

#. Tag: entry
#, fuzzy, no-c-format
msgid "<literal>hibernate.transaction.auto_close_session</literal>"
msgstr "<literal>hibernate.transaction. auto_close_session</literal>"

#. Tag: entry
#, no-c-format
msgid ""
"If enabled, the session will be automatically closed during the after "
"completion phase of the transaction. Built-in and automatic session context "
"management is preferred, see <xref linkend=\"architecture-current-session\" /"
">."
msgstr ""
"有効の場合、トランザクションの completion フェーズの後にセッションを自動的に"
"クローズします。内蔵の自動セッションコンテキスト管理に適しています。 <xref "
"linkend=\"architecture-current-session\"/> を参照してください。"

#. Tag: title
#, no-c-format
msgid "Miscellaneous Properties"
msgstr "その他のプロパティ"

#. Tag: entry
#, fuzzy, no-c-format
msgid "<literal>hibernate.current_session_context_class</literal>"
msgstr "<literal>hibernate. current_session_context_class</literal>"

#. Tag: entry
#, no-c-format
msgid ""
"Supply a custom strategy for the scoping of the \"current\" "
"<literal>Session</literal>. See <xref linkend=\"architecture-current-session"
"\" /> for more information about the built-in strategies."
msgstr ""
"「現在の」 <literal>Session</literal> のための（カスタム）戦略を提供します。"
"ビルトインストラテジーに関するその他の情報については <xref linkend="
"\"architecture-current-session\"/> を参照してください。"

#. Tag: para
#, no-c-format
msgid ""
"<emphasis role=\"strong\">e.g.</emphasis> <literal>jta</literal> | "
"<literal>thread</literal> | <literal>managed</literal> | <literal>custom."
"Class</literal>"
msgstr ""
"<emphasis role=\"strong\">例</emphasis><literal>jta</literal> | "
"<literal>thread</literal> | <literal>managed</literal> | <literal>custom."
"Class</literal>"

#. Tag: entry
#, no-c-format
msgid "<literal>hibernate.query.factory_class</literal>"
msgstr "<literal>hibernate.query.factory_class</literal>"

#. Tag: entry
#, no-c-format
msgid "Chooses the HQL parser implementation."
msgstr "HQL パーサーの実装を選択します。"

#. Tag: para
#, no-c-format
msgid ""
"<emphasis role=\"strong\">e.g.</emphasis> <literal>org.hibernate.hql.ast."
"ASTQueryTranslatorFactory</literal> or <literal>org.hibernate.hql.classic."
"ClassicQueryTranslatorFactory</literal>"
msgstr ""
"<emphasis role=\"strong\">例</emphasis><literal>org.hibernate.hql.ast."
"ASTQueryTranslatorFactory</literal> or <literal>org.hibernate.hql.classic."
"ClassicQueryTranslatorFactory</literal>"

#. Tag: entry
#, no-c-format
msgid "<literal>hibernate.query.substitutions</literal>"
msgstr "<literal>hibernate.query.substitutions</literal>"

#. Tag: entry
#, no-c-format
msgid ""
"Is used to map from tokens in Hibernate queries to SQL tokens (tokens might "
"be function or literal names, for example)."
msgstr ""
"HQL と SQL のトークンをマッピングします。 （例えば、トークンは関数やリテラル"
"名です）。"

#. Tag: para
#, no-c-format
msgid ""
"<emphasis role=\"strong\">e.g.</emphasis> <literal>hqlLiteral=SQL_LITERAL, "
"hqlFunction=SQLFUNC</literal>"
msgstr ""
"<emphasis role=\"strong\">例</emphasis><literal>hqlLiteral=SQL_LITERAL, "
"hqlFunction=SQLFUNC</literal>"

#. Tag: entry
#, no-c-format
msgid "<literal>hibernate.hbm2ddl.auto</literal>"
msgstr "<literal>hibernate.hbm2ddl.auto</literal>"

#. Tag: entry
#, no-c-format
msgid ""
"Automatically validates or exports schema DDL to the database when the "
"<literal>SessionFactory</literal> is created. With <literal>create-drop</"
"literal>, the database schema will be dropped when the "
"<literal>SessionFactory</literal> is closed explicitly."
msgstr ""
"<literal>SessionFactory</literal> を生成したときに、自動的にスキーマ DDL を有"
"効にしデータベースに出力します。 <literal>create-drop</literal> の場合、 "
"<literal>SessionFactory</literal> をクローズしたときに、データベーススキーマ"
"をドロップします。"

#. Tag: para
#, no-c-format
msgid ""
"<emphasis role=\"strong\">e.g.</emphasis> <literal>validate</literal> | "
"<literal>update</literal> | <literal>create</literal> | <literal>create-"
"drop</literal>"
msgstr ""
"<emphasis role=\"strong\">例</emphasis> <literal>validate</literal> | "
"<literal>update</literal> | <literal>create</literal> | <literal>create-"
"drop</literal>"

#. Tag: entry
#, fuzzy, no-c-format
msgid "<literal>hibernate.cglib.use_reflection_optimizer</literal>"
msgstr "<literal>hibernate.cglib. use_reflection_optimizer</literal>"

#. Tag: entry
#, no-c-format
msgid ""
"Enables the use of CGLIB instead of runtime reflection (System-level "
"property). Reflection can sometimes be useful when troubleshooting. "
"Hibernate always requires CGLIB even if you turn off the optimizer. You "
"cannot set this property in <literal>hibernate.cfg.xml</literal>."
msgstr ""
"実行時リフレクションの代わりの CGLIB の使用を有効にします （システムレベルの"
"プロパティ） 。リフレクションはトラブルシューティングのときに役立つことがあり"
"ます。オプティマイザをオフにしているときでさえ、 Hibernate には必ず CGLIB が"
"必要なことに注意してください。このプロパティは <literal>hibernate.cfg.xml</"
"literal> で設定できません。"

#. Tag: title
#, no-c-format
msgid "SQL Dialects"
msgstr "SQL 方言（Dialect）"

#. Tag: para
#, no-c-format
msgid ""
"Always set the <literal>hibernate.dialect</literal> property to the correct "
"<literal>org.hibernate.dialect.Dialect</literal> subclass for your database. "
"If you specify a dialect, Hibernate will use sensible defaults for some of "
"the other properties listed above. This means that you will not have to "
"specify them manually."
msgstr ""
"<literal>hibernate.dialect</literal> プロパティには、使用するデータベースの正"
"しい <literal>org.hibernate.dialect.Dialect</literal> のサブクラスを、必ず指"
"定すべきです。しかし方言を指定すれば、 Hibernate は上述したプロパティのいくつ"
"かについて、より適切なデフォルト値を使います。そうすれば、それらを手作業で設"
"定する手間が省けます。"

#. Tag: title
#, no-c-format
msgid "Hibernate SQL Dialects (<literal>hibernate.dialect</literal>)"
msgstr "Hibernate SQL Dialects (<literal>hibernate.dialect</literal>)"

#. Tag: entry
#, no-c-format
msgid "RDBMS"
msgstr "RDBMS"

#. Tag: entry
#, no-c-format
msgid "Dialect"
msgstr "Dialect"

#. Tag: entry
#, no-c-format
msgid "DB2"
msgstr "DB2"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.DB2Dialect</literal>"
msgstr "<literal>org.hibernate.dialect.DB2Dialect</literal>"

#. Tag: entry
#, no-c-format
msgid "DB2 AS/400"
msgstr "DB2 AS/400"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.DB2400Dialect</literal>"
msgstr "<literal>org.hibernate.dialect.DB2400Dialect</literal>"

#. Tag: entry
#, no-c-format
msgid "DB2 OS390"
msgstr "DB2 OS390"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.DB2390Dialect</literal>"
msgstr "<literal>org.hibernate.dialect.DB2390Dialect</literal>"

#. Tag: entry
#, no-c-format
msgid "PostgreSQL"
msgstr "PostgreSQL"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.PostgreSQLDialect</literal>"
msgstr "<literal>org.hibernate.dialect.PostgreSQLDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "MySQL"
msgstr "MySQL"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.MySQLDialect</literal>"
msgstr "<literal>org.hibernate.dialect.MySQLDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "MySQL with InnoDB"
msgstr "MySQL with InnoDB"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.MySQLInnoDBDialect</literal>"
msgstr "<literal>org.hibernate.dialect.MySQLInnoDBDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "MySQL with MyISAM"
msgstr "MySQL with MyISAM"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.MySQLMyISAMDialect</literal>"
msgstr "<literal>org.hibernate.dialect.MySQLMyISAMDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "Oracle (any version)"
msgstr "Oracle （いずれのバージョンでも）"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.OracleDialect</literal>"
msgstr "<literal>org.hibernate.dialect.OracleDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "Oracle 9i"
msgstr "Oracle 9i"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.Oracle9iDialect</literal>"
msgstr "<literal>org.hibernate.dialect.Oracle9iDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "Oracle 10g"
msgstr "Oracle 10g"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.Oracle10gDialect</literal>"
msgstr "<literal>org.hibernate.dialect.Oracle10gDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "Sybase"
msgstr "Sybase"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.SybaseDialect</literal>"
msgstr "<literal>org.hibernate.dialect.SybaseDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "Sybase Anywhere"
msgstr "Sybase Anywhere"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.SybaseAnywhereDialect</literal>"
msgstr "<literal>org.hibernate.dialect.SybaseAnywhereDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "Microsoft SQL Server"
msgstr "Microsoft SQL Server"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.SQLServerDialect</literal>"
msgstr "<literal>org.hibernate.dialect.SQLServerDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "SAP DB"
msgstr "SAP DB"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.SAPDBDialect</literal>"
msgstr "<literal>org.hibernate.dialect.SAPDBDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "Informix"
msgstr "Informix"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.InformixDialect</literal>"
msgstr "<literal>org.hibernate.dialect.InformixDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "HypersonicSQL"
msgstr "HypersonicSQL"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.HSQLDialect</literal>"
msgstr "<literal>org.hibernate.dialect.HSQLDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "Ingres"
msgstr "Ingres"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.IngresDialect</literal>"
msgstr "<literal>org.hibernate.dialect.IngresDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "Progress"
msgstr "Progress"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.ProgressDialect</literal>"
msgstr "<literal>org.hibernate.dialect.ProgressDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "Mckoi SQL"
msgstr "Mckoi SQL"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.MckoiDialect</literal>"
msgstr "<literal>org.hibernate.dialect.MckoiDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "Interbase"
msgstr "Interbase"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.InterbaseDialect</literal>"
msgstr "<literal>org.hibernate.dialect.InterbaseDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "Pointbase"
msgstr "Pointbase"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.PointbaseDialect</literal>"
msgstr "<literal>org.hibernate.dialect.PointbaseDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "FrontBase"
msgstr "FrontBase"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.FrontbaseDialect</literal>"
msgstr "<literal>org.hibernate.dialect.FrontbaseDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "Firebird"
msgstr "Firebird"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.FirebirdDialect</literal>"
msgstr "<literal>org.hibernate.dialect.FirebirdDialect</literal>"

#. Tag: title
#, no-c-format
msgid "Outer Join Fetching"
msgstr "外部結合フェッチ"

#. Tag: para
#, no-c-format
msgid ""
"If your database supports ANSI, Oracle or Sybase style outer joins, "
"<emphasis>outer join fetching</emphasis> will often increase performance by "
"limiting the number of round trips to and from the database. This is, "
"however, at the cost of possibly more work performed by the database itself. "
"Outer join fetching allows a whole graph of objects connected by many-to-"
"one, one-to-many, many-to-many and one-to-one associations to be retrieved "
"in a single SQL <literal>SELECT</literal>."
msgstr ""
"もしデータベースが ANSI か、 Oracle か Sybase スタイルの外部結合をサポートし"
"ている場合、 <emphasis>outer join fetching</emphasis> は、データベースの SQL "
"発行回数を節約しパフォーマンスを良くします（データベース内でより多くの処理コ"
"ストが発生します）。外部結合フェッチは、多対一、一対多、多対多、一対一のオブ"
"ジェクト関連でグループオブジェクトを1つの SQL で <literal>SELECT</literal> し"
"ます。"

#. Tag: para
#, no-c-format
msgid ""
"Outer join fetching can be disabled <emphasis>globally</emphasis> by setting "
"the property <literal>hibernate.max_fetch_depth</literal> to <literal>0</"
"literal>. A setting of <literal>1</literal> or higher enables outer join "
"fetching for one-to-one and many-to-one associations that have been mapped "
"with <literal>fetch=\"join\"</literal>."
msgstr ""
"<literal>hibernate.max_fetch_depth</literal> プロパティの値を <literal>0</"
"literal> にすると外部結合フェッチを <emphasis>すべて</emphasis> 無効にするこ"
"とになります。 <literal>1</literal> やそれ以上の値を設定すると、外部結合"
"フェッチが有効になり、一対一と多対一関連が <literal>fetch=\"join\"</literal> "
"としてマッピングされます。"

#. Tag: para
#, no-c-format
msgid "See <xref linkend=\"performance-fetching\" /> for more information."
msgstr ""
"さらに情報が見たければ <xref linkend=\"performance-fetching\"/> を参照してく"
"ださい。"

#. Tag: title
#, no-c-format
msgid "Binary Streams"
msgstr "バイナリストリーム"

#. Tag: para
#, no-c-format
msgid ""
"Oracle limits the size of <literal>byte</literal> arrays that can be passed "
"to and/or from its JDBC driver. If you wish to use large instances of "
"<literal>binary</literal> or <literal>serializable</literal> type, you "
"should enable <literal>hibernate.jdbc.use_streams_for_binary</literal>. "
"<emphasis>This is a system-level setting only.</emphasis>"
msgstr ""
"Oracle は JDBC ドライバとの間でやりとりされる <literal>byte</literal> 配列の"
"サイズを制限します。 <literal>binary</literal> や <literal>serializable</"
"literal> 型の大きなインスタンスを使いたければ、 <literal>hibernate.jdbc."
"use_streams_for_binary</literal> を有効にしてください。 ただし <emphasis>これ"
"はシステムレベルの設定だけです</emphasis> 。"

#. Tag: title
#, no-c-format
msgid "Second-level and query cache"
msgstr "ニ次キャッシュとクエリキャッシュ"

#. Tag: para
#, no-c-format
msgid ""
"The properties prefixed by <literal>hibernate.cache</literal> allow you to "
"use a process or cluster scoped second-level cache system with Hibernate. "
"See the <xref linkend=\"performance-cache\" /> for more information."
msgstr ""
"<literal>hibernate.cache</literal> プロパティ接頭辞は Hibernate でプロセスや"
"クラスタ二次キャッシュを使うとことを許可します。<xref linkend=\"performance-"
"cache\"/> により多くの詳細があります。"

#. Tag: title
#, no-c-format
msgid "Query Language Substitution"
msgstr "クエリ言語の置き換え"

#. Tag: para
#, no-c-format
msgid ""
"You can define new Hibernate query tokens using <literal>hibernate.query."
"substitutions</literal>. For example:"
msgstr ""
"<literal>hibernate.query.substitutions</literal> を使うことで、新しい "
"Hibernate クエリトークンを定義できます。例："

#. Tag: para
#, no-c-format
msgid ""
"This would cause the tokens <literal>true</literal> and <literal>false</"
"literal> to be translated to integer literals in the generated SQL."
msgstr ""
"これはトークン <literal>true</literal> と <literal>false</literal> を、生成さ"
"れる SQL において整数リテラルに翻訳します。"

#. Tag: para
#, no-c-format
msgid ""
"This would allow you to rename the SQL <literal>LOWER</literal> function."
msgstr ""
"これは SQL の <literal>LOWER</literal> 関数の名前の付け替えを可能にします。"

#. Tag: title
#, no-c-format
msgid "Hibernate statistics"
msgstr "Hibernate 統計"

#. Tag: para
#, no-c-format
msgid ""
"If you enable <literal>hibernate.generate_statistics</literal>, Hibernate "
"exposes a number of metrics that are useful when tuning a running system via "
"<literal>SessionFactory.getStatistics()</literal>. Hibernate can even be "
"configured to expose these statistics via JMX. Read the Javadoc of the "
"interfaces in <literal>org.hibernate.stats</literal> for more information."
msgstr ""
"<literal>hibernate.generate_statistics</literal> を有効にした場合、動作してい"
"るシステムをチューニングするときに、 <literal>SessionFactory.getStatistics()"
"</literal> を経由して、 Hibernate は便利な統計情報を出力します。 JMX を経由し"
"て統計情報を出力することも可能です。 Javadoc の <literal>org.hibernate."
"stats</literal> パッケージ内のインターフェースにはより多くの情報があります。"

#. Tag: title
#, no-c-format
msgid "Logging"
msgstr "ロギング"

#. Tag: para
#, no-c-format
msgid ""
"Hibernate utilizes <ulink url=\"http://www.slf4j.org/\">Simple Logging "
"Facade for Java</ulink> (SLF4J) in order to log various system events. SLF4J "
"can direct your logging output to several logging frameworks (NOP, Simple, "
"log4j version 1.2, JDK 1.4 logging, JCL or logback) depending on your chosen "
"binding. In order to setup logging you will need <filename>slf4j-api.jar</"
"filename> in your classpath together with the jar file for your preferred "
"binding - <filename>slf4j-log4j12.jar</filename> in the case of Log4J. See "
"the SLF4J <ulink url=\"http://www.slf4j.org/manual.html\">documentation</"
"ulink> for more detail. To use Log4j you will also need to place a "
"<filename>log4j.properties</filename> file in your classpath. An example "
"properties file is distributed with Hibernate in the <literal>src/</literal> "
"directory."
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"It is recommended that you familiarize yourself with Hibernate's log "
"messages. A lot of work has been put into making the Hibernate log as "
"detailed as possible, without making it unreadable. It is an essential "
"troubleshooting device. The most interesting log categories are the "
"following:"
msgstr ""
"Hibernate のログメッセージに慣れることを強くおすすめします。 Hibernate のログ"
"は読みやすく、できる限り詳細になるように努力されています。これは必須のトラブ"
"ルシューティングデバイスです。以下に重要なログのカテゴリを示します:"

#. Tag: title
#, no-c-format
msgid "Hibernate Log Categories"
msgstr "Hibernate ログカテゴリ"

#. Tag: entry
#, no-c-format
msgid "Category"
msgstr "カテゴリ"

#. Tag: entry
#, no-c-format
msgid "Function"
msgstr "機能"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.SQL</literal>"
msgstr "<literal>org.hibernate.SQL</literal>"

#. Tag: entry
#, no-c-format
msgid "Log all SQL DML statements as they are executed"
msgstr "実行したすべての SQL（DDL）ステートメントをロギングします。"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.type</literal>"
msgstr "<literal>org.hibernate.type</literal>"

#. Tag: entry
#, no-c-format
msgid "Log all JDBC parameters"
msgstr "すべての JDBC パラメータをロギングします。"

#. Tag: entry
#, fuzzy, no-c-format
msgid "<literal>org.hibernate.tool.hbm2ddl</literal>"
msgstr "<literal>org.hibernate.tool. hbm2ddl</literal>"

#. Tag: entry
#, no-c-format
msgid "Log all SQL DDL statements as they are executed"
msgstr "実行したすべての SQL（DDL）ステートメントをロギングします。"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.pretty</literal>"
msgstr "<literal>org.hibernate.pretty</literal>"

#. Tag: entry
#, no-c-format
msgid ""
"Log the state of all entities (max 20 entities) associated with the session "
"at flush time"
msgstr ""
"session に関連するすべてのエンティティ（最大２０）のフラッシュ時間をロギング"
"します。"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.cache</literal>"
msgstr "<literal>org.hibernate.cache</literal>"

#. Tag: entry
#, no-c-format
msgid "Log all second-level cache activity"
msgstr "すべてのニ次キャッシュの動作をロギングします。"

#. Tag: entry
#, fuzzy, no-c-format
msgid "<literal>org.hibernate.transaction</literal>"
msgstr "<literal>org.hibernate. transaction</literal>"

#. Tag: entry
#, no-c-format
msgid "Log transaction related activity"
msgstr "トランザクションに関連する動作をロギングします。"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.jdbc</literal>"
msgstr "<literal>org.hibernate.jdbc</literal>"

#. Tag: entry
#, no-c-format
msgid "Log all JDBC resource acquisition"
msgstr "JDBC リソース取得をロギングします。"

#. Tag: entry
#, fuzzy, no-c-format
msgid "<literal>org.hibernate.hql.ast.AST</literal>"
msgstr "<literal>org.hibernate.hql. ast.AST</literal>"

#. Tag: entry
#, no-c-format
msgid "Log HQL and SQL ASTs during query parsing"
msgstr "HQL と SQL の AST のクエリパースをロギングします。"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.secure</literal>"
msgstr "<literal>org.hibernate.secure</literal>"

#. Tag: entry
#, no-c-format
msgid "Log all JAAS authorization requests"
msgstr "すべての JAAS 分析をロギングします。"

#. Tag: entry
#, fuzzy, no-c-format
msgid "<literal>org.hibernate</literal>"
msgstr "SessionFactory の JNDI への登録"

#. Tag: entry
#, no-c-format
msgid ""
"Log everything. This is a lot of information but it is useful for "
"troubleshooting"
msgstr ""
"すべてをロギングします。（情報が大量になりますが、トラブルシューティングには"
"便利です）"

#. Tag: para
#, no-c-format
msgid ""
"When developing applications with Hibernate, you should almost always work "
"with <literal>debug</literal> enabled for the category <literal>org."
"hibernate.SQL</literal>, or, alternatively, the property <literal>hibernate."
"show_sql</literal> enabled."
msgstr ""
"Hibernate でアプリケーションを作成するときは、 <literal>org.hibernate.SQL</"
"literal> カテゴリの <literal>debug</literal> を常に有効にしておいたほうが良い"
"でしょう。代替方法として、 <literal>hibernate.show_sql</literal> プロパティを"
"有効にする方法があります。"

#. Tag: title
#, no-c-format
msgid "Implementing a <literal>NamingStrategy</literal>"
msgstr "<literal>NamingStrategy</literal> を選択"

#. Tag: para
#, no-c-format
msgid ""
"The interface <literal>org.hibernate.cfg.NamingStrategy</literal> allows you "
"to specify a \"naming standard\" for database objects and schema elements."
msgstr ""
"インターフェース <literal>net.sf.hibernate.cfg.NamingStrategy</literal> を使"
"うとデータベースオブジェクトとスキーマ要素のための「命名標準」を指定できま"
"す。"

#. Tag: para
#, no-c-format
msgid ""
"You can provide rules for automatically generating database identifiers from "
"Java identifiers or for processing \"logical\" column and table names given "
"in the mapping file into \"physical\" table and column names. This feature "
"helps reduce the verbosity of the mapping document, eliminating repetitive "
"noise (<literal>TBL_</literal> prefixes, for example). The default strategy "
"used by Hibernate is quite minimal."
msgstr ""
"Java の識別子からデータベースの識別子を自動生成するためのルールや、マッピング"
"ファイルで与えた「論理的な」カラムとテーブル名から「物理的な」テーブルとカラ"
"ム名を生成するためのルールを用意することができます。この機能は繰り返しの雑音"
"（例えば <literal>TBL_</literal> プリフィックス）を取り除き、マッピングドキュ"
"メントの冗長さを減らすことに役立ちます。 Hibernate が使うデフォルトの戦略はか"
"なり最小限に近いものです。"

#. Tag: para
#, no-c-format
msgid ""
"You can specify a different strategy by calling <literal>Configuration."
"setNamingStrategy()</literal> before adding mappings:"
msgstr ""
"マッピングを追加する前に <literal>Configuration.setNamingStrategy()</"
"literal> を呼ぶことで以下のように異なる戦略を指定することができます："

#. Tag: para
#, no-c-format
msgid ""
"<literal>org.hibernate.cfg.ImprovedNamingStrategy</literal> is a built-in "
"strategy that might be a useful starting point for some applications."
msgstr ""
"<literal>org.hibernate.cfg.ImprovedNamingStrategy</literal> は組み込みの戦略"
"です。これはいくつかのアプリケーションにとって有用な開始点となるかもしれませ"
"ん。"

#. Tag: title
#, no-c-format
msgid "XML configuration file"
msgstr "XML 設定ファイル"

#. Tag: para
#, no-c-format
msgid ""
"An alternative approach to configuration is to specify a full configuration "
"in a file named <literal>hibernate.cfg.xml</literal>. This file can be used "
"as a replacement for the <literal>hibernate.properties</literal> file or, if "
"both are present, to override properties."
msgstr ""
"もう1つの方法は <literal>hibernate.cfg.xml</literal> という名前のファイルで十"
"分な設定を指定する方法です。このファイルは <literal>hibernate.properties</"
"literal> ファイルの代わりとなります。もし両方のファイルがあれば、プロパティが"
"置き換えられます。"

#. Tag: para
#, no-c-format
msgid ""
"The XML configuration file is by default expected to be in the root of your "
"<literal>CLASSPATH</literal>. Here is an example:"
msgstr ""
"XML 設定ファイルは初期設定で <literal>CLASSPATH</literal> の root に配置して"
"ください。これが例です："

#. Tag: para
#, no-c-format
msgid ""
"The advantage of this approach is the externalization of the mapping file "
"names to configuration. The <literal>hibernate.cfg.xml</literal> is also "
"more convenient once you have to tune the Hibernate cache. It is your choice "
"to use either <literal>hibernate.properties</literal> or <literal>hibernate."
"cfg.xml</literal>. Both are equivalent, except for the above mentioned "
"benefits of using the XML syntax."
msgstr ""
"見てのとおり、この方法の優位性は設定のためのマッピングファイル名を外出しにで"
"きることです。 Hibernate キャッシュをチューニングしなければならないのであれ"
"ば、 <literal>hibernate.cfg.xml</literal> はより便利です。 "
"<literal>hibernate.properties</literal> と <literal>hibernate.cfg.xml</"
"literal> の どちらかを使えることを覚えておいてください。2つは同じもので、違う"
"ところといえば XML 構文を使うことの利点だけです。"

#. Tag: para
#, no-c-format
msgid "With the XML configuration, starting Hibernate is then as simple as:"
msgstr "XML 設定を使うことで、 Hibernate は以下のようにシンプルになります。"

#. Tag: para
#, no-c-format
msgid "You can select a different XML configuration file using:"
msgstr "違う XML 設定ファイルを使うこともできます。"

#. Tag: title
#, no-c-format
msgid "J2EE Application Server integration"
msgstr "J2EE アプリケーションサーバーとの統合"

#. Tag: para
#, no-c-format
msgid "Hibernate has the following integration points for J2EE infrastructure:"
msgstr "Hibernate は J2EE 構造と統合するポイントをサポートしています:"

#. Tag: para
#, no-c-format
msgid ""
"<emphasis>Container-managed datasources</emphasis>: Hibernate can use JDBC "
"connections managed by the container and provided through JNDI. Usually, a "
"JTA compatible <literal>TransactionManager</literal> and a "
"<literal>ResourceManager</literal> take care of transaction management "
"(CMT), especially distributed transaction handling across several "
"datasources. You can also demarcate transaction boundaries programmatically "
"(BMT), or you might want to use the optional Hibernate <literal>Transaction</"
"literal> API for this to keep your code portable."
msgstr ""
"<emphasis>コンテナ管理データソース</emphasis>： Hibernate は JNDI が提供し、"
"コンテナが管理する JDBC コネクションを使用できます。通常、 JTA 準拠の "
"<literal>TransactionManager</literal> と <literal>ResourceManager</literal> "
"がトランザクション管理 (CMT)、特に様々なデータソースにまたがる分散トランザク"
"ションを扱います。当然プログラムでトランザクション境界を指定できます (BMT)。"
"あるいは、記述したコードのポータビリティを保つために、オプションの Hibernate "
"の <literal>Transaction</literal> API を使いたくなるかもしれません。"

#. Tag: para
#, no-c-format
msgid ""
"<emphasis>Automatic JNDI binding</emphasis>: Hibernate can bind its "
"<literal>SessionFactory</literal> to JNDI after startup."
msgstr ""
"<emphasis>自動 JNDI バインディング</emphasis>： Hibernate は JNDI が立ち上"
"がった後に <literal>SessionFactory</literal> を生成します。"

#. Tag: para
#, no-c-format
msgid ""
"<emphasis>JTA Session binding:</emphasis> the Hibernate <literal>Session</"
"literal> can be automatically bound to the scope of JTA transactions. Simply "
"lookup the <literal>SessionFactory</literal> from JNDI and get the current "
"<literal>Session</literal>. Let Hibernate manage flushing and closing the "
"<literal>Session</literal> when your JTA transaction completes. Transaction "
"demarcation is either declarative (CMT) or programmatic (BMT/"
"UserTransaction)."
msgstr ""
"<emphasis> JTA セッションバインディング</emphasis>： Hibernate "
"<literal>Session</literal> は自動的に JTA トランザクションのスコープにバイン"
"ドされます。単純に <literal>SessionFactory</literal> を JNDI から lookup し"
"て、現在の <literal>Session</literal> を取得します。 JTA トランザクションが完"
"了したときに、 Hibernateが <literal>Session</literal> をフラッシュし、クロー"
"ズします。トランザクション境界は、宣言 (CMT) することも、プログラム (BMT/"
"UserTransaction) することも可能です。"

#. Tag: para
#, no-c-format
msgid ""
"<emphasis>JMX deployment:</emphasis> if you have a JMX capable application "
"server (e.g. JBoss AS), you can choose to deploy Hibernate as a managed "
"MBean. This saves you the one line startup code to build your "
"<literal>SessionFactory</literal> from a <literal>Configuration</literal>. "
"The container will startup your <literal>HibernateService</literal> and also "
"take care of service dependencies (datasource has to be available before "
"Hibernate starts, etc)."
msgstr ""
"<emphasis> JMX デプロイメント:</emphasis> もし JMX が使用可能なアプリケーショ"
"ンサーバー（例えば JBoss AS） がある場合、 Hibernate を MBean としてデプロイ"
"することを選べます。これは <literal>Configuration</literal> から "
"<literal>SessionFactory</literal> を生成するコードを無くすことができます。コ"
"ンテナは <literal>HibernateService</literal> を起動し、サービスの依存を理想的"
"に管理します（データソースは Hibernate やその他が起動する前に使用できるように"
"しなければなりません）。"

#. Tag: para
#, no-c-format
msgid ""
"Depending on your environment, you might have to set the configuration "
"option <literal>hibernate.connection.aggressive_release</literal> to true if "
"your application server shows \"connection containment\" exceptions."
msgstr ""
"環境に依存しますが、もしアプリケーションサーバーが \"connection containment"
"\" の例外を出す場合、設定のオプション <literal>hibernate.connection."
"aggressive_release</literal> を true にしてください。"

#. Tag: title
#, no-c-format
msgid "Transaction strategy configuration"
msgstr "トランザクション戦略設定"

#. Tag: para
#, no-c-format
msgid ""
"The Hibernate <literal>Session</literal> API is independent of any "
"transaction demarcation system in your architecture. If you let Hibernate "
"use JDBC directly through a connection pool, you can begin and end your "
"transactions by calling the JDBC API. If you run in a J2EE application "
"server, you might want to use bean-managed transactions and call the JTA API "
"and <literal>UserTransaction</literal> when needed."
msgstr ""
"Hibernate <literal>Session</literal> API は、アーキテクチャ内のシステムの管轄"
"であるあらゆるトランザクションに依存しません。もしコネクションプールの JDBC "
"を直接使いたい場合、 JDBC API から トランザクションを呼ぶことができます。も"
"し、 J2EE アプリケーションサーバーで動作させるなら、 Bean 管理トランザクショ"
"ンを使い、必要に応じて <literal>UserTransaction</literal> を JTA API から呼ぶ"
"ことになるでしょう。"

#. Tag: para
#, no-c-format
msgid ""
"To keep your code portable between these two (and other) environments we "
"recommend the optional Hibernate <literal>Transaction</literal> API, which "
"wraps and hides the underlying system. You have to specify a factory class "
"for <literal>Transaction</literal> instances by setting the Hibernate "
"configuration property <literal>hibernate.transaction.factory_class</"
"literal>."
msgstr ""
"2つ（それ以上）の環境で互換性のあるコードを維持するために、オプションとして根"
"本的なシステムをラッピングする Hibernate <literal>Transaction</literal> API "
"を推奨します。 Hibernate 設定プロパティの <literal>hibernate.transaction."
"factory_class</literal> を設定することで、ある特定の <literal>Transaction</"
"literal> クラスのインスタンスを持つことができます。"

#. Tag: para
#, no-c-format
msgid "There are three standard, or built-in, choices:"
msgstr "3つの基本的な（既にある）選択を挙げます："

#. Tag: term
#, no-c-format
msgid "<literal>org.hibernate.transaction.JDBCTransactionFactory</literal>"
msgstr "<literal>org.hibernate.transaction.JDBCTransactionFactory</literal>"

#. Tag: para
#, no-c-format
msgid "delegates to database (JDBC) transactions (default)"
msgstr "データベース (JDBC) トランザクションに委譲します（デフォルト）"

#. Tag: term
#, no-c-format
msgid "<literal>org.hibernate.transaction.JTATransactionFactory</literal>"
msgstr "<literal>org.hibernate.transaction.JTATransactionFactory</literal>"

#. Tag: para
#, no-c-format
msgid ""
"delegates to container-managed transactions if an existing transaction is "
"underway in this context (for example, EJB session bean method). Otherwise, "
"a new transaction is started and bean-managed transactions are used."
msgstr ""
"もし、このコンテキスト（例えば、 EJB セッション Bean メソッド）で進行中のトラ"
"ンザクションが存在する場合、コンテナ管理トランザクションに委譲します。そうで"
"ない場合は、新しいトランザクションが開始されており、 Bean 管理トランザクショ"
"ンが使われます。"

#. Tag: term
#, no-c-format
msgid "<literal>org.hibernate.transaction.CMTTransactionFactory</literal>"
msgstr "<literal>org.hibernate.transaction.CMTTransactionFactory</literal>"

#. Tag: para
#, no-c-format
msgid "delegates to container-managed JTA transactions"
msgstr "コンテナ管理 JTA トランザクションに委譲します"

#. Tag: para
#, no-c-format
msgid ""
"You can also define your own transaction strategies (for a CORBA transaction "
"service, for example)."
msgstr ""
"自分自身のトランザクション戦略（例えば、 CORBA トランザクションサービス）を定"
"義することもできます。"

#. Tag: para
#, no-c-format
msgid ""
"Some features in Hibernate (i.e., the second level cache, Contextual "
"Sessions with JTA, etc.) require access to the JTA "
"<literal>TransactionManager</literal> in a managed environment. In an "
"application server, since J2EE does not standardize a single mechanism, you "
"have to specify how Hibernate should obtain a reference to the "
"<literal>TransactionManager</literal>:"
msgstr ""
"Hibernate のいくつかの機能（例えば、二次キャッシュ、 JTA によるコンテキスト"
"セッション等）は管理された環境の中の JTA <literal>TransactionManager</"
"literal> へのアクセスを要求します。 J2EE がひとつのメカニズムに規格化されてい"
"ないので、アプリケーションサーバーにおいて、 Hibernateが "
"<literal>TransactionManager</literal> のリファレンスを取得する方法を明確にす"
"る必要があります。"

#. Tag: title
#, no-c-format
msgid "JTA TransactionManagers"
msgstr "JTA トランザクションマネージャ"

#. Tag: entry
#, no-c-format
msgid "Transaction Factory"
msgstr "Transaction Factory"

#. Tag: entry
#, no-c-format
msgid "Application Server"
msgstr "Application Server"

#. Tag: entry
#, fuzzy, no-c-format
msgid ""
"<literal>org.hibernate.transaction.JBossTransactionManagerLookup</literal>"
msgstr ""
"<literal>org.hibernate.transaction. JBossTransactionManagerLookup</literal>"

#. Tag: entry
#, no-c-format
msgid "JBoss"
msgstr "JBoss"

#. Tag: entry
#, fuzzy, no-c-format
msgid ""
"<literal>org.hibernate.transaction.WeblogicTransactionManagerLookup</literal>"
msgstr ""
"<literal>org.hibernate.transaction. WeblogicTransactionManagerLookup</"
"literal>"

#. Tag: entry
#, no-c-format
msgid "Weblogic"
msgstr "Weblogic"

#. Tag: entry
#, fuzzy, no-c-format
msgid ""
"<literal>org.hibernate.transaction.WebSphereTransactionManagerLookup</"
"literal>"
msgstr ""
"<literal>org.hibernate.transaction. WebSphereTransactionManagerLookup</"
"literal>"

#. Tag: entry
#, no-c-format
msgid "WebSphere"
msgstr "WebSphere"

#. Tag: entry
#, fuzzy, no-c-format
msgid ""
"<literal>org.hibernate.transaction.WebSphereExtendedJTATransactionLookup</"
"literal>"
msgstr ""
"<literal>org.hibernate.transaction. WebSphereExtendedJTATransactionLookup</"
"literal>"

#. Tag: entry
#, no-c-format
msgid "WebSphere 6"
msgstr "WebSphere 6"

#. Tag: entry
#, fuzzy, no-c-format
msgid ""
"<literal>org.hibernate.transaction.OrionTransactionManagerLookup</literal>"
msgstr ""
"<literal>org.hibernate.transaction. OrionTransactionManagerLookup</literal>"

#. Tag: entry
#, no-c-format
msgid "Orion"
msgstr "Orion"

#. Tag: entry
#, fuzzy, no-c-format
msgid ""
"<literal>org.hibernate.transaction.ResinTransactionManagerLookup</literal>"
msgstr ""
"<literal>org.hibernate.transaction. ResinTransactionManagerLookup</literal>"

#. Tag: entry
#, no-c-format
msgid "Resin"
msgstr "Resin"

#. Tag: entry
#, fuzzy, no-c-format
msgid ""
"<literal>org.hibernate.transaction.JOTMTransactionManagerLookup</literal>"
msgstr ""
"<literal>org.hibernate.transaction. JOTMTransactionManagerLookup</literal>"

#. Tag: entry
#, no-c-format
msgid "JOTM"
msgstr "JOTM"

#. Tag: entry
#, fuzzy, no-c-format
msgid ""
"<literal>org.hibernate.transaction.JOnASTransactionManagerLookup</literal>"
msgstr ""
"<literal>org.hibernate.transaction. JOnASTransactionManagerLookup</literal>"

#. Tag: entry
#, no-c-format
msgid "JOnAS"
msgstr "JOnAS"

#. Tag: entry
#, fuzzy, no-c-format
msgid ""
"<literal>org.hibernate.transaction.JRun4TransactionManagerLookup</literal>"
msgstr ""
"<literal>org.hibernate.transaction. JRun4TransactionManagerLookup</literal>"

#. Tag: entry
#, no-c-format
msgid "JRun4"
msgstr "JRun4"

#. Tag: entry
#, fuzzy, no-c-format
msgid ""
"<literal>org.hibernate.transaction.BESTransactionManagerLookup</literal>"
msgstr ""
"<literal>org.hibernate.transaction. BESTransactionManagerLookup</literal>"

#. Tag: entry
#, no-c-format
msgid "Borland ES"
msgstr "Borland ES"

#. Tag: title
#, no-c-format
msgid "JNDI-bound <literal>SessionFactory</literal>"
msgstr "<literal>SessionFactory</literal> の JNDI への登録"

#. Tag: para
#, no-c-format
msgid ""
"A JNDI-bound Hibernate <literal>SessionFactory</literal> can simplify the "
"lookup function of the factory and create new <literal>Session</literal>s. "
"This is not, however, related to a JNDI bound <literal>Datasource</literal>; "
"both simply use the same registry."
msgstr ""
"JNDI に登録した Hibernate <literal>SessionFactory</literal> はファクトリの"
"ルックアップと新しい <literal>Session</literal> の作成を簡易化します。これは "
"JNDI に登録された <literal>Datasource</literal> には関連せず、両方とも単に同"
"じ登録を使うことに注意してください。"

#. Tag: para
#, no-c-format
msgid ""
"If you wish to have the <literal>SessionFactory</literal> bound to a JNDI "
"namespace, specify a name (e.g. <literal>java:hibernate/SessionFactory</"
"literal>) using the property <literal>hibernate.session_factory_name</"
"literal>. If this property is omitted, the <literal>SessionFactory</literal> "
"will not be bound to JNDI. This is especially useful in environments with a "
"read-only JNDI default implementation (in Tomcat, for example)."
msgstr ""
"もし <literal>SessionFactory</literal> を JNDI ネームスペースに登録したい場"
"合、特別な名前（例えば、 <literal>java:hibernate/SessionFactory</literal> ）"
"を <literal>hibernate.session_factory_name</literal> プロパティに使ってくださ"
"い。もしこのプロパティを省略した場合、 <literal>SessionFactory</literal> は "
"JNDI に登録されません。（これは Tomcat のようなデフォルト実装で JNDI が読み取"
"り専用の環境の場合は特に便利です。）"

#. Tag: para
#, no-c-format
msgid ""
"When binding the <literal>SessionFactory</literal> to JNDI, Hibernate will "
"use the values of <literal>hibernate.jndi.url</literal>, <literal>hibernate."
"jndi.class</literal> to instantiate an initial context. If they are not "
"specified, the default <literal>InitialContext</literal> will be used."
msgstr ""
"<literal>SessionFactory</literal> を JNDI に登録するとき、 Hibernate は "
"<literal>hibernate.jndi.url</literal> の値を使用し、<literal>hibernate.jndi."
"class</literal> をイニシャルコンテキストとして具体化します。もし何も設定しな"
"い場合は、デフォルトの <literal>InitialContext</literal> を使用します。"

#. Tag: para
#, no-c-format
msgid ""
"Hibernate will automatically place the <literal>SessionFactory</literal> in "
"JNDI after you call <literal>cfg.buildSessionFactory()</literal>. This means "
"you will have this call in some startup code, or utility class in your "
"application, unless you use JMX deployment with the "
"<literal>HibernateService</literal> (this is discussed later in greater "
"detail)."
msgstr ""
"<literal>cfg.buildSessionFactory()</literal> をコール後 Hibernate は自動的に "
"<literal>SessionFactory</literal> を JNDI に配置します。 "
"<literal>HibernateService</literal> と一緒に JMX デプロイメントを使わない限"
"り、これはこの呼び出しをアプリケーション内の何らかのスタートアップコード（も"
"しくはユーティリティクラス） に配置しなければならないことを意味します（後で議"
"論します）。"

#. Tag: para
#, no-c-format
msgid ""
"If you use a JNDI <literal>SessionFactory</literal>, an EJB or any other "
"class, you can obtain the <literal>SessionFactory</literal> using a JNDI "
"lookup."
msgstr ""
"もし JNDI <literal>SessionFactory</literal> を使う場合、 EJB や他のクラスは "
"JNDI ルックアップを使って <literal>SessionFactory</literal> を取得します。"

#. Tag: para
#, no-c-format
msgid ""
"It is recommended that you bind the <literal>SessionFactory</literal> to "
"JNDI in a managed environment and use a <literal>static</literal> singleton "
"otherwise. To shield your application code from these details, we also "
"recommend to hide the actual lookup code for a <literal>SessionFactory</"
"literal> in a helper class, such as <literal>HibernateUtil.getSessionFactory"
"()</literal>. Note that such a class is also a convenient way to startup "
"Hibernate&mdash;see chapter 1."
msgstr ""
"管理された環境では <literal>SessionFactory</literal> を JNDI にバインドし、そ"
"うでなければ <literal>static</literal> シングルトンを使うことを推奨します。こ"
"ういった詳細からアプリケーションコードを保護するために、 "
"<literal>HibernateUtil.getSessionFactory()</literal> のようなヘルパークラスの"
"中に、 <literal>SessionFactory</literal> をルックアップするコードを隠すことを"
"推奨します。このようなヘルパークラスは Hibernate を開始する便利な手段でもあり"
"ます。 - １章を参照してください。"

#. Tag: title
#, no-c-format
msgid "Current Session context management with JTA"
msgstr "JTA による現在のセッションコンテキストマネージメント"

#. Tag: para
#, no-c-format
msgid ""
"The easiest way to handle <literal>Sessions</literal> and transactions is "
"Hibernate's automatic \"current\" <literal>Session</literal> management. For "
"a discussion of contextual sessions see <xref linkend=\"architecture-current-"
"session\" />. Using the <literal>\"jta\"</literal> session context, if there "
"is no Hibernate <literal>Session</literal> associated with the current JTA "
"transaction, one will be started and associated with that JTA transaction "
"the first time you call <literal>sessionFactory.getCurrentSession()</"
"literal>. The <literal>Session</literal>s retrieved via "
"<literal>getCurrentSession()</literal> in the<literal>\"jta\"</literal> "
"context are set to automatically flush before the transaction completes, "
"close after the transaction completes, and aggressively release JDBC "
"connections after each statement. This allows the <literal>Session</"
"literal>s to be managed by the life cycle of the JTA transaction to which it "
"is associated, keeping user code clean of such management concerns. Your "
"code can either use JTA programmatically through <literal>UserTransaction</"
"literal>, or (recommended for portable code) use the Hibernate "
"<literal>Transaction</literal> API to set transaction boundaries. If you run "
"in an EJB container, declarative transaction demarcation with CMT is "
"preferred."
msgstr ""
"もっとも簡単に <literal>Session</literal> とトランザクションを扱う方法は、 "
"Hibernate が自動的に「現在の」 <literal>Session</literal> を管理することで"
"す。 <xref linkend=\"architecture-current-session\"/> カレントセッションの説"
"明を参照してください。もし <literal>\"jta\"</literal> セッションコンテキスト"
"を使った上で、現在の JTA トランザクションと Hibernate <literal>Session</"
"literal> が関連していない場合は、最初に <literal>sessionFactory."
"getCurrentSession()</literal> をコールし、 JTA トランザクションとの関連付けを"
"行ってください。 <literal>\"jta\"</literal> コンテキストの "
"<literal>getCurrentSession()</literal> を通じて取得した <literal>Session</"
"literal> は、トランザクションが完了する前に自動的にフラッシュし、完了した後に"
"は自動的にクローズします。また、各ステートメント後に JDBC コネクションを積極"
"的にリリースします。これにより JTA トランザクションのライフサイクルで "
"<literal>Session</literal> を管理することができ、ユーザーのコードからそのよう"
"な管理をするコードを排除できます。 <literal>UserTransaction</literal> を通じ"
"て JTA をプログラムで管理することができます。または、（ポータブルなコードであ"
"れば） Hibernate <literal>Transaction</literal> API をトランザクション境界と"
"して使うこともできます。 EJB コンテナを使うときは、 CMT による宣言的トランザ"
"クション境界が好ましいです。"

#. Tag: title
#, no-c-format
msgid "JMX deployment"
msgstr "JMX デプロイメント"

#. Tag: para
#, no-c-format
msgid ""
"The line <literal>cfg.buildSessionFactory()</literal> still has to be "
"executed somewhere to get a <literal>SessionFactory</literal> into JNDI. You "
"can do this either in a <literal>static</literal> initializer block, like "
"the one in <literal>HibernateUtil</literal>, or you can deploy Hibernate as "
"a <emphasis>managed service</emphasis>."
msgstr ""
"<literal>SessionFactory</literal> を JNDI から取得するためには <literal>cfg."
"buildSessionFactory()</literal> 行をどこかで実行していなければなりません。あ"
"なたはこれを、 <literal>static</literal> 初期化ブロック内"
"（ <literal>HibernateUtil</literal> のような）か <emphasis>managed service</"
"emphasis> として Hibernate をデプロイするか、どちらかで実行できます。"

#. Tag: para
#, no-c-format
msgid ""
"Hibernate is distributed with <literal>org.hibernate.jmx.HibernateService</"
"literal> for deployment on an application server with JMX capabilities, such "
"as JBoss AS. The actual deployment and configuration is vendor-specific. "
"Here is an example <literal>jboss-service.xml</literal> for JBoss 4.0.x:"
msgstr ""
"JBoss AS のような JMX の機能でアプリケーションサーバーにデプロイするために "
"<literal>org.hibernate.jmx.HibernateService</literal> を使って、配置します。"
"実際のデプロイメントと設定はベンダー特有です。ここで例として JBoss 4.0.x 用"
"の <literal>jboss-service.xml</literal> を示します。"

#. Tag: para
#, no-c-format
msgid ""
"This file is deployed in a directory called <literal>META-INF</literal> and "
"packaged in a JAR file with the extension <literal>.sar</literal> (service "
"archive). You also need to package Hibernate, its required third-party "
"libraries, your compiled persistent classes, as well as your mapping files "
"in the same archive. Your enterprise beans (usually session beans) can be "
"kept in their own JAR file, but you can include this EJB JAR file in the "
"main service archive to get a single (hot-)deployable unit. Consult the "
"JBoss AS documentation for more information about JMX service and EJB "
"deployment."
msgstr ""
"このファイルは <literal>META-INF</literal> ディレクトリに配置され、 JAR ファ"
"イルを拡張した <literal>.sar</literal> (service archive) でパッケージ化されま"
"す。同様に Hibernate パッケージも必要です。また、 Hibernate はサードパーティ"
"のライブラリも要求します。コンパイルした永続化クラスとそのマッピングファイル"
"も同様にアーカイブ（.sarファイル）に入れます。エンタープライズ Bean （通常は"
"セッション Bean ）は自身の JAR ファイルを保持しますが、1回で（ホット）デプロ"
"イ可能なユニットのためにメインサービスアーカイブとしてこの EJB JAR ファイルを"
"含めることができます。 JBoss AS のドキュメントに JXM サービスと EJB デプロイ"
"メントのより多くの情報があります。"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[Configuration cfg = new Configuration()\n"
#~ "    .addResource(\"Item.hbm.xml\")\n"
#~ "    .addResource(\"Bid.hbm.xml\");]]>"
#~ msgstr ""
#~ "Configuration cfg = new Configuration()\n"
#~ "    .addResource(\"Item.hbm.xml\")\n"
#~ "    .addResource(\"Bid.hbm.xml\");"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[Configuration cfg = new Configuration()\n"
#~ "    .addClass(org.hibernate.auction.Item.class)\n"
#~ "    .addClass(org.hibernate.auction.Bid.class);]]>"
#~ msgstr ""
#~ "Configuration cfg = new Configuration()\n"
#~ "    .addClass(org.hibernate.auction.Item.class)\n"
#~ "    .addClass(org.hibernate.auction.Bid.class);"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[Configuration cfg = new Configuration()\n"
#~ "    .addClass(org.hibernate.auction.Item.class)\n"
#~ "    .addClass(org.hibernate.auction.Bid.class)\n"
#~ "    .setProperty(\"hibernate.dialect\", \"org.hibernate.dialect."
#~ "MySQLInnoDBDialect\")\n"
#~ "    .setProperty(\"hibernate.connection.datasource\", \"java:comp/env/"
#~ "jdbc/test\")\n"
#~ "    .setProperty(\"hibernate.order_updates\", \"true\");]]>"
#~ msgstr ""
#~ "Configuration cfg = new Configuration()\n"
#~ "    .addClass(org.hibernate.auction.Item.class)\n"
#~ "    .addClass(org.hibernate.auction.Bid.class)\n"
#~ "    .setProperty(\"hibernate.dialect\", \"org.hibernate.dialect."
#~ "MySQLInnoDBDialect\")\n"
#~ "    .setProperty(\"hibernate.connection.datasource\", \"java:comp/env/"
#~ "jdbc/test\")\n"
#~ "    .setProperty(\"hibernate.order_updates\", \"true\");"

#, fuzzy
#~ msgid "<![CDATA[SessionFactory sessions = cfg.buildSessionFactory();]]>"
#~ msgstr "SessionFactory sessions = cfg.buildSessionFactory();"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[Session session = sessions.openSession(); // open a new Session]]"
#~ ">"
#~ msgstr "Session session = sessions.openSession(); // open a new Session"

#~ msgid "database user"
#~ msgstr "データベースのユーザー"

#~ msgid "database user password"
#~ msgstr "データベースユーザーパスワード"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[hibernate.connection.driver_class = org.postgresql.Driver\n"
#~ "hibernate.connection.url = jdbc:postgresql://localhost/mydatabase\n"
#~ "hibernate.connection.username = myuser\n"
#~ "hibernate.connection.password = secret\n"
#~ "hibernate.c3p0.min_size=5\n"
#~ "hibernate.c3p0.max_size=20\n"
#~ "hibernate.c3p0.timeout=1800\n"
#~ "hibernate.c3p0.max_statements=50\n"
#~ "hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect]]>"
#~ msgstr ""
#~ "hibernate.connection.driver_class = org.postgresql.Driver\n"
#~ "hibernate.connection.url = jdbc:postgresql://localhost/mydatabase\n"
#~ "hibernate.connection.username = myuser\n"
#~ "hibernate.connection.password = secret\n"
#~ "hibernate.c3p0.min_size=5\n"
#~ "hibernate.c3p0.max_size=20\n"
#~ "hibernate.c3p0.timeout=1800\n"
#~ "hibernate.c3p0.max_statements=50\n"
#~ "hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect"

#~ msgid "datasource JNDI name"
#~ msgstr "データソースの JNDI 名"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[hibernate.connection.datasource = java:/comp/env/jdbc/test\n"
#~ "hibernate.transaction.factory_class = \\\n"
#~ "    org.hibernate.transaction.JTATransactionFactory\n"
#~ "hibernate.transaction.manager_lookup_class = \\\n"
#~ "    org.hibernate.transaction.JBossTransactionManagerLookup\n"
#~ "hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect]]>"
#~ msgstr ""
#~ "hibernate.connection.datasource = java:/comp/env/jdbc/test\n"
#~ "hibernate.transaction.factory_class = &#92;\n"
#~ "    org.hibernate.transaction.JTATransactionFactory\n"
#~ "hibernate.transaction.manager_lookup_class = &#92;\n"
#~ "    org.hibernate.transaction.JBossTransactionManagerLookup\n"
#~ "hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect"

#~ msgid "<entry>DB2</entry>"
#~ msgstr "<entry>DB2</entry>"

#~ msgid "hibernate.query.substitutions true=1, false=0"
#~ msgstr "hibernate.query.substitutions true=1, false=0"

#~ msgid "hibernate.query.substitutions toLowercase=LOWER"
#~ msgstr "hibernate.query.substitutions toLowercase=LOWER"

#~ msgid "org.hibernate"
#~ msgstr "org.hibernate"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[SessionFactory sf = new Configuration()\n"
#~ "    .setNamingStrategy(ImprovedNamingStrategy.INSTANCE)\n"
#~ "    .addFile(\"Item.hbm.xml\")\n"
#~ "    .addFile(\"Bid.hbm.xml\")\n"
#~ "    .buildSessionFactory();]]>"
#~ msgstr ""
#~ "SessionFactory sf = new Configuration()\n"
#~ "    .setNamingStrategy(ImprovedNamingStrategy.INSTANCE)\n"
#~ "    .addFile(\"Item.hbm.xml\")\n"
#~ "    .addFile(\"Bid.hbm.xml\")\n"
#~ "    .buildSessionFactory();"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[<?xml version='1.0' encoding='utf-8'?>\n"
#~ "<!DOCTYPE hibernate-configuration PUBLIC\n"
#~ "    \"-//Hibernate/Hibernate Configuration DTD//EN\"\n"
#~ "    \"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd"
#~ "\">\n"
#~ "\n"
#~ "<hibernate-configuration>\n"
#~ "\n"
#~ "    <!-- a SessionFactory instance listed as /jndi/name -->\n"
#~ "    <session-factory\n"
#~ "        name=\"java:hibernate/SessionFactory\">\n"
#~ "\n"
#~ "        <!-- properties -->\n"
#~ "        <property name=\"connection.datasource\">java:/comp/env/jdbc/"
#~ "MyDB</property>\n"
#~ "        <property name=\"dialect\">org.hibernate.dialect.MySQLDialect</"
#~ "property>\n"
#~ "        <property name=\"show_sql\">false</property>\n"
#~ "        <property name=\"transaction.factory_class\">\n"
#~ "            org.hibernate.transaction.JTATransactionFactory\n"
#~ "        </property>\n"
#~ "        <property name=\"jta.UserTransaction\">java:comp/UserTransaction</"
#~ "property>\n"
#~ "\n"
#~ "        <!-- mapping files -->\n"
#~ "        <mapping resource=\"org/hibernate/auction/Item.hbm.xml\"/>\n"
#~ "        <mapping resource=\"org/hibernate/auction/Bid.hbm.xml\"/>\n"
#~ "\n"
#~ "        <!-- cache settings -->\n"
#~ "        <class-cache class=\"org.hibernate.auction.Item\" usage=\"read-"
#~ "write\"/>\n"
#~ "        <class-cache class=\"org.hibernate.auction.Bid\" usage=\"read-only"
#~ "\"/>\n"
#~ "        <collection-cache collection=\"org.hibernate.auction.Item.bids\" "
#~ "usage=\"read-write\"/>\n"
#~ "\n"
#~ "    </session-factory>\n"
#~ "\n"
#~ "</hibernate-configuration>]]>"
#~ msgstr ""
#~ "&lt;?xml version='1.0' encoding='utf-8'?&gt;\n"
#~ "&lt;!DOCTYPE hibernate-configuration PUBLIC\n"
#~ "    \"-//Hibernate/Hibernate Configuration DTD//EN\"\n"
#~ "    \"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd"
#~ "\"&gt;\n"
#~ "\n"
#~ "&lt;hibernate-configuration&gt;\n"
#~ "\n"
#~ "    &lt;!-- a SessionFactory instance listed as /jndi/name --&gt;\n"
#~ "    &lt;session-factory\n"
#~ "        name=\"java:hibernate/SessionFactory\"&gt;\n"
#~ "\n"
#~ "        &lt;!-- properties --&gt;\n"
#~ "        &lt;property name=\"connection.datasource\"&gt;java:/comp/env/"
#~ "jdbc/MyDB&lt;/property&gt;\n"
#~ "        &lt;property name=\"dialect\"&gt;org.hibernate.dialect."
#~ "MySQLDialect&lt;/property&gt;\n"
#~ "        &lt;property name=\"show_sql\"&gt;false&lt;/property&gt;\n"
#~ "        &lt;property name=\"transaction.factory_class\"&gt;\n"
#~ "            org.hibernate.transaction.JTATransactionFactory\n"
#~ "        &lt;/property&gt;\n"
#~ "        &lt;property name=\"jta.UserTransaction\"&gt;java:comp/"
#~ "UserTransaction&lt;/property&gt;\n"
#~ "\n"
#~ "        &lt;!-- mapping files --&gt;\n"
#~ "        &lt;mapping resource=\"org/hibernate/auction/Item.hbm.xml\"/&gt;\n"
#~ "        &lt;mapping resource=\"org/hibernate/auction/Bid.hbm.xml\"/&gt;\n"
#~ "\n"
#~ "        &lt;!-- cache settings --&gt;\n"
#~ "        &lt;class-cache class=\"org.hibernate.auction.Item\" usage=\"read-"
#~ "write\"/&gt;\n"
#~ "        &lt;class-cache class=\"org.hibernate.auction.Bid\" usage=\"read-"
#~ "only\"/&gt;\n"
#~ "        &lt;collection-cache collection=\"org.hibernate.auction.Item.bids"
#~ "\" usage=\"read-write\"/&gt;\n"
#~ "\n"
#~ "    &lt;/session-factory&gt;\n"
#~ "\n"
#~ "&lt;/hibernate-configuration&gt;"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[SessionFactory sf = new Configuration().configure()."
#~ "buildSessionFactory();]]>"
#~ msgstr ""
#~ "SessionFactory sf = new Configuration().configure().buildSessionFactory();"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[SessionFactory sf = new Configuration()\n"
#~ "    .configure(\"catdb.cfg.xml\")\n"
#~ "    .buildSessionFactory();]]>"
#~ msgstr ""
#~ "SessionFactory sf = new Configuration()\n"
#~ "    .configure(\"catdb.cfg.xml\")\n"
#~ "    .buildSessionFactory();"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[<?xml version=\"1.0\"?>\n"
#~ "<server>\n"
#~ "\n"
#~ "<mbean code=\"org.hibernate.jmx.HibernateService\"\n"
#~ "    name=\"jboss.jca:service=HibernateFactory,name=HibernateFactory\">\n"
#~ "\n"
#~ "    <!-- Required services -->\n"
#~ "    <depends>jboss.jca:service=RARDeployer</depends>\n"
#~ "    <depends>jboss.jca:service=LocalTxCM,name=HsqlDS</depends>\n"
#~ "\n"
#~ "    <!-- Bind the Hibernate service to JNDI -->\n"
#~ "    <attribute name=\"JndiName\">java:/hibernate/SessionFactory</"
#~ "attribute>\n"
#~ "\n"
#~ "    <!-- Datasource settings -->\n"
#~ "    <attribute name=\"Datasource\">java:HsqlDS</attribute>\n"
#~ "    <attribute name=\"Dialect\">org.hibernate.dialect.HSQLDialect</"
#~ "attribute>\n"
#~ "\n"
#~ "    <!-- Transaction integration -->\n"
#~ "    <attribute name=\"TransactionStrategy\">\n"
#~ "        org.hibernate.transaction.JTATransactionFactory</attribute>\n"
#~ "    <attribute name=\"TransactionManagerLookupStrategy\">\n"
#~ "        org.hibernate.transaction.JBossTransactionManagerLookup</"
#~ "attribute>\n"
#~ "    <attribute name=\"FlushBeforeCompletionEnabled\">true</attribute>\n"
#~ "    <attribute name=\"AutoCloseSessionEnabled\">true</attribute>\n"
#~ "\n"
#~ "    <!-- Fetching options -->\n"
#~ "    <attribute name=\"MaximumFetchDepth\">5</attribute>\n"
#~ "\n"
#~ "    <!-- Second-level caching -->\n"
#~ "    <attribute name=\"SecondLevelCacheEnabled\">true</attribute>\n"
#~ "    <attribute name=\"CacheProviderClass\">org.hibernate.cache."
#~ "EhCacheProvider</attribute>\n"
#~ "    <attribute name=\"QueryCacheEnabled\">true</attribute>\n"
#~ "\n"
#~ "    <!-- Logging -->\n"
#~ "    <attribute name=\"ShowSqlEnabled\">true</attribute>\n"
#~ "\n"
#~ "    <!-- Mapping files -->\n"
#~ "    <attribute name=\"MapResources\">auction/Item.hbm.xml,auction/"
#~ "Category.hbm.xml</attribute>\n"
#~ "\n"
#~ "</mbean>\n"
#~ "\n"
#~ "</server>]]>"
#~ msgstr ""
#~ "&lt;?xml version=\"1.0\"?&gt;\n"
#~ "&lt;server&gt;\n"
#~ "\n"
#~ "&lt;mbean code=\"org.hibernate.jmx.HibernateService\"\n"
#~ "    name=\"jboss.jca:service=HibernateFactory,name=HibernateFactory"
#~ "\"&gt;\n"
#~ "\n"
#~ "    &lt;!-- Required services --&gt;\n"
#~ "    &lt;depends&gt;jboss.jca:service=RARDeployer&lt;/depends&gt;\n"
#~ "    &lt;depends&gt;jboss.jca:service=LocalTxCM,name=HsqlDS&lt;/"
#~ "depends&gt;\n"
#~ "\n"
#~ "    &lt;!-- Bind the Hibernate service to JNDI --&gt;\n"
#~ "    &lt;attribute name=\"JndiName\"&gt;java:/hibernate/SessionFactory&lt;/"
#~ "attribute&gt;\n"
#~ "\n"
#~ "    &lt;!-- Datasource settings --&gt;\n"
#~ "    &lt;attribute name=\"Datasource\"&gt;java:HsqlDS&lt;/attribute&gt;\n"
#~ "    &lt;attribute name=\"Dialect\"&gt;org.hibernate.dialect."
#~ "HSQLDialect&lt;/attribute&gt;\n"
#~ "\n"
#~ "    &lt;!-- Transaction integration --&gt;\n"
#~ "    &lt;attribute name=\"TransactionStrategy\"&gt;\n"
#~ "        org.hibernate.transaction.JTATransactionFactory&lt;/"
#~ "attribute&gt;\n"
#~ "    &lt;attribute name=\"TransactionManagerLookupStrategy\"&gt;\n"
#~ "        org.hibernate.transaction.JBossTransactionManagerLookup&lt;/"
#~ "attribute&gt;\n"
#~ "    &lt;attribute name=\"FlushBeforeCompletionEnabled\"&gt;true&lt;/"
#~ "attribute&gt;\n"
#~ "    &lt;attribute name=\"AutoCloseSessionEnabled\"&gt;true&lt;/"
#~ "attribute&gt;\n"
#~ "\n"
#~ "    &lt;!-- Fetching options --&gt;\n"
#~ "    &lt;attribute name=\"MaximumFetchDepth\"&gt;5&lt;/attribute&gt;\n"
#~ "\n"
#~ "    &lt;!-- Second-level caching --&gt;\n"
#~ "    &lt;attribute name=\"SecondLevelCacheEnabled\"&gt;true&lt;/"
#~ "attribute&gt;\n"
#~ "    &lt;attribute name=\"CacheProviderClass\"&gt;org.hibernate.cache."
#~ "EhCacheProvider&lt;/attribute&gt;\n"
#~ "    &lt;attribute name=\"QueryCacheEnabled\"&gt;true&lt;/attribute&gt;\n"
#~ "\n"
#~ "    &lt;!-- Logging --&gt;\n"
#~ "    &lt;attribute name=\"ShowSqlEnabled\"&gt;true&lt;/attribute&gt;\n"
#~ "\n"
#~ "    &lt;!-- Mapping files --&gt;\n"
#~ "    &lt;attribute name=\"MapResources\"&gt;auction/Item.hbm.xml,auction/"
#~ "Category.hbm.xml&lt;/attribute&gt;\n"
#~ "\n"
#~ "&lt;/mbean&gt;\n"
#~ "\n"
#~ "&lt;/server&gt;"
