# translation of portability.po to
# Michael H. Smith <mhideo@redhat.com>, 2007.
# Angela Garcia <agarcia@redhat.com>, 2009, 2010.
# translation of Collection_Mapping.po to
# translation of Collection_Mapping.po to
# translation of Collection_Mapping.po to
# translation of Collection_Mapping.po to
# translation of Collection_Mapping.po to
# translation of Collection_Mapping.po to
# translation of Collection_Mapping.po to
# translation of Collection_Mapping.po to
# translation of Collection_Mapping.po to
msgid ""
msgstr ""
"Project-Id-Version: portability\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2010-03-25 06:26+0000\n"
"PO-Revision-Date: 2010-03-17 12:19+1000\n"
"Last-Translator: Angela Garcia <agarcia@redhat.com>\n"
"Language-Team:  <en@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: KBabel 1.11.4\n"

#. Tag: title
#: portability.xml:31
#, no-c-format
msgid "Database Portability Considerations"
msgstr "Consideraciones de la portabilidad de la base de datos"

#. Tag: title
#: portability.xml:34
#, no-c-format
msgid "Portability Basics"
msgstr "Aspectos básicos de la portabilidad"

#. Tag: para
#: portability.xml:36
#, no-c-format
msgid ""
"One of the selling points of Hibernate (and really Object/Relational Mapping "
"as a whole) is the notion of database portability. This could mean an "
"internal IT user migrating from one database vendor to another, or it could "
"mean a framework or deployable application consuming Hibernate to "
"simultaneously target multiple database products by their users. Regardless "
"of the exact scenario, the basic idea is that you want Hibernate to help you "
"run against any number of databases without changes to your code, and "
"ideally without any changes to the mapping metadata."
msgstr ""
"Uno de los aspectos que más vende de Hibernate (y realmente del mapeo objeto/"
"relacional en sí) es la noción de portabilidad de la base de datos. Podría "
"ser el caso de un administrador de sistemas migrando de una base de datos de "
"un vendedor a otro, o podría ser un marco de trabajo o una aplicación "
"desplegable consumiendo Hibernate para que apunte simultáneamente a "
"múltiples productos de bases de datos. Sin importar el escenario exacto, la "
"idea básica es que quiere que Hibernate le ayude a ejecutar frente a "
"cualquier número de bases de datos sin cambiar el código e idealmente sin "
"cambiar los metadatos de mapeo. "

#. Tag: title
#: portability.xml:47
#, no-c-format
msgid "Dialect"
msgstr "Dialecto"

#. Tag: para
#: portability.xml:49
#, no-c-format
msgid ""
"The first line of portability for Hibernate is the dialect, which is a "
"specialization of the <classname>org.hibernate.dialect.Dialect</classname> "
"contract. A dialect encapsulates all the differences in how Hibernate must "
"communicate with a particular database to accomplish some task like getting "
"a sequence value or structuring a SELECT query. Hibernate bundles a wide "
"range of dialects for many of the most popular databases. If you find that "
"your particular database is not among them, it is not terribly difficult to "
"write your own."
msgstr ""
"La primera línea de portabilidad para Hibernate es el dialecto, el cual es "
"una especialización del contrato <classname>org.hibernate.dialect.Dialect</"
"classname>. Un dialecto encapsula todas las diferencias en la manera en que "
"Hibernate debe comunicarse con una base de datos en particular para lograr "
"alguna tarea como el obtener un valor de secuencia o el estructurar una "
"petición SELECT. Hibernate reune un gran rango de dialectos para muchas de "
"las bases de datos más populares. Si encuentra que su base de datos en "
"particular no se encuentra entre estos, no es demasiado dificil es escribir "
"el propio."

#. Tag: title
#: portability.xml:60
#, no-c-format
msgid "Dialect resolution"
msgstr "Resolución del dialecto"

#. Tag: para
#: portability.xml:62
#, no-c-format
msgid ""
"Originally, Hibernate would always require that users specify which dialect "
"to use. In the case of users looking to simultaneously target multiple "
"databases with their build that was problematic. Generally this required "
"their users to configure the Hibernate dialect or defining their own method "
"of setting that value."
msgstr ""
"Originalmente, Hibernate siempre requería que los usuarios especificaran qué "
"dialecto utilizar. En el caso de aquellos usuarios que buscaban apuntar a "
"múltiples bases de datos de manera simultánea con su construcción eso "
"representaba un problema. Generalmente esto requería que los usuarios "
"configuraran el dialecto de Hibernate o que definieran su propio método para "
"establecer ese valor. "

#. Tag: para
#: portability.xml:69
#, no-c-format
msgid ""
"Starting with version 3.2, Hibernate introduced the notion of automatically "
"detecting the dialect to use based on the <interfacename>java.sql."
"DatabaseMetaData</interfacename> obtained from a <interfacename>java.sql."
"Connection</interfacename> to that database. This was much better, expect "
"that this resolution was limited to databases Hibernate know about ahead of "
"time and was in no way configurable or overrideable."
msgstr ""
"Empezando con la versión 3.2, Hibernate introdujo la noción de detectar "
"automáticamente el dialecto a utilizar con base en los <interfacename>java."
"sql.DatabaseMetaData</interfacename> que se obtuvieron de una "
"<interfacename>java.sql.Connection</interfacename> a esa base de datos. Esto "
"era mucho mejor pero esta resolución estaba limitada a las bases de datos "
"que Hibernate conoce por adelantado y de ninguna manera era configurable ni "
"se podía sobreescribir."

#. Tag: para
#: portability.xml:77
#, fuzzy, no-c-format
msgid ""
"Starting with version 3.3, Hibernate has a fare more powerful way to "
"automatically determine which dialect to should be used by relying on a "
"series of delegates which implement the <interfacename>org.hibernate.dialect."
"resolver.DialectResolver</interfacename> which defines only a single method:"
"<programlisting role=\"JAVA\"><![CDATA[public Dialect resolveDialect"
"(DatabaseMetaData metaData) throws JDBCConnectionException]]></"
"programlisting>. The basic contract here is that if the resolver "
"'understands' the given database metadata then it returns the corresponding "
"Dialect; if not it returns null and the process continues to the next "
"resolver. The signature also identifies <exceptionname>org.hibernate."
"exception.JDBCConnectionException</exceptionname> as possibly being thrown. "
"A JDBCConnectionException here is interpreted to imply a \"non transient"
"\" (aka non-recoverable) connection problem and is used to indicate an "
"immediate stop to resolution attempts. All other exceptions result in a "
"warning and continuing on to the next resolver."
msgstr ""
"Empezando por la versión 3.3, Hibernate cuenta con una manera más poderosa "
"de determinar automáticamente cuál dialecto se debe utilizar dependiendo de "
"una serie de delegados, los cuales implementan el <interfacename>org."
"hibernate.dialect.resolver.DialectResolver</interfacename>. Este define un "
"método único:<programlisting>public Dialect resolveDialect(DatabaseMetaData "
"metaData) throws JDBCConnectionException</programlisting>. El contrato "
"básico aquí es que si el resolvedor 'entiende' los metadatos de la base de "
"datos dada entonces retorna el dialecto correspondiente; si no entonces "
"retorna nulo y el proceso continua al siguiente resolvedor. La firma también "
"identifica <exceptionname>org.hibernate.exception.JDBCConnectionException</"
"exceptionname> ya que posiblemente se presenta. Una JDBCConnectionException "
"aquí se interpreta como un problema de conexión \"no transitorio\" (también "
"conocido como no-recuperable) y se utiliza para indicar que se deben detener "
"inmediatamente los intentos de resolución. Todas las otras excepciones "
"resultan en una advertencia y continua al siguiente resolvedor. "

#. Tag: para
#: portability.xml:90
#, no-c-format
msgid ""
"The cool part about these resolvers is that users can also register their "
"own custom resolvers which will be processed ahead of the built-in Hibernate "
"ones. This might be useful in a number of different situations: it allows "
"easy integration for auto-detection of dialects beyond those shipped with "
"HIbernate itself; it allows you to specify to use a custom dialect when a "
"particular database is recognized; etc. To register one or more resolvers, "
"simply specify them (seperated by commas, tabs or spaces) using the "
"'hibernate.dialect_resolvers' configuration setting (see the "
"<constant>DIALECT_RESOLVERS</constant> constant on <classname>org.hibernate."
"cfg.Environment</classname>)."
msgstr ""
"La parte divertida de estos resolvedores es que los usuarios también pueden "
"registrar sus propios resolvedores personalizados, los cuales se procesarán "
"antes de los incluídos en Hibernate. Esto puede llegar a ser útil en un "
"número de situaciones diferentes: permite una fácil integración para la auto-"
"detección de dialectos más allá de los que se envían junto con Hibernate; le "
"permite especificar el uso de un dialecto personalizado cuando se reconoce "
"una base de datos en particular; etc. Para registrar uno o más resolvedores, "
"simplemente especifiquelos (separados por comas o espacios) usando la "
"configuración 'hibernate.dialect_resolvers' (consulte la constante "
"<constant>DIALECT_RESOLVERS</constant> en <classname>org.hibernate.cfg."
"Environment</classname>)."

#. Tag: title
#: portability.xml:103
#, no-c-format
msgid "Identifier generation"
msgstr "Generación del identificador"

#. Tag: para
#: portability.xml:105
#, fuzzy, no-c-format
msgid ""
"When considering portability between databases, another important decision "
"is selecting the identifier generation stratagy you want to use. Originally "
"Hibernate provided the <emphasis>native</emphasis> generator for this "
"purpose, which was intended to select between a <emphasis>sequence</"
"emphasis>, <emphasis>identity</emphasis>, or <emphasis>table</emphasis> "
"strategy depending on the capability of the underlying database. However, an "
"insidious implication of this approach comes about when targtetting some "
"databases which support <emphasis>identity</emphasis> generation and some "
"which do not. <emphasis>identity</emphasis> generation relies on the SQL "
"definition of an IDENTITY (or auto-increment) column to manage the "
"identifier value; it is what is known as a post-insert generation strategy "
"becauase the insert must actually happen before we can know the identifier "
"value. Because Hibernate relies on this identifier value to uniquely "
"reference entities within a persistence context it must then issue the "
"insert immediately when the users requests the entitiy be associated with "
"the session (like via save() e.g.) regardless of current transactional "
"semantics. <note> <para> Hibernate was changed slightly once the implication "
"of this was better understood so that the insert is delayed in cases where "
"that is feasible. </para> </note> The underlying issue is that the actual "
"semanctics of the application itself changes in these cases."
msgstr ""
"Al considerar la portabilidad entre bases de datos, otra decisión importante "
"es el seleccionar la estrategia de generación del identificador que quiere "
"utilizar. Originalmente Hibernate brindaba el generador <emphasis>nativo</"
"emphasis> para este propósito, el cual tenía el objetivo de seleccionar "
"entre las estrategias <emphasis>sequence</emphasis>, <emphasis>identity</"
"emphasis> o <emphasis>table</emphasis> dependiendo de la capacidad de la "
"base de datos subyacente. Sin embargo, una de las implicaciones de este "
"enfoque se presenta al tener como destino algunas bases de datos que "
"soportan la generación de <emphasis>identidad</emphasis> y algunas no. La "
"generación de <emphasis>identidad</emphasis> depende de la definición SQL de "
"una columna IDENTITY (o auto-incremento) para administrar el valor del "
"identificador; es lo que se conoce como una estrategia de generación post-"
"insert ya que el insert de hecho debe tener lugar antes de saber el valor "
"del identificador. Ya que Hibernate depende de este valor de identificador "
"para referenciar de manera única a las entidades dentro de un contexto de "
"persistencia entonces debe emitir el insert inmediatamente cuando los "
"usuarios solicitan que la entidad se asocie con la sesión (por ejemplo, por "
"medio de save()) sin importar la semántica transaccional actual."

#. Tag: para
#: portability.xml:130
#, no-c-format
msgid ""
"Starting with version 3.2.3, Hibernate comes with a set of <ulink url="
"\"http://in.relation.to/2082.lace\">enhanced</ulink> identifier generators "
"targetting portability in a much different way. <note> <para> There are "
"specifically 2 bundled <emphasis>enhanced</emphasis>generators: "
"<itemizedlist> <listitem> <para> <classname>org.hibernate.id.enhanced."
"SequenceStyleGenerator</classname> </para> </listitem> <listitem> <para> "
"<classname>org.hibernate.id.enhanced.TableGenerator</classname> </para> </"
"listitem> </itemizedlist> </para> </note> The idea behind these generators "
"is to port the actual semantics of the identifer value generation to the "
"different databases. For example, the <classname>org.hibernate.id.enhanced."
"SequenceStyleGenerator</classname> mimics the behavior of a sequence on "
"databases which do not support sequences by using a table."
msgstr ""

#. Tag: title
#: portability.xml:159
#, no-c-format
msgid "Database functions"
msgstr "Funciones de la base de datos"

#. Tag: para
#: portability.xml:162
#, no-c-format
msgid ""
"This is an area in Hibernate in need of improvement. In terms of portability "
"concerns, this function handling currently works pretty well from HQL; "
"however, it is quite lacking in all other aspects."
msgstr ""
"Esta es un área en la que Hibernate necesita mejorar. En términos de qué tan "
"portatil puede ser, esta función que se maneja actualmente trabaja bastante "
"bien desde HQL; sin embargo, en otros aspectos le falta mucho. "

#. Tag: para
#: portability.xml:169
#, no-c-format
msgid ""
"SQL functions can be referenced in many ways by users. However, not all "
"databases support the same set of functions. Hibernate, provides a means of "
"mapping a <emphasis>logical</emphasis> function name to a delegate which "
"knows how to render that particular function, perhaps even using a totally "
"different physical function call."
msgstr ""
"Los usuarios pueden referenciar las funciones de SQL de muchas maneras. Sin "
"embargo, no todas las bases de datos soportan el mismo grupo de funciones. "
"Hibernate proporciona una manera de mapear un nombre de una función "
"<emphasis>lógica</emphasis> a un delegado, el cual sabe cómo entregar esa "
"función en particular, tal vez incluso usando una llamada de función física "
"totalmente diferente."

#. Tag: para
#: portability.xml:175
#, no-c-format
msgid ""
"Technically this function registration is handled through the <classname>org."
"hibernate.dialect.function.SQLFunctionRegistry</classname> class which is "
"intended to allow users to provide custom function definitions without "
"having to provide a custom dialect. This specific behavior is not fully "
"completed as of yet."
msgstr ""
"Técnicamente este registro de función se maneja por medio de la clase "
"<classname>org.hibernate.dialect.function.SQLFunctionRegistry</classname>, "
"la cual tiene el propósito de permitirle a los usuarios el proporcionar "
"definiciones de funciones personalizadas sin tener que brindar un dialecto "
"personalizado. Este comportamiento especifico todavía no está del todo "
"completo."

#. Tag: para
#: portability.xml:182
#, no-c-format
msgid ""
"It is sort of implemented such that users can programatically register "
"functions with the <classname>org.hibernate.cfg.Configuration</classname> "
"and those functions will be recognized for HQL."
msgstr ""
"De cierta manera está implementado para que los usuarios puedan registrar "
"programáticamente las funciones con la <classname>org.hibernate.cfg."
"Configuration</classname> y aquellas funciones serán reconocidas por HQL."

#. Tag: title
#: portability.xml:192
#, no-c-format
msgid "Type mappings"
msgstr "Mapeos de tipo"

#. Tag: para
#: portability.xml:194
#, no-c-format
msgid "This section scheduled for completion at a later date..."
msgstr "Esta sección se completará en un futuro cercano..."

#~ msgid ""
#~ "Hibernate was changed slightly once the implication of this was better "
#~ "understood so that the insert is delayed in cases where that is feasible."
#~ msgstr ""
#~ "Hibernate ha cambiado un poco ya que se comprendió un poco mejor las "
#~ "implicaciones de esto de manera que el insert se retrasa en los casos en "
#~ "donde esto posible. "

#~ msgid ""
#~ "The underlying issue is that the actual semanctics of the application "
#~ "itself changes in these cases."
#~ msgstr ""
#~ "El problema subyacente es que la semántica real de la aplicación misma "
#~ "cambia en estos casos."

#~ msgid ""
#~ "Starting with version 3.2.3, Hibernate comes with a set of <ulink url="
#~ "\"http://in.relation.to/2082.lace\">enhanced</ulink> identifier "
#~ "generators targetting portability in a much different way."
#~ msgstr ""
#~ "Desde la versión 3.2.3, Hibernate viene junto con un grupo de generadores "
#~ "identificadores <ulink url=\"http://in.relation.to/2082.lace\">mejorados</"
#~ "ulink> apuntando a la portabilidad de una manera muy diferente."

#~ msgid ""
#~ "There are specifically 2 bundled <emphasis>enhanced</emphasis>generators:"
#~ msgstr ""
#~ "Hay especificamente 2 paquetes de generadores <emphasis>mejorados</"
#~ "emphasis>:"

#~ msgid ""
#~ "<classname>org.hibernate.id.enhanced.SequenceStyleGenerator</classname>"
#~ msgstr ""
#~ "<classname>org.hibernate.id.enhanced.SequenceStyleGenerator</classname>"

#~ msgid "<classname>org.hibernate.id.enhanced.TableGenerator</classname>"
#~ msgstr "<classname>org.hibernate.id.enhanced.TableGenerator</classname>"

#~ msgid ""
#~ "The idea behind these generators is to port the actual semantics of the "
#~ "identifer value generation to the different databases. For example, the "
#~ "<classname>org.hibernate.id.enhanced.SequenceStyleGenerator</classname> "
#~ "mimics the behavior of a sequence on databases which do not support "
#~ "sequences by using a table."
#~ msgstr ""
#~ "La idea detrás de estos generadores es el llevar la semántica de la "
#~ "generación del valor identificador a las diferentes bases de datos. Por "
#~ "ejemplo, el <classname>org.hibernate.id.enhanced.SequenceStyleGenerator</"
#~ "classname> asemeja el comportamiento de una secuencia en las bases de "
#~ "datos que no soportan secuencias usando una tabla."
