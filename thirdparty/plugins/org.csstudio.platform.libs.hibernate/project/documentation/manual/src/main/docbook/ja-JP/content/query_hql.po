# translation of Collection_Mapping.po to
# Xi HUANG <xhuang@redhat.com>, 2007, 2010.
msgid ""
msgstr ""
"Project-Id-Version: Collection_Mapping\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2010-02-11T05:38:15\n"
"PO-Revision-Date: 2010-01-13 17:08+1000\n"
"Last-Translator: Xi HUANG <xhuang@redhat.com>\n"
"Language-Team:  <en@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: KBabel 1.11.4\n"

#. Tag: title
#, no-c-format
msgid "HQL: The Hibernate Query Language"
msgstr "HQL: Hibernate クエリ言語"

#. Tag: para
#, no-c-format
msgid ""
"Hibernate uses a powerful query language (HQL) that is similar in appearance "
"to SQL. Compared with SQL, however, HQL is fully object-oriented and "
"understands notions like inheritance, polymorphism and association."
msgstr ""
"Hibernate は SQL に非常によく似た (意図的に似せた) 強力な問い合わせ言語を備え"
"ています。しかし SQL に似た構文に惑わされないでください。 HQL は完全にオブ"
"ジェクト指向であり、継承、ポリモーフィズム、関連といった概念を理解します。"

#. Tag: title
#, no-c-format
msgid "Case Sensitivity"
msgstr "大文字と小文字の区別"

#. Tag: para
#, no-c-format
msgid ""
"With the exception of names of Java classes and properties, queries are case-"
"insensitive. So <literal>SeLeCT</literal> is the same as <literal>sELEct</"
"literal> is the same as <literal>SELECT</literal>, but <literal>org."
"hibernate.eg.FOO</literal> is not <literal>org.hibernate.eg.Foo</literal>, "
"and <literal>foo.barSet</literal> is not <literal>foo.BARSET</literal>."
msgstr ""
"クエリは Java のクラス名とプロパティ名を除いて大文字、小文字を区別しません。"
"従って <literal>SeLeCT</literal> は <literal>sELEct</literal> と同じで、かつ "
"<literal>SELECT</literal> とも同じですが <literal>org.hibernate.eg.FOO</"
"literal> は <literal>org.hibernate.eg.Foo</literal> とは違い、かつ "
"<literal>foo.barSet</literal> は <literal>foo.BARSET</literal> とも違います。"

#. Tag: para
#, no-c-format
msgid ""
"This manual uses lowercase HQL keywords. Some users find queries with "
"uppercase keywords more readable, but this convention is unsuitable for "
"queries embedded in Java code."
msgstr ""
"このマニュアルでは小文字の HQL キーワードを使用します。大文字のキーワードのク"
"エリの方が読みやすいと感じるユーザーもいると思います。ですが、 Java コード内"
"に埋め込まれたときには見づらいと思います。"

#. Tag: title
#, no-c-format
msgid "The from clause"
msgstr "from 節"

#. Tag: para
#, no-c-format
msgid "The simplest possible Hibernate query is of the form:"
msgstr "もっとも単純な Hibernate クエリは次の形式です:"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"This returns all instances of the class <literal>eg.Cat</literal>. You do "
"not usually need to qualify the class name, since <literal>auto-import</"
"literal> is the default. For example:"
msgstr ""
"これは単純に　 <literal>eg.Cat</literal>　 クラスのインスタンスをすべて返しま"
"す。必ずしもクラス名を修飾する（クラスにパッケージ名を付ける）必要はありませ"
"ん。というのも、 <literal>auto-import</literal> がデフォルトになっているから"
"です。そのためほとんどの場合、このように書くだけで十分です:"

#. Tag: para
#, no-c-format
msgid ""
"In order to refer to the <literal>Cat</literal> in other parts of the query, "
"you will need to assign an <emphasis>alias</emphasis>. For example:"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"This query assigns the alias <literal>cat</literal> to <literal>Cat</"
"literal> instances, so you can use that alias later in the query. The "
"<literal>as</literal> keyword is optional. You could also write:"
msgstr ""
"このクエリでは <literal>Cat</literal> インスタンスに <literal>cat</literal> "
"という別名を付けています。そのため、後でこのクエリ内で、この別名を使うことが"
"できます。 <literal>as</literal> キーワードはオプションです。つまりこのように"
"書くこともできます："

#. Tag: para
#, no-c-format
msgid ""
"Multiple classes can appear, resulting in a cartesian product or \"cross\" "
"join."
msgstr ""
"直積、あるいは「クロス」結合によって多数のクラスが出現することもあります。"

#. Tag: para
#, no-c-format
msgid ""
"It is good practice to name query aliases using an initial lowercase as this "
"is consistent with Java naming standards for local variables (e.g. "
"<literal>domesticCat</literal>)."
msgstr ""
"ローカル変数の Java のネーミング基準と一致した、頭文字に小文字を使ったクエリ"
"の別名を付けることはいい習慣です (例えば <literal>domesticCat</literal>)。"

#. Tag: title
#, no-c-format
msgid "Associations and joins"
msgstr "関連と結合"

#. Tag: para
#, no-c-format
msgid ""
"You can also assign aliases to associated entities or to elements of a "
"collection of values using a <literal>join</literal>. For example:"
msgstr ""
"関連するエンティティあるいは値コレクションの要素にも、 <literal>結合</"
"literal> を使って別名を割り当てることが出来ます。"

#. Tag: para
#, no-c-format
msgid "The supported join types are borrowed from ANSI SQL:"
msgstr "サポートしている結合のタイプは ANSI SQL と同じです。"

#. Tag: para
#, no-c-format
msgid "<literal>inner join</literal>"
msgstr "<literal>inner join</literal>"

#. Tag: para
#, no-c-format
msgid "<literal>left outer join</literal>"
msgstr "<literal>left outer join</literal>"

#. Tag: para
#, no-c-format
msgid "<literal>right outer join</literal>"
msgstr "<literal>right outer join</literal>"

#. Tag: para
#, no-c-format
msgid "<literal>full join</literal> (not usually useful)"
msgstr "<literal>full join</literal> (たいていの場合使いづらい)"

#. Tag: para
#, no-c-format
msgid ""
"The <literal>inner join</literal>, <literal>left outer join</literal> and "
"<literal>right outer join</literal> constructs may be abbreviated."
msgstr ""
"<literal>inner join</literal>、 <literal>left outer join</literal>、 "
"<literal>right outer join</literal> には省略形を使うこともできます。"

#. Tag: para
#, no-c-format
msgid ""
"You may supply extra join conditions using the HQL <literal>with</literal> "
"keyword."
msgstr ""
"HQL の <literal>with</literal> キーワードを使うと、結合条件を付け加えることが"
"できます。"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"A \"fetch\" join allows associations or collections of values to be "
"initialized along with their parent objects using a single select. This is "
"particularly useful in the case of a collection. It effectively overrides "
"the outer join and lazy declarations of the mapping file for associations "
"and collections. See <xref linkend=\"performance-fetching\" /> for more "
"information."
msgstr ""
"加えて、「フェッチ」結合は関連や値のコレクションを親オブジェクトと一緒に1度"
"の select 句で初期化します。これは特にコレクションの場合に有用です。これは実"
"質上、関連とコレクションに対するマッピング定義ファイルの外部結合と lazy 初期"
"化の定義を上書きすることになります。 <xref linkend=\"performance-fetching\"/"
"> により多くの情報があります。"

#. Tag: para
#, no-c-format
msgid ""
"A fetch join does not usually need to assign an alias, because the "
"associated objects should not be used in the <literal>where</literal> clause "
"(or any other clause). The associated objects are also not returned directly "
"in the query results. Instead, they may be accessed via the parent object. "
"The only reason you might need an alias is if you are recursively join "
"fetching a further collection:"
msgstr ""
"結合によるフェッチは関連するオブジェクトが <literal>where</literal> 節 (また"
"は他のどんな節でも) で使われてはならないので、通常別名を割り当てる必要があり"
"ません。また関連オブジェクトは問い合わせ結果として直接返されません。代わりに"
"親オブジェクトを通してアクセスできます。コレクションを再帰的に結合フェッチす"
"る場合のみ、別名が必要になります:"

#. Tag: para
#, no-c-format
msgid ""
"The <literal>fetch</literal> construct cannot be used in queries called "
"using <literal>iterate()</literal> (though <literal>scroll()</literal> can "
"be used). <literal>Fetch</literal> should be used together with "
"<literal>setMaxResults()</literal> or <literal>setFirstResult()</literal>, "
"as these operations are based on the result rows which usually contain "
"duplicates for eager collection fetching, hence, the number of rows is not "
"what you would expect. <literal>Fetch</literal> should also not be used "
"together with impromptu <literal>with</literal> condition. It is possible to "
"create a cartesian product by join fetching more than one collection in a "
"query, so take care in this case. Join fetching multiple collection roles "
"can produce unexpected results for bag mappings, so user discretion is "
"advised when formulating queries in this case. Finally, note that "
"<literal>full join fetch</literal> and <literal>right join fetch</literal> "
"are not meaningful."
msgstr ""
"<literal>fetch</literal> 構文は <literal>iterate()</literal> を使ったクエリ呼"
"び出しで使用できないことに注意してください （一方で <literal>scroll()</"
"literal> は使用できます）。また、これらの操作は結果の行に基づいているため、 "
"<literal>fetch</literal> は <literal>setMaxResults()</literal> や "
"<literal>setFirstResult()</literal> と一緒に使用すべきではありません。通常 "
"eager なコレクションフェッチをすると重複が出てしまうため、あなたが期待するよ"
"うな行数にはならないのです。そしてまた <literal>fetch</literal> は、アドホッ"
"クな <literal>with</literal> 条件を一緒に使うこともできません。一つのクエリで"
"複数のコレクションを結合フェッチすることにより直積を作成できるので、この場合"
"注意してください。また、複数のコレクションに対する結合フェッチは bag マッピン"
"グに対して予期せぬ結果をもたらすことがあるので、この場合のクエリの作成には注"
"意してください。最後に <literal>全外部結合によるフェッチ</literal> と "
"<literal>右外部結合によるフェッチ</literal> は有用ではないことに注意してくだ"
"さい。"

#. Tag: para
#, no-c-format
msgid ""
"If you are using property-level lazy fetching (with bytecode "
"instrumentation), it is possible to force Hibernate to fetch the lazy "
"properties in the first query immediately using <literal>fetch all "
"properties</literal>."
msgstr ""
"もしプロパティレベルの遅延フェッチを使う場合（内部的にバイトコード処理をする"
"場合）、 <literal>fetch all properties</literal> を使うことで Hibernate に遅"
"延プロパティを速やかに（最初のクエリで）フェッチさせることができます。"

#. Tag: title
#, no-c-format
msgid "Forms of join syntax"
msgstr "結合構文の形式"

#. Tag: para
#, no-c-format
msgid ""
"HQL supports two forms of association joining: <literal>implicit</literal> "
"and <literal>explicit</literal>."
msgstr ""
"HQL は２つの関連結合形式をサポートします： <literal>暗黙的</literal> と "
"<literal>明示的</literal>。"

#. Tag: para
#, no-c-format
msgid ""
"The queries shown in the previous section all use the <literal>explicit</"
"literal> form, that is, where the join keyword is explicitly used in the "
"from clause. This is the recommended form."
msgstr ""
"これまでのセクションでお見せした使い方はすべて <literal>明示的な</literal> 形"
"式で、 from 節で明示的に join キーワードを使っています。この形式をおすすめし"
"ます。"

#. Tag: para
#, no-c-format
msgid ""
"The <literal>implicit</literal> form does not use the join keyword. Instead, "
"the associations are \"dereferenced\" using dot-notation. <literal>implicit</"
"literal> joins can appear in any of the HQL clauses. <literal>implicit</"
"literal> join result in inner joins in the resulting SQL statement."
msgstr ""
"<literal>暗黙的</literal> フォームは、 join キーワードを使いません。代わり"
"に、参照する関連にドット表記を使います。 <literal>暗黙的</literal> 結合は、さ"
"まざまな HQL に出てきます。 <literal>暗黙的</literal> 結合の結果は、 SQL ス"
"テートメントの内部結合結果です。"

#. Tag: title
#, no-c-format
msgid "Referring to identifier property"
msgstr "識別子プロパティの参照"

#. Tag: para
#, no-c-format
msgid "There are 2 ways to refer to an entity's identifier property:"
msgstr "エンティティの識別子プロパティは、一般的に2つの方法で参照されます:"

#. Tag: para
#, no-c-format
msgid ""
"The special property (lowercase) <literal>id</literal> may be used to "
"reference the identifier property of an entity <emphasis>provided that the "
"entity does not define a non-identifier property named id</emphasis>."
msgstr ""
"特別なプロパティ (小文字) <literal>id</literal> は、 <emphasis>id と名付けら"
"れた非識別子プロパティを定義しないエンティティを与えられた</emphasis> エン"
"ティティの識別子プロパティを参照するのに使用されます。"

#. Tag: para
#, no-c-format
msgid ""
"If the entity defines a named identifier property, you can use that property "
"name."
msgstr ""
"もしエンティティが名付けられた識別子プロパティを定義したら、そのプロパティ名"
"を使用できます。"

#. Tag: para
#, no-c-format
msgid ""
"References to composite identifier properties follow the same naming rules. "
"If the entity has a non-identifier property named id, the composite "
"identifier property can only be referenced by its defined named. Otherwise, "
"the special <literal>id</literal> property can be used to reference the "
"identifier property."
msgstr ""
"複合識別子プロパティへの参照は同じ命名ルールに従います。もしエンティティが "
"id と名付けられた非識別子プロパティを持っていたら、複合識別子プロパティはその"
"定義された名前で参照することができます。そうでないと、特別な <literal>id</"
"literal> プロパティは、識別子プロパティを参照するのに使用されます。"

#. Tag: para
#, no-c-format
msgid ""
"Please note that, starting in version 3.2.2, this has changed significantly. "
"In previous versions, <literal>id</literal> <emphasis>always</emphasis> "
"referred to the identifier property regardless of its actual name. A "
"ramification of that decision was that non-identifier properties named "
"<literal>id</literal> could never be referenced in Hibernate queries."
msgstr ""
"注記: これは、バージョン 3.2.2 から大幅に変更しました。前バージョンでは、 "
"<literal>id</literal> は、その実際の名前に関係なく <emphasis>常に</emphasis> "
"識別子プロパティを参照していました。その結果、 <literal>id</literal> と名付け"
"られた非識別子プロパティは、 Hibernate で決して参照されませんでした。"

#. Tag: title
#, no-c-format
msgid "The select clause"
msgstr "Select 節"

#. Tag: para
#, no-c-format
msgid ""
"The <literal>select</literal> clause picks which objects and properties to "
"return in the query result set. Consider the following:"
msgstr ""
"<literal>select</literal> 節は以下のようにどのオブジェクトと属性をクエリリザ"
"ルトセットに返すかを選択します:"

#. Tag: para
#, no-c-format
msgid ""
"The query will select <literal>mate</literal>s of other <literal>Cat</"
"literal>s. You can express this query more compactly as:"
msgstr ""
"上記のクエリは他の <literal>Cat</literal> の <literal>mate</literal> を選択し"
"ます。実際には次のように、より簡潔に表現できます:"

#. Tag: para
#, no-c-format
msgid ""
"Queries can return properties of any value type including properties of "
"component type:"
msgstr ""
"クエリはコンポーネント型のプロパティを含む、あらゆる値型のプロパティも返せま"
"す:"

#. Tag: para
#, no-c-format
msgid ""
"Queries can return multiple objects and/or properties as an array of type "
"<literal>Object[]</literal>:"
msgstr ""
"クエリは複数のオブジェクトと (または) プロパティを <literal>Object[]</"
"literal> 型の配列として返せます。"

#. Tag: para
#, no-c-format
msgid "Or as a <literal>List</literal>:"
msgstr "もしくは <literal>List</literal> として、"

#. Tag: para
#, no-c-format
msgid ""
"Or - assuming that the class <literal>Family</literal> has an appropriate "
"constructor - as an actual typesafe Java object:"
msgstr ""
"あるいは <literal>Family</literal> クラスが適切なコンストラクタを持っていると"
"するならば、"

#. Tag: para
#, no-c-format
msgid ""
"You can assign aliases to selected expressions using <literal>as</literal>:"
msgstr "select 節に <literal>as</literal> を使って別名をつけることもできます。"

#. Tag: para
#, no-c-format
msgid ""
"This is most useful when used together with <literal>select new map</"
"literal>:"
msgstr "<literal>select new map</literal> と一緒に使うときに最も役立ちます："

#. Tag: para
#, no-c-format
msgid ""
"This query returns a <literal>Map</literal> from aliases to selected values."
msgstr ""
"このクエリは別名から select した値へ <literal>Map</literal> を返します。"

#. Tag: title
#, no-c-format
msgid "Aggregate functions"
msgstr "集約関数"

#. Tag: para
#, no-c-format
msgid ""
"HQL queries can even return the results of aggregate functions on properties:"
msgstr "HQL のクエリはプロパティの集約関数の結果も返せます："

#. Tag: para
#, no-c-format
msgid "The supported aggregate functions are:"
msgstr "サポートしている集約関数は以下のものです。"

#. Tag: para
#, fuzzy, no-c-format
msgid "<literal>avg(...), sum(...), min(...), max(...)</literal>"
msgstr "<literal>avg(...), sum(...), min(...), max(...)</literal>"

#. Tag: para
#, no-c-format
msgid "<literal>count(*)</literal>"
msgstr "<literal>count(*)</literal>"

#. Tag: para
#, fuzzy, no-c-format
msgid "<literal>count(...), count(distinct ...), count(all...)</literal>"
msgstr "<literal>count(...), count(distinct ...), count(all...)</literal>"

#. Tag: para
#, no-c-format
msgid ""
"You can use arithmetic operators, concatenation, and recognized SQL "
"functions in the select clause:"
msgstr ""
"select 節において算術操作、連結と承認された SQL 関数を使うことができます:"

#. Tag: para
#, no-c-format
msgid ""
"The <literal>distinct</literal> and <literal>all</literal> keywords can be "
"used and have the same semantics as in SQL."
msgstr ""
"SQL と同じ意味を持つ <literal>distinct</literal> と <literal>all</literal> "
"キーワードを使うことができます。"

#. Tag: title
#, no-c-format
msgid "Polymorphic queries"
msgstr "ポリモーフィズムを使ったクエリ"

#. Tag: para
#, no-c-format
msgid "A query like:"
msgstr "次のようなクエリ："

#. Tag: para
#, no-c-format
msgid ""
"returns instances not only of <literal>Cat</literal>, but also of subclasses "
"like <literal>DomesticCat</literal>. Hibernate queries can name "
"<emphasis>any</emphasis> Java class or interface in the <literal>from</"
"literal> clause. The query will return instances of all persistent classes "
"that extend that class or implement the interface. The following query would "
"return all persistent objects:"
msgstr ""
"<literal>Cat</literal> インスタンスだけではなく、 <literal>DomesticCat</"
"literal> のようなサブクラスも返されます。 Hibernate クエリは <emphasis>どんな"
"</emphasis> Java クラスやインターフェースも <literal>from</literal> 節に入れ"
"ることができます。クエリはそのクラスを拡張した、もしくはインターフェースを実"
"装した全ての永続クラスを返します。次のクエリは永続オブジェクトをすべて返しま"
"す:"

#. Tag: para
#, no-c-format
msgid ""
"The interface <literal>Named</literal> might be implemented by various "
"persistent classes:"
msgstr ""
"<literal>Named</literal> インターフェースは様々な永続クラスによって実装されま"
"す。:"

#. Tag: para
#, no-c-format
msgid ""
"These last two queries will require more than one SQL <literal>SELECT</"
"literal>. This means that the <literal>order by</literal> clause does not "
"correctly order the whole result set. It also means you cannot call these "
"queries using <literal>Query.scroll()</literal>."
msgstr ""
"最後の2つのクエリは、2つ以上の SQL <literal>SELECT</literal> を要求しているこ"
"とに注意してください。このことは <literal>order by</literal> 節がリザルトセッ"
"ト全体を正確には整列しないことを意味します (さらにそれは、 <literal>Query."
"scroll()</literal> を使用してこれらのクエリを呼ぶことができないことを意味しま"
"す。)。"

#. Tag: title
#, no-c-format
msgid "The where clause"
msgstr "where 節"

#. Tag: para
#, no-c-format
msgid ""
"The <literal>where</literal> clause allows you to refine the list of "
"instances returned. If no alias exists, you can refer to properties by name:"
msgstr ""
"<literal>where</literal> 節は返されるインスタンスのリストを絞ることができま"
"す。もし別名がない場合、名前でプロパティを参照します。"

#. Tag: para
#, no-c-format
msgid "If there is an alias, use a qualified property name:"
msgstr "もし別名がある場合、修飾名を使ってください:"

#. Tag: para
#, no-c-format
msgid "This returns instances of <literal>Cat</literal> named 'Fritz'."
msgstr ""
"名前が 'Fritz' という <literal>Cat</literal> のインスタンスを返します。"

#. Tag: para
#, no-c-format
msgid "The following query:"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"returns all instances of <literal>Foo</literal> with an instance of "
"<literal>bar</literal> with a <literal>date</literal> property equal to the "
"<literal>startDate</literal> property of the <literal>Foo</literal>. "
"Compound path expressions make the <literal>where</literal> clause extremely "
"powerful. Consider the following:"
msgstr ""
"上の HQL は、 <literal>Foo</literal> の <literal>startDate</literal> プロパ"
"ティと等しい <literal>date</literal> プロパティを持った <literal>bar</"
"literal> インスタンスが存在する、すべての <literal>Foo</literal> インスタンス"
"を返します。コンパウンドパス式は <literal>where</literal> 節を非常に強力にし"
"ます。注目："

#. Tag: para
#, no-c-format
msgid ""
"This query translates to an SQL query with a table (inner) join. For example:"
msgstr ""
"このクエリはテーブル結合（内部結合）を持つ SQL クエリに変換されます。その代わ"
"りに以下のように書くと、"

#. Tag: para
#, no-c-format
msgid "would result in a query that would require four table joins in SQL."
msgstr ""
"もし上のクエリを記述したらクエリ内に4つのテーブル結合を必要とする SQL クエリ"
"に変換されます。"

#. Tag: para
#, no-c-format
msgid ""
"The <literal>=</literal> operator can be used to compare not only "
"properties, but also instances:"
msgstr ""
"<literal>=</literal> 演算子は以下のように、プロパティだけでなくインスタンスを"
"比較するためにも使われます。："

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"The special property (lowercase) <literal>id</literal> can be used to "
"reference the unique identifier of an object. See <xref linkend=\"queryhql-"
"identifier-property\" /> for more information."
msgstr ""
"<literal>id</literal> (小文字) は特別なプロパティであり、オブジェクトのユニー"
"クな識別子を参照するために使用できます。詳細については <xref linkend="
"\"queryhql-identifier-property\"/> を参照ください。"

#. Tag: para
#, no-c-format
msgid "The second query is efficient and does not require a table join."
msgstr "2番目のクエリは効率的です。テーブル結合が必要ありません。"

#. Tag: para
#, no-c-format
msgid ""
"Properties of composite identifiers can also be used. Consider the following "
"example where <literal>Person</literal> has composite identifiers consisting "
"of <literal>country</literal> and <literal>medicareNumber</literal>:"
msgstr ""
"また複合識別子のプロパティも使用できます。ここで <literal>Person</literal> "
"が <literal>country</literal> と <literal>medicareNumber</literal> からなる複"
"合識別子を持つと仮定します。識別子プロパティ参照についての詳細は、前回と同様"
"に <xref linkend=\"queryhql-identifier-property\"/> を参照ください。"

#. Tag: para
#, no-c-format
msgid "Once again, the second query does not require a table join."
msgstr "繰り返しますが、2番目のクエリにはテーブル結合が必要ありません。"

#. Tag: para
#, no-c-format
msgid ""
"See <xref linkend=\"queryhql-identifier-property\" /> for more information "
"regarding referencing identifier properties)"
msgstr ""

#. Tag: para
#, no-c-format
msgid ""
"The special property <literal>class</literal> accesses the discriminator "
"value of an instance in the case of polymorphic persistence. A Java class "
"name embedded in the where clause will be translated to its discriminator "
"value."
msgstr ""
"同様に <literal>class</literal> は特別なプロパティであり、ポリモーフィックな"
"永続化におけるインスタンスの discriminator 値にアクセスします。 where 節に埋"
"め込まれた Java のクラス名はその discriminator 値に変換されます。"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"You can also use components or composite user types, or properties of said "
"component types. See <xref linkend=\"queryhql-components\" /> for more "
"information."
msgstr ""
"またコンポーネントや複合ユーザー型、又はそのコンポーネントのプロパティも使用"
"できます。詳細については、 <xref linkend=\"queryhql-components\"/> を参照下さ"
"い。"

#. Tag: para
#, no-c-format
msgid ""
"An \"any\" type has the special properties <literal>id</literal> and "
"<literal>class</literal> that allows you to express a join in the following "
"way (where <literal>AuditLog.item</literal> is a property mapped with "
"<literal>&lt;any&gt;</literal>):"
msgstr ""
"\"any\" 型は特別なプロパティである <literal>id</literal> と <literal>class</"
"literal> を持ち、以下の方法で結合を表現することを可能にします "
"(<literal>AuditLog.item</literal> は <literal>&lt;any&gt;</literal> でマッピ"
"ングされたプロパティです)。"

#. Tag: para
#, no-c-format
msgid ""
"The <literal>log.item.class</literal> and <literal>payment.class</literal> "
"would refer to the values of completely different database columns in the "
"above query."
msgstr ""
"<literal>log.item.class</literal> と <literal>payment.class</literal> が上記"
"のクエリ中で全く異なるデータベースカラムの値を参照するということに注意してく"
"ださい。"

#. Tag: title
#, no-c-format
msgid "Expressions"
msgstr "Expressions 式"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Expressions used in the <literal>where</literal> clause include the "
"following:"
msgstr ""
"SQL の <literal>where</literal> 節で記述することが出来る式のほとんどを HQL で"
"も記述できます:"

#. Tag: para
#, no-c-format
msgid "mathematical operators: <literal>+, -, *, /</literal>"
msgstr "算術演算子：<literal>+, -, *, /</literal>"

#. Tag: para
#, no-c-format
msgid ""
"binary comparison operators: <literal>=, &gt;=, &lt;=, &lt;&gt;, !=, like</"
"literal>"
msgstr "2項比較演算子：<literal>=, &gt;=, &lt;=, &lt;&gt;, !=, like</literal>"

#. Tag: para
#, no-c-format
msgid "logical operations <literal>and, or, not</literal>"
msgstr "論理演算子：<literal>and, or, not</literal>"

#. Tag: para
#, no-c-format
msgid "Parentheses <literal>( )</literal> that indicates grouping"
msgstr "グループ分けを表す括弧：<literal>( )</literal>"

#. Tag: para
#, no-c-format
msgid ""
"<literal>in</literal>, <literal>not in</literal>, <literal>between</"
"literal>, <literal>is null</literal>, <literal>is not null</literal>, "
"<literal>is empty</literal>, <literal>is not empty</literal>, "
"<literal>member of</literal> and <literal>not member of</literal>"
msgstr ""
"<literal>in</literal>, <literal>not in</literal>, <literal>between</"
"literal>, <literal>is null</literal>, <literal>is not null</literal>, "
"<literal>is empty</literal>, <literal>is not empty</literal>, "
"<literal>member of</literal> and <literal>not member of</literal>"

#. Tag: para
#, no-c-format
msgid ""
"\"Simple\" case, <literal>case ... when ... then ... else ... end</literal>, "
"and \"searched\" case, <literal>case when ... then ... else ... end</literal>"
msgstr ""
"\"シンプル\"な case <literal>case ... when ... then ... else ... end</"
"literal>、 \"探索的\"な case <literal>case when ... then ... else ... end</"
"literal>"

#. Tag: para
#, no-c-format
msgid ""
"string concatenation <literal>...||...</literal> or <literal>concat(...,...)"
"</literal>"
msgstr ""
"ストリングの連結 <literal>...||...</literal> または <literal>concat(...,...)"
"</literal>"

#. Tag: para
#, no-c-format
msgid ""
"<literal>current_date()</literal>, <literal>current_time()</literal>, and "
"<literal>current_timestamp()</literal>"
msgstr ""
"<literal>current_date()</literal>, <literal>current_time()</literal>, "
"<literal>current_timestamp()</literal>"

#. Tag: para
#, no-c-format
msgid ""
"<literal>second(...)</literal>, <literal>minute(...)</literal>, <literal>hour"
"(...)</literal>, <literal>day(...)</literal>, <literal>month(...)</literal>, "
"and <literal>year(...)</literal>"
msgstr ""
"<literal>second(...)</literal>, <literal>minute(...)</literal>, <literal>hour"
"(...)</literal>, <literal>day(...)</literal>, <literal>month(...)</literal>, "
"<literal>year(...)</literal>,"

#. Tag: para
#, no-c-format
msgid ""
"Any function or operator defined by EJB-QL 3.0: <literal>substring(), trim"
"(), lower(), upper(), length(), locate(), abs(), sqrt(), bit_length(), mod()"
"</literal>"
msgstr ""
"EJB-QL 3.0 で定義されている関数や演算子: <literal>substring(), trim(), lower"
"(), upper(), length(), locate(), abs(), sqrt(), bit_length(), mod()</literal>"

#. Tag: para
#, no-c-format
msgid "<literal>coalesce()</literal> and <literal>nullif()</literal>"
msgstr "<literal>coalesce()</literal> と <literal>nullif()</literal>"

#. Tag: para
#, no-c-format
msgid ""
"<literal>str()</literal> for converting numeric or temporal values to a "
"readable string"
msgstr "数字や時間の値を String にコンバートする <literal>str()</literal>"

#. Tag: para
#, no-c-format
msgid ""
"<literal>cast(... as ...)</literal>, where the second argument is the name "
"of a Hibernate type, and <literal>extract(... from ...)</literal> if ANSI "
"<literal>cast()</literal> and <literal>extract()</literal> is supported by "
"the underlying database"
msgstr ""
"2番目の引数が Hibernate 型の名前である <literal>cast(... as ...)</literal> "
"と <literal>extract(... from ...)</literal>。ただし使用するデータベースが "
"ANSI <literal>cast()</literal> と <literal>extract()</literal> をサポートする"
"場合に限ります。"

#. Tag: para
#, no-c-format
msgid ""
"the HQL <literal>index()</literal> function, that applies to aliases of a "
"joined indexed collection"
msgstr ""
"結合したインデックス付きのコレクションの別名に適用される HQL の "
"<literal>index()</literal> 関数。"

#. Tag: para
#, no-c-format
msgid ""
"HQL functions that take collection-valued path expressions: <literal>size(), "
"minelement(), maxelement(), minindex(), maxindex()</literal>, along with the "
"special <literal>elements()</literal> and <literal>indices</literal> "
"functions that can be quantified using <literal>some, all, exists, any, in</"
"literal>."
msgstr ""
"コレクション値のパス式を取る HQL 関数： <literal>size(), minelement(), "
"maxelement(), minindex(), maxindex()</literal> 。 <literal>some, all, "
"exists, any, in</literal> を使って修飾することができる特別な "
"<literal>elements()</literal> と <literal>indices</literal> 関数と一緒に使い"
"ます。"

#. Tag: para
#, no-c-format
msgid ""
"Any database-supported SQL scalar function like <literal>sign()</literal>, "
"<literal>trunc()</literal>, <literal>rtrim()</literal>, and <literal>sin()</"
"literal>"
msgstr ""
"<literal>sign()</literal>、 <literal>trunc()</literal>、 <literal>rtrim()</"
"literal>、 <literal>sin()</literal> のようなデータベースがサポートする SQL ス"
"カラ関数。"

#. Tag: para
#, no-c-format
msgid "JDBC-style positional parameters <literal>?</literal>"
msgstr "JDBC スタイルの位置パラメータ <literal>?</literal>"

#. Tag: para
#, no-c-format
msgid ""
"named parameters <literal>:name</literal>, <literal>:start_date</literal>, "
"and <literal>:x1</literal>"
msgstr ""
"名前付きパラメータ: <literal>:name</literal>, <literal>:start_date</"
"literal>, <literal>:x1</literal>"

#. Tag: para
#, no-c-format
msgid ""
"SQL literals <literal>'foo'</literal>, <literal>69</literal>, <literal>6.66E"
"+2</literal>, <literal>'1970-01-01 10:00:01.0'</literal>"
msgstr ""
"SQL リテラル： <literal>'foo'</literal>、 <literal>69</literal>、 "
"<literal>6.66E+2</literal>、 <literal>'1970-01-01 10:00:01.0'</literal>"

#. Tag: para
#, no-c-format
msgid ""
"Java <literal>public static final</literal> constants <literal>eg.Color."
"TABBY</literal>"
msgstr ""
"Java の <literal>public static final</literal> 定数： <literal>eg.Color."
"TABBY</literal>"

#. Tag: para
#, no-c-format
msgid ""
"<literal>in</literal> and <literal>between</literal> can be used as follows:"
msgstr ""
"<literal>in</literal> と <literal>between</literal> は以下のように使用できま"
"す:"

#. Tag: para
#, no-c-format
msgid "The negated forms can be written as follows:"
msgstr "また、否定形で記述することもできます。"

#. Tag: para
#, no-c-format
msgid ""
"Similarly, <literal>is null</literal> and <literal>is not null</literal> can "
"be used to test for null values."
msgstr ""
"同様に <literal>is null</literal> や <literal>is not null</literal> は null "
"値をテストするために使用できます。"

#. Tag: para
#, no-c-format
msgid ""
"Booleans can be easily used in expressions by declaring HQL query "
"substitutions in Hibernate configuration:"
msgstr ""
"Hibernate 設定ファイルで HQL query substitutions を定義すれば、 boolean 値を"
"式の中で簡単に使用できます："

#. Tag: para
#, no-c-format
msgid ""
"This will replace the keywords <literal>true</literal> and <literal>false</"
"literal> with the literals <literal>1</literal> and <literal>0</literal> in "
"the translated SQL from this HQL:"
msgstr ""
"こうすることで下記の HQL を SQL に変換するときに <literal>true</literal> 、 "
"<literal>false</literal> キーワードは <literal>1</literal> 、 <literal>0</"
"literal> に置き換えられます:"

#. Tag: para
#, no-c-format
msgid ""
"You can test the size of a collection with the special property "
"<literal>size</literal> or the special <literal>size()</literal> function."
msgstr ""
"特別なプロパティ <literal>size</literal>、または特別な関数 <literal>size()</"
"literal> を使ってコレクションのサイズをテストできます:"

#. Tag: para
#, no-c-format
msgid ""
"For indexed collections, you can refer to the minimum and maximum indices "
"using <literal>minindex</literal> and <literal>maxindex</literal> functions. "
"Similarly, you can refer to the minimum and maximum elements of a collection "
"of basic type using the <literal>minelement</literal> and "
"<literal>maxelement</literal> functions. For example:"
msgstr ""
"インデックス付きのコレクションでは、 <literal>minindex</literal> と "
"<literal>maxindex</literal> 関数を使って、インデックスの最小値と最大値を参照"
"できます。同様に、 <literal>minelement</literal> と <literal>maxelement</"
"literal> を使って、基本型のコレクション要素の最小値と最大値を参照できます。"

#. Tag: para
#, no-c-format
msgid ""
"The SQL functions <literal>any, some, all, exists, in</literal> are "
"supported when passed the element or index set of a collection "
"(<literal>elements</literal> and <literal>indices</literal> functions) or "
"the result of a subquery (see below):"
msgstr ""
"コレクションの要素やインデックスのセット（<literal>elements</literal> と "
"<literal>indices</literal> 関数）、または副問い合わせ（後述）の結果が受け取れ"
"るときは、 SQL 関数 <literal>any, some, all, exists, in</literal> がサポート"
"されます。"

#. Tag: para
#, no-c-format
msgid ""
"Note that these constructs - <literal>size</literal>, <literal>elements</"
"literal>, <literal>indices</literal>, <literal>minindex</literal>, "
"<literal>maxindex</literal>, <literal>minelement</literal>, "
"<literal>maxelement</literal> - can only be used in the where clause in "
"Hibernate3."
msgstr ""
"<literal>size</literal>、 <literal>elements</literal>、 <literal>indices</"
"literal>、 <literal>minindex</literal>、 <literal>maxindex</literal>、 "
"<literal>minelement</literal>、 <literal>maxelement</literal> は Hibernate3 "
"の where 節だけで利用可能であることに注意してください。"

#. Tag: para
#, no-c-format
msgid ""
"Elements of indexed collections (arrays, lists, and maps) can be referred to "
"by index in a where clause only:"
msgstr ""
"インデックス付きのコレクション（arrays, lists, maps）の要素は、インデックスで"
"参照できます（where節内でのみ）："

#. Tag: para
#, no-c-format
msgid ""
"The expression inside <literal>[]</literal> can even be an arithmetic "
"expression:"
msgstr "<literal>[]</literal> 内部の式は、算術式でも構いません。"

#. Tag: para
#, no-c-format
msgid ""
"HQL also provides the built-in <literal>index()</literal> function for "
"elements of a one-to-many association or collection of values."
msgstr ""
"一対多関連や値のコレクションの要素に対しては、 HQL は組み込みの "
"<literal>index()</literal> 関数も用意しています。"

#. Tag: para
#, no-c-format
msgid "Scalar SQL functions supported by the underlying database can be used:"
msgstr ""
"ベースとなるデータベースがサポートしているスカラー SQL 関数が使用できます："

#. Tag: para
#, no-c-format
msgid ""
"Consider how much longer and less readable the following query would be in "
"SQL:"
msgstr ""
"もしまだ全てを理解していないなら、下のクエリを SQL でどれだけ長く、読みづらく"
"出来るか考えてください:"

#. Tag: para
#, no-c-format
msgid "<emphasis>Hint:</emphasis> something like"
msgstr "<emphasis>ヒント:</emphasis> 例えばこのように出来ます。"

#. Tag: title
#, no-c-format
msgid "The order by clause"
msgstr "order by 節"

#. Tag: para
#, no-c-format
msgid ""
"The list returned by a query can be ordered by any property of a returned "
"class or components:"
msgstr ""
"クエリが返す list は、返されるクラスやコンポーネントの任意の属性によって並べ"
"替えられます："

#. Tag: para
#, no-c-format
msgid ""
"The optional <literal>asc</literal> or <literal>desc</literal> indicate "
"ascending or descending order respectively."
msgstr ""
"オプションの <literal>asc</literal> と <literal>desc</literal> はそれぞれ昇順"
"か降順の整列を示します。"

#. Tag: title
#, no-c-format
msgid "The group by clause"
msgstr "group by 節"

#. Tag: para
#, no-c-format
msgid ""
"A query that returns aggregate values can be grouped by any property of a "
"returned class or components:"
msgstr ""
"集約値を返すクエリは、返されるクラスやコンポーネントの任意のプロパティによっ"
"てグループ化できます:"

#. Tag: para
#, no-c-format
msgid "A <literal>having</literal> clause is also allowed."
msgstr "<literal>having</literal> 節も使えます。"

#. Tag: para
#, no-c-format
msgid ""
"SQL functions and aggregate functions are allowed in the <literal>having</"
"literal> and <literal>order by</literal> clauses if they are supported by "
"the underlying database (i.e., not in MySQL)."
msgstr ""
"もし使用するデータベースがサポートしているなら、 <literal>having</literal> "
"と <literal>order by</literal> 節で SQL 関数と集約関数が使えます（例えば "
"MySQL にはありません）。"

#. Tag: para
#, no-c-format
msgid ""
"Neither the <literal>group by</literal> clause nor the <literal>order by</"
"literal> clause can contain arithmetic expressions. Hibernate also does not "
"currently expand a grouped entity, so you cannot write <literal>group by "
"cat</literal> if all properties of <literal>cat</literal> are non-"
"aggregated. You have to list all non-aggregated properties explicitly."
msgstr ""
"<literal>group by</literal> 節や <literal>order by</literal> 節に算術式を含む"
"ことができないことに注意してください。また、  Hibernate は今のところグループ"
"エンティティを拡張しないことにも注意してください。したがって、もし "
"<literal>cat</literal> の全てのプロパティが非集合体の場合、 <literal>group "
"by cat</literal> を書くことはできません。全ての非集合体のプロパティを明示的に"
"リストする必要があります。"

#. Tag: title
#, no-c-format
msgid "Subqueries"
msgstr "副問い合わせ"

#. Tag: para
#, no-c-format
msgid ""
"For databases that support subselects, Hibernate supports subqueries within "
"queries. A subquery must be surrounded by parentheses (often by an SQL "
"aggregate function call). Even correlated subqueries (subqueries that refer "
"to an alias in the outer query) are allowed."
msgstr ""
"サブセレクトをサポートするデータベースのため、 Hibernate は副問い合わせをサ"
"ポートしています。副問い合わせは括弧で囲まなければなりません（ SQL の集約関数"
"呼び出しによる事が多いです）。関連副問い合わせ (外部クエリ中の別名を参照する"
"副問い合わせのこと) さえ許可されます。"

#. Tag: para
#, no-c-format
msgid "Note that HQL subqueries can occur only in the select or where clauses."
msgstr ""
"HQL 副問い合わせは、 select または where 節だけで使われることに注意してくださ"
"い。"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Note that subqueries can also utilize <literal>row value constructor</"
"literal> syntax. See <xref linkend=\"queryhql-tuple\" /> for more "
"information."
msgstr ""
"サブクエリは <literal>row value constructor</literal> 構文も使用できることを"
"覚えておいてください。詳細については <xref linkend=\"queryhql-tuple\"/> を参"
"照してください。"

#. Tag: title
#, no-c-format
msgid "HQL examples"
msgstr "HQL の例"

#. Tag: para
#, no-c-format
msgid ""
"Hibernate queries can be quite powerful and complex. In fact, the power of "
"the query language is one of Hibernate's main strengths. The following "
"example queries are similar to queries that have been used on recent "
"projects. Please note that most queries you will write will be much simpler "
"than the following examples."
msgstr ""
"Hibernate クエリは非常に強力で複雑にできます。実際、クエリ言語の威力は "
"Hibernate の主要なセールスポイントの一つです。ここに最近のプロジェクトで使用"
"したクエリと非常によく似た例があります。ほとんどのクエリはこれらの例より簡単"
"に記述できることに注意してください。"

#. Tag: para
#, no-c-format
msgid ""
"The following query returns the order id, number of items, the given minimum "
"total value and the total value of the order for all unpaid orders for a "
"particular customer. The results are ordered by total value. In determining "
"the prices, it uses the current catalog. The resulting SQL query, against "
"the <literal>ORDER</literal>, <literal>ORDER_LINE</literal>, "
"<literal>PRODUCT</literal>, <literal>CATALOG</literal> and <literal>PRICE</"
"literal> tables has four inner joins and an (uncorrelated) subselect."
msgstr ""
"以下のクエリは特定の顧客と与えられた最小の合計値に対する未払い注文の注文 "
"ID 、商品の数、注文の合計を合計値で整列して返します。価格を決定する際、現在の"
"カタログを使います。結果として返される SQL クエリは <literal>ORDER</"
"literal>、 <literal>ORDER_LINE</literal>、 <literal>PRODUCT</literal>、 "
"<literal>CATALOG</literal> および <literal>PRICE</literal> テーブルに対し4つ"
"の内部結合と (関連しない) 副問い合わせを持ちます。"

#. Tag: para
#, no-c-format
msgid ""
"What a monster! Actually, in real life, I'm not very keen on subqueries, so "
"my query was really more like this:"
msgstr ""
"何て巨大なクエリなのでしょう。普段私は副問い合わせをあまり使いません。した"
"がって私のクエリは実際には以下のようになります。:"

#. Tag: para
#, no-c-format
msgid ""
"The next query counts the number of payments in each status, excluding all "
"payments in the <literal>AWAITING_APPROVAL</literal> status where the most "
"recent status change was made by the current user. It translates to an SQL "
"query with two inner joins and a correlated subselect against the "
"<literal>PAYMENT</literal>, <literal>PAYMENT_STATUS</literal> and "
"<literal>PAYMENT_STATUS_CHANGE</literal> tables."
msgstr ""
"次のクエリは各ステータスの支払い数を数えます。ただしすべての支払いが現在の利"
"用者による最新のステータス変更である <literal>AWAITING_APPROVAL</literal> で"
"ある場合を除きます。このクエリは2つの内部結合と <literal>PAYMENT</literal>, "
"<literal>PAYMENT_STATUS</literal> および <literal>PAYMENT_STATUS_CHANGE</"
"literal> テーブルに対する関連副問い合わせを備えた SQL クエリに変換されます。"

#. Tag: para
#, no-c-format
msgid ""
"If the <literal>statusChanges</literal> collection was mapped as a list, "
"instead of a set, the query would have been much simpler to write."
msgstr ""
"もし set の代わりに list として <literal>statusChanges</literal> コレクション"
"をマッピングしたならば、はるかに簡単にクエリを記述できるでしょう。"

#. Tag: para
#, no-c-format
msgid ""
"The next query uses the MS SQL Server <literal>isNull()</literal> function "
"to return all the accounts and unpaid payments for the organization to which "
"the current user belongs. It translates to an SQL query with three inner "
"joins, an outer join and a subselect against the <literal>ACCOUNT</literal>, "
"<literal>PAYMENT</literal>, <literal>PAYMENT_STATUS</literal>, "
"<literal>ACCOUNT_TYPE</literal>, <literal>ORGANIZATION</literal> and "
"<literal>ORG_USER</literal> tables."
msgstr ""
"次のクエリは現在のユーザーが所属する組織に対するアカウントおよび未払いの支払"
"いをすべて返す MS SQL Server の <literal>isNull()</literal> 関数を使用してい"
"ます。このクエリは3つの内部結合と1つの外部結合、そして <literal>ACCOUNT</"
"literal>、 <literal>PAYMENT</literal>、 <literal>PAYMENT_STATUS</literal>、 "
"<literal>ACCOUNT_TYPE</literal>、 <literal>ORGANIZATION</literal> および "
"<literal>ORG_USER</literal> テーブルに対する副問い合わせ持った SQL に変換され"
"ます。"

#. Tag: para
#, no-c-format
msgid ""
"For some databases, we would need to do away with the (correlated) subselect."
msgstr ""
"いくつかのデータベースについては、 (関連させられた) 副問い合わせの使用を避け"
"る必要があるでしょう。"

#. Tag: title
#, no-c-format
msgid "Bulk update and delete"
msgstr "大量の UPDATE と DELETE"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"HQL now supports <literal>update</literal>, <literal>delete</literal> and "
"<literal>insert ... select ...</literal> statements. See <xref linkend="
"\"batch-direct\" /> for more information."
msgstr ""
"HQL は現在 <literal>update</literal> と <literal>delete</literal>、 "
"<literal>insert ... select ...</literal> ステートメントをサポートしています。"
"詳細については <xref linkend=\"batch-direct\"/> を参照ください。"

#. Tag: title
#, no-c-format
msgid "Tips &amp; Tricks"
msgstr "Tips &amp; Tricks"

#. Tag: para
#, no-c-format
msgid "You can count the number of query results without returning them:"
msgstr "実際に結果を返さなくてもクエリの結果数を数えることができます:"

#. Tag: para
#, no-c-format
msgid "To order a result by the size of a collection, use the following query:"
msgstr ""
"コレクションのサイズにより結果を並べ替えるためには以下のクエリを使用します:"

#. Tag: para
#, no-c-format
msgid ""
"If your database supports subselects, you can place a condition upon "
"selection size in the where clause of your query:"
msgstr ""
"使用しているデータベースがサブセレクトをサポートする場合、クエリの where 節で"
"サイズによる選択条件を設定できます:"

#. Tag: para
#, no-c-format
msgid "If your database does not support subselects, use the following query:"
msgstr ""
"使用しているデータベースがサブセレクトをサポートしない場合は、次のクエリを使"
"用してください:"

#. Tag: para
#, no-c-format
msgid ""
"As this solution cannot return a <literal>User</literal> with zero messages "
"because of the inner join, the following form is also useful:"
msgstr ""
"内部結合をしているせいで上の解決法が message の件数がゼロの <literal>User</"
"literal> を返すことができないならば、以下の形式が使えます:"

#. Tag: para
#, no-c-format
msgid "Properties of a JavaBean can be bound to named query parameters:"
msgstr ""
"JavaBean のプロパティは、名前付きのクエリパラメータに結びつけることが出来ま"
"す："

#. Tag: para
#, no-c-format
msgid ""
"Collections are pageable by using the <literal>Query</literal> interface "
"with a filter:"
msgstr ""
"コレクションはフィルタ付き <literal>Query</literal> インターフェースを使用す"
"ることでページをつけることができます:"

#. Tag: para
#, no-c-format
msgid "Collection elements can be ordered or grouped using a query filter:"
msgstr ""
"コレクションの要素はクエリフィルタを使って、並べ替えやグループ分けが出来ます:"

#. Tag: para
#, no-c-format
msgid "You can find the size of a collection without initializing it:"
msgstr "コレクションを初期化せずにコレクションのサイズを得ることができます:"

#. Tag: title
#, no-c-format
msgid "Components"
msgstr "コンポーネント"

#. Tag: para
#, no-c-format
msgid ""
"Components can be used similarly to the simple value types that are used in "
"HQL queries. They can appear in the <literal>select</literal> clause as "
"follows:"
msgstr ""
"HQL クエリでシンプルな値型を使用できるので、コンポーネントは、あらゆる点で使"
"用できます。これは <literal>select</literal> 節の中に現われます:"

#. Tag: para
#, no-c-format
msgid ""
"where the Person's name property is a component. Components can also be used "
"in the <literal>where</literal> clause:"
msgstr ""
"人名のプロパティがコンポーネントの場所。コンポーネントは、 <literal>where</"
"literal> 節でも使用可能です:"

#. Tag: para
#, no-c-format
msgid "Components can also be used in the <literal>order by</literal> clause:"
msgstr "コンポーネントは <literal>order by</literal> 節でも使用可能です:"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Another common use of components is in <link linkend=\"queryhql-tuple\">row "
"value constructors</link>."
msgstr ""
"コンポーネントの他の一般的な使用は、 <xref linkend=\"queryhql-tuple\"/> 行値"
"コンストラクタにあります。"

#. Tag: title
#, no-c-format
msgid "Row value constructor syntax"
msgstr "行値コンストラクタ構文"

#. Tag: para
#, no-c-format
msgid ""
"HQL supports the use of ANSI SQL <literal>row value constructor</literal> "
"syntax, sometimes referred to AS <literal>tuple</literal> syntax, even "
"though the underlying database may not support that notion. Here, we are "
"generally referring to multi-valued comparisons, typically associated with "
"components. Consider an entity Person which defines a name component:"
msgstr ""
"下に位置するデータベースが ANSI SQL <literal>row value constructor</literal> "
"構文 (<literal>tuple</literal> 構文とよばれることもあります) をサポートしてい"
"ないとしても、 HQL はその使用をサポートしています。ここでは、一般的にコンポー"
"ネントと連繋するマルチバリュー比較について触れます。ネームコンポーネントを定"
"義する Person エンティティを考えましょう:"

#. Tag: para
#, no-c-format
msgid ""
"That is valid syntax although it is a little verbose. You can make this more "
"concise by using <literal>row value constructor</literal> syntax:"
msgstr ""
"それは少々詳細になりますが、有効な構文です。より簡潔にし、 <literal>row "
"value constructor</literal> 構文を使用するのがよいでしょう:"

#. Tag: para
#, no-c-format
msgid ""
"It can also be useful to specify this in the <literal>select</literal> "
"clause:"
msgstr "それを <literal>select</literal> 節で指定するのも効果的です。"

#. Tag: para
#, no-c-format
msgid ""
"Using <literal>row value constructor</literal> syntax can also be beneficial "
"when using subqueries that need to compare against multiple values:"
msgstr ""
"次に <literal>row value constructor</literal> 構文の使用が有効なときは、サブ"
"クエリを使用して複数の値と比較する必要があるときです:"

#. Tag: para
#, no-c-format
msgid ""
"One thing to consider when deciding if you want to use this syntax, is that "
"the query will be dependent upon the ordering of the component sub-"
"properties in the metadata."
msgstr ""
"この構文を使用するかどうか決定するときに考慮しなければならないことは、クエリ"
"がメタデータ内のコンポーネントのサブプロパティの順番に依存していることです。"

#, fuzzy
#~ msgid "<![CDATA[from eg.Cat]]>"
#~ msgstr "from eg.Cat"

#, fuzzy
#~ msgid "<![CDATA[from Cat]]>"
#~ msgstr "from eg.Cat"

#, fuzzy
#~ msgid "<![CDATA[from Cat as cat]]>"
#~ msgstr "from Cat as cat"

#, fuzzy
#~ msgid "<![CDATA[from Cat cat]]>"
#~ msgstr "from Cat cat"

#, fuzzy
#~ msgid "<![CDATA[from Formula, Parameter]]>"
#~ msgstr "from Formula, Parameter"

#, fuzzy
#~ msgid "<![CDATA[from Formula as form, Parameter as param]]>"
#~ msgstr "from Formula as form, Parameter as param"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[from Cat as cat\n"
#~ "    inner join cat.mate as mate\n"
#~ "    left outer join cat.kittens as kitten]]>"
#~ msgstr ""
#~ "from Cat as cat\n"
#~ "    inner join cat.mate as mate\n"
#~ "    left outer join cat.kittens as kitten"

#, fuzzy
#~ msgid "<![CDATA[from Cat as cat left join cat.mate.kittens as kittens]]>"
#~ msgstr "from Cat as cat left join cat.mate.kittens as kittens"

#, fuzzy
#~ msgid "<![CDATA[from Formula form full join form.parameter param]]>"
#~ msgstr "from Formula form full join form.parameter param"

#~ msgid "inner join"
#~ msgstr "inner join"

#~ msgid "left outer join"
#~ msgstr "left outer join"

#, fuzzy
#~ msgid "right outer join"
#~ msgstr "left outer join"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[from Cat as cat\n"
#~ "    join cat.mate as mate\n"
#~ "    left join cat.kittens as kitten]]>"
#~ msgstr ""
#~ "from Cat as cat\n"
#~ "    join cat.mate as mate\n"
#~ "    left join cat.kittens as kitten"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[from Cat as cat\n"
#~ "    left join cat.kittens as kitten\n"
#~ "        with kitten.bodyWeight > 10.0]]>"
#~ msgstr ""
#~ "from Cat as cat\n"
#~ "    left join cat.kittens as kitten\n"
#~ "        with kitten.bodyWeight &gt; 10.0"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[from Cat as cat\n"
#~ "    inner join fetch cat.mate\n"
#~ "    left join fetch cat.kittens]]>"
#~ msgstr ""
#~ "from Cat as cat\n"
#~ "    inner join fetch cat.mate\n"
#~ "    left join fetch cat.kittens"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[from Cat as cat\n"
#~ "    inner join fetch cat.mate\n"
#~ "    left join fetch cat.kittens child\n"
#~ "    left join fetch child.kittens]]>"
#~ msgstr ""
#~ "from Cat as cat\n"
#~ "    inner join fetch cat.mate\n"
#~ "    left join fetch cat.kittens child\n"
#~ "    left join fetch child.kittens"

#, fuzzy
#~ msgid "<![CDATA[from Document fetch all properties order by name]]>"
#~ msgstr "from Document fetch all properties order by name"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[from Document doc fetch all properties where lower(doc.name) "
#~ "like '%cats%']]>"
#~ msgstr ""
#~ "from Document doc fetch all properties where lower(doc.name) like '&#37;"
#~ "cats&#37;'"

#, fuzzy
#~ msgid "<![CDATA[from Cat as cat where cat.mate.name like '%s%']]>"
#~ msgstr "from Cat as cat where cat.mate.name like '&#37;s&#37;'"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[select mate\n"
#~ "from Cat as cat\n"
#~ "    inner join cat.mate as mate]]>"
#~ msgstr ""
#~ "select mate\n"
#~ "from Cat as cat\n"
#~ "    inner join cat.mate as mate"

#, fuzzy
#~ msgid "<![CDATA[select cat.mate from Cat cat]]>"
#~ msgstr "select cat.mate from Cat cat"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[select cat.name from DomesticCat cat\n"
#~ "where cat.name like 'fri%']]>"
#~ msgstr ""
#~ "select cat.name from DomesticCat cat\n"
#~ "where cat.name like 'fri&#37;'"

#, fuzzy
#~ msgid "<![CDATA[select cust.name.firstName from Customer as cust]]>"
#~ msgstr "select cust.name.firstName from Customer as cust"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[select mother, offspr, mate.name\n"
#~ "from DomesticCat as mother\n"
#~ "    inner join mother.mate as mate\n"
#~ "    left outer join mother.kittens as offspr]]>"
#~ msgstr ""
#~ "select mother, offspr, mate.name\n"
#~ "from DomesticCat as mother\n"
#~ "    inner join mother.mate as mate\n"
#~ "    left outer join mother.kittens as offspr"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[select new list(mother, offspr, mate.name)\n"
#~ "from DomesticCat as mother\n"
#~ "    inner join mother.mate as mate\n"
#~ "    left outer join mother.kittens as offspr]]>"
#~ msgstr ""
#~ "select new list(mother, offspr, mate.name)\n"
#~ "from DomesticCat as mother\n"
#~ "    inner join mother.mate as mate\n"
#~ "    left outer join mother.kittens as offspr"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[select new Family(mother, mate, offspr)\n"
#~ "from DomesticCat as mother\n"
#~ "    join mother.mate as mate\n"
#~ "    left join mother.kittens as offspr]]>"
#~ msgstr ""
#~ "select new Family(mother, mate, offspr)\n"
#~ "from DomesticCat as mother\n"
#~ "    join mother.mate as mate\n"
#~ "    left join mother.kittens as offspr"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[select max(bodyWeight) as max, min(bodyWeight) as min, count(*) "
#~ "as n\n"
#~ "from Cat cat]]>"
#~ msgstr ""
#~ "select max(bodyWeight) as max, min(bodyWeight) as min, count(*) as n\n"
#~ "from Cat cat"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[select new map( max(bodyWeight) as max, min(bodyWeight) as min, "
#~ "count(*) as n )\n"
#~ "from Cat cat]]>"
#~ msgstr ""
#~ "select new map( max(bodyWeight) as max, min(bodyWeight) as min, count(*) "
#~ "as n )\n"
#~ "from Cat cat"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[select avg(cat.weight), sum(cat.weight), max(cat.weight), count"
#~ "(cat)\n"
#~ "from Cat cat]]>"
#~ msgstr ""
#~ "select avg(cat.weight), sum(cat.weight), max(cat.weight), count(cat)\n"
#~ "from Cat cat"

#~ msgid "count(*)"
#~ msgstr "count(*)"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[select cat.weight + sum(kitten.weight)\n"
#~ "from Cat cat\n"
#~ "    join cat.kittens kitten\n"
#~ "group by cat.id, cat.weight]]>"
#~ msgstr ""
#~ "select cat.weight + sum(kitten.weight)\n"
#~ "from Cat cat\n"
#~ "    join cat.kittens kitten\n"
#~ "group by cat.id, cat.weight"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[select firstName||' '||initial||' '||upper(lastName) from "
#~ "Person]]>"
#~ msgstr "select firstName||' '||initial||' '||upper(lastName) from Person"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[select distinct cat.name from Cat cat\n"
#~ "\n"
#~ "select count(distinct cat.name), count(cat) from Cat cat]]>"
#~ msgstr ""
#~ "select distinct cat.name from Cat cat\n"
#~ "\n"
#~ "select count(distinct cat.name), count(cat) from Cat cat"

#, fuzzy
#~ msgid "<![CDATA[from java.lang.Object o]]>"
#~ msgstr "from java.lang.Object o"

#, fuzzy
#~ msgid "<![CDATA[from Named n, Named m where n.name = m.name]]>"
#~ msgstr "from Named n, Named m where n.name = m.name"

#, fuzzy
#~ msgid "<![CDATA[from Cat where name='Fritz']]>"
#~ msgstr "from Cat where name='Fritz'"

#, fuzzy
#~ msgid "<![CDATA[from Cat as cat where cat.name='Fritz']]>"
#~ msgstr "from Cat as cat where cat.name='Fritz'"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[select foo\n"
#~ "from Foo foo, Bar bar\n"
#~ "where foo.startDate = bar.date]]>"
#~ msgstr ""
#~ "select foo\n"
#~ "from Foo foo, Bar bar\n"
#~ "where foo.startDate = bar.date"

#, fuzzy
#~ msgid "<![CDATA[from Cat cat where cat.mate.name is not null]]>"
#~ msgstr "from Cat cat where cat.mate.name is not null"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[from Foo foo\n"
#~ "where foo.bar.baz.customer.address.city is not null]]>"
#~ msgstr ""
#~ "from Foo foo\n"
#~ "where foo.bar.baz.customer.address.city is not null"

#, fuzzy
#~ msgid "<![CDATA[from Cat cat, Cat rival where cat.mate = rival.mate]]>"
#~ msgstr "from Cat cat, Cat rival where cat.mate = rival.mate"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[select cat, mate\n"
#~ "from Cat cat, Cat mate\n"
#~ "where cat.mate = mate]]>"
#~ msgstr ""
#~ "select cat, mate\n"
#~ "from Cat cat, Cat mate\n"
#~ "where cat.mate = mate"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[from Cat as cat where cat.id = 123\n"
#~ "\n"
#~ "from Cat as cat where cat.mate.id = 69]]>"
#~ msgstr ""
#~ "from Cat as cat where cat.id = 123\n"
#~ "\n"
#~ "from Cat as cat where cat.mate.id = 69"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[from bank.Person person\n"
#~ "where person.id.country = 'AU'\n"
#~ "    and person.id.medicareNumber = 123456]]>"
#~ msgstr ""
#~ "from bank.Person person\n"
#~ "where person.id.country = 'AU'\n"
#~ "    and person.id.medicareNumber = 123456"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[from bank.Account account\n"
#~ "where account.owner.id.country = 'AU'\n"
#~ "    and account.owner.id.medicareNumber = 123456]]>"
#~ msgstr ""
#~ "from bank.Account account\n"
#~ "where account.owner.id.country = 'AU'\n"
#~ "    and account.owner.id.medicareNumber = 123456"

#, fuzzy
#~ msgid "<![CDATA[from Cat cat where cat.class = DomesticCat]]>"
#~ msgstr "from Cat cat where cat.class = DomesticCat"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[from AuditLog log, Payment payment\n"
#~ "where log.item.class = 'Payment' and log.item.id = payment.id]]>"
#~ msgstr ""
#~ "from AuditLog log, Payment payment\n"
#~ "where log.item.class = 'Payment' and log.item.id = payment.id"

#, fuzzy
#~ msgid "<![CDATA[from DomesticCat cat where cat.name between 'A' and 'B']]>"
#~ msgstr "from DomesticCat cat where cat.name between 'A' and 'B'"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[from DomesticCat cat where cat.name in ( 'Foo', 'Bar', 'Baz' )]]>"
#~ msgstr "from DomesticCat cat where cat.name in ( 'Foo', 'Bar', 'Baz' )"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[from DomesticCat cat where cat.name not between 'A' and 'B']]>"
#~ msgstr "from DomesticCat cat where cat.name not between 'A' and 'B'"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[from DomesticCat cat where cat.name not in ( 'Foo', 'Bar', "
#~ "'Baz' )]]>"
#~ msgstr "from DomesticCat cat where cat.name not in ( 'Foo', 'Bar', 'Baz' )"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[<property name=\"hibernate.query.substitutions\">true 1, false "
#~ "0</property>]]>"
#~ msgstr ""
#~ "&lt;property name=\"hibernate.query.substitutions\"&gt;true 1, false "
#~ "0&lt;/property&gt;"

#, fuzzy
#~ msgid "<![CDATA[from Cat cat where cat.alive = true]]>"
#~ msgstr "from Cat cat where cat.alive = true"

#, fuzzy
#~ msgid "<![CDATA[from Cat cat where cat.kittens.size > 0]]>"
#~ msgstr "from Cat cat where cat.kittens.size &gt; 0"

#, fuzzy
#~ msgid "<![CDATA[from Cat cat where size(cat.kittens) > 0]]>"
#~ msgstr "from Cat cat where size(cat.kittens) &gt; 0"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[from Calendar cal where maxelement(cal.holidays) > current_date]]"
#~ ">"
#~ msgstr "from Calendar cal where maxelement(cal.holidays) &gt; current_date"

#, fuzzy
#~ msgid "<![CDATA[from Order order where maxindex(order.items) > 100]]>"
#~ msgstr "from Order order where maxindex(order.items) &gt; 100"

#, fuzzy
#~ msgid "<![CDATA[from Order order where minelement(order.items) > 10000]]>"
#~ msgstr "from Order order where minelement(order.items) &gt; 10000"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[select mother from Cat as mother, Cat as kit\n"
#~ "where kit in elements(foo.kittens)]]>"
#~ msgstr ""
#~ "select mother from Cat as mother, Cat as kit\n"
#~ "where kit in elements(foo.kittens)"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[select p from NameList list, Person p\n"
#~ "where p.name = some elements(list.names)]]>"
#~ msgstr ""
#~ "select p from NameList list, Person p\n"
#~ "where p.name = some elements(list.names)"

#, fuzzy
#~ msgid "<![CDATA[from Cat cat where exists elements(cat.kittens)]]>"
#~ msgstr "from Cat cat where exists elements(cat.kittens)"

#, fuzzy
#~ msgid "<![CDATA[from Player p where 3 > all elements(p.scores)]]>"
#~ msgstr "from Player p where 3 &gt; all elements(p.scores)"

#, fuzzy
#~ msgid "<![CDATA[from Show show where 'fizard' in indices(show.acts)]]>"
#~ msgstr "from Show show where 'fizard' in indices(show.acts)"

#, fuzzy
#~ msgid "<![CDATA[from Order order where order.items[0].id = 1234]]>"
#~ msgstr "from Order order where order.items[0].id = 1234"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[select person from Person person, Calendar calendar\n"
#~ "where calendar.holidays['national day'] = person.birthDay\n"
#~ "    and person.nationality.calendar = calendar]]>"
#~ msgstr ""
#~ "select person from Person person, Calendar calendar\n"
#~ "where calendar.holidays['national day'] = person.birthDay\n"
#~ "    and person.nationality.calendar = calendar"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[select item from Item item, Order order\n"
#~ "where order.items[ order.deliveredItemIndices[0] ] = item and order.id = "
#~ "11]]>"
#~ msgstr ""
#~ "select item from Item item, Order order\n"
#~ "where order.items[ order.deliveredItemIndices[0] ] = item and order.id = "
#~ "11"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[select item from Item item, Order order\n"
#~ "where order.items[ maxindex(order.items) ] = item and order.id = 11]]>"
#~ msgstr ""
#~ "select item from Item item, Order order\n"
#~ "where order.items[ maxindex(order.items) ] = item and order.id = 11"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[select item from Item item, Order order\n"
#~ "where order.items[ size(order.items) - 1 ] = item]]>"
#~ msgstr ""
#~ "select item from Item item, Order order\n"
#~ "where order.items[ size(order.items) - 1 ] = item"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[select item, index(item) from Order order\n"
#~ "    join order.items item\n"
#~ "where index(item) < 5]]>"
#~ msgstr ""
#~ "select item, index(item) from Order order\n"
#~ "    join order.items item\n"
#~ "where index(item) &lt; 5"

#, fuzzy
#~ msgid "<![CDATA[from DomesticCat cat where upper(cat.name) like 'FRI%']]>"
#~ msgstr "from DomesticCat cat where upper(cat.name) like 'FRI&#37;'"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[select cust\n"
#~ "from Product prod,\n"
#~ "    Store store\n"
#~ "    inner join store.customers cust\n"
#~ "where prod.name = 'widget'\n"
#~ "    and store.location.name in ( 'Melbourne', 'Sydney' )\n"
#~ "    and prod = all elements(cust.currentOrder.lineItems)]]>"
#~ msgstr ""
#~ "select cust\n"
#~ "from Product prod,\n"
#~ "    Store store\n"
#~ "    inner join store.customers cust\n"
#~ "where prod.name = 'widget'\n"
#~ "    and store.location.name in ( 'Melbourne', 'Sydney' )\n"
#~ "    and prod = all elements(cust.currentOrder.lineItems)"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[SELECT cust.name, cust.address, cust.phone, cust.id, cust."
#~ "current_order\n"
#~ "FROM customers cust,\n"
#~ "    stores store,\n"
#~ "    locations loc,\n"
#~ "    store_customers sc,\n"
#~ "    product prod\n"
#~ "WHERE prod.name = 'widget'\n"
#~ "    AND store.loc_id = loc.id\n"
#~ "    AND loc.name IN ( 'Melbourne', 'Sydney' )\n"
#~ "    AND sc.store_id = store.id\n"
#~ "    AND sc.cust_id = cust.id\n"
#~ "    AND prod.id = ALL(\n"
#~ "        SELECT item.prod_id\n"
#~ "        FROM line_items item, orders o\n"
#~ "        WHERE item.order_id = o.id\n"
#~ "            AND cust.current_order = o.id\n"
#~ "    )]]>"
#~ msgstr ""
#~ "SELECT cust.name, cust.address, cust.phone, cust.id, cust.current_order\n"
#~ "FROM customers cust,\n"
#~ "    stores store,\n"
#~ "    locations loc,\n"
#~ "    store_customers sc,\n"
#~ "    product prod\n"
#~ "WHERE prod.name = 'widget'\n"
#~ "    AND store.loc_id = loc.id\n"
#~ "    AND loc.name IN ( 'Melbourne', 'Sydney' )\n"
#~ "    AND sc.store_id = store.id\n"
#~ "    AND sc.cust_id = cust.id\n"
#~ "    AND prod.id = ALL(\n"
#~ "        SELECT item.prod_id\n"
#~ "        FROM line_items item, orders o\n"
#~ "        WHERE item.order_id = o.id\n"
#~ "            AND cust.current_order = o.id\n"
#~ "    )"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[from DomesticCat cat\n"
#~ "order by cat.name asc, cat.weight desc, cat.birthdate]]>"
#~ msgstr ""
#~ "from DomesticCat cat\n"
#~ "order by cat.name asc, cat.weight desc, cat.birthdate"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[select cat.color, sum(cat.weight), count(cat)\n"
#~ "from Cat cat\n"
#~ "group by cat.color]]>"
#~ msgstr ""
#~ "select cat.color, sum(cat.weight), count(cat)\n"
#~ "from Cat cat\n"
#~ "group by cat.color"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[select foo.id, avg(name), max(name)\n"
#~ "from Foo foo join foo.names name\n"
#~ "group by foo.id]]>"
#~ msgstr ""
#~ "select foo.id, avg(name), max(name)\n"
#~ "from Foo foo join foo.names name\n"
#~ "group by foo.id"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[select cat.color, sum(cat.weight), count(cat)\n"
#~ "from Cat cat\n"
#~ "group by cat.color\n"
#~ "having cat.color in (eg.Color.TABBY, eg.Color.BLACK)]]>"
#~ msgstr ""
#~ "select cat.color, sum(cat.weight), count(cat)\n"
#~ "from Cat cat\n"
#~ "group by cat.color\n"
#~ "having cat.color in (eg.Color.TABBY, eg.Color.BLACK)"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[select cat\n"
#~ "from Cat cat\n"
#~ "    join cat.kittens kitten\n"
#~ "group by cat.id, cat.name, cat.other, cat.properties\n"
#~ "having avg(kitten.weight) > 100\n"
#~ "order by count(kitten) asc, sum(kitten.weight) desc]]>"
#~ msgstr ""
#~ "select cat\n"
#~ "from Cat cat\n"
#~ "    join cat.kittens kitten\n"
#~ "group by cat.id, cat.name, cat.other, cat.properties\n"
#~ "having avg(kitten.weight) &gt; 100\n"
#~ "order by count(kitten) asc, sum(kitten.weight) desc"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[from Cat as fatcat\n"
#~ "where fatcat.weight > (\n"
#~ "    select avg(cat.weight) from DomesticCat cat\n"
#~ ")]]>"
#~ msgstr ""
#~ "from Cat as fatcat\n"
#~ "where fatcat.weight &gt; (\n"
#~ "    select avg(cat.weight) from DomesticCat cat\n"
#~ ")"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[from DomesticCat as cat\n"
#~ "where cat.name = some (\n"
#~ "    select name.nickName from Name as name\n"
#~ ")]]>"
#~ msgstr ""
#~ "from DomesticCat as cat\n"
#~ "where cat.name = some (\n"
#~ "    select name.nickName from Name as name\n"
#~ ")"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[from Cat as cat\n"
#~ "where not exists (\n"
#~ "    from Cat as mate where mate.mate = cat\n"
#~ ")]]>"
#~ msgstr ""
#~ "from Cat as cat\n"
#~ "where not exists (\n"
#~ "    from Cat as mate where mate.mate = cat\n"
#~ ")"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[from DomesticCat as cat\n"
#~ "where cat.name not in (\n"
#~ "    select name.nickName from Name as name\n"
#~ ")]]>"
#~ msgstr ""
#~ "from DomesticCat as cat\n"
#~ "where cat.name not in (\n"
#~ "    select name.nickName from Name as name\n"
#~ ")"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[select cat.id, (select max(kit.weight) from cat.kitten kit)\n"
#~ "from Cat as cat]]>"
#~ msgstr ""
#~ "select cat.id, (select max(kit.weight) from cat.kitten kit)\n"
#~ "from Cat as cat"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[select order.id, sum(price.amount), count(item)\n"
#~ "from Order as order\n"
#~ "    join order.lineItems as item\n"
#~ "    join item.product as product,\n"
#~ "    Catalog as catalog\n"
#~ "    join catalog.prices as price\n"
#~ "where order.paid = false\n"
#~ "    and order.customer = :customer\n"
#~ "    and price.product = product\n"
#~ "    and catalog.effectiveDate < sysdate\n"
#~ "    and catalog.effectiveDate >= all (\n"
#~ "        select cat.effectiveDate\n"
#~ "        from Catalog as cat\n"
#~ "        where cat.effectiveDate < sysdate\n"
#~ "    )\n"
#~ "group by order\n"
#~ "having sum(price.amount) > :minAmount\n"
#~ "order by sum(price.amount) desc]]>"
#~ msgstr ""
#~ "select order.id, sum(price.amount), count(item)\n"
#~ "from Order as order\n"
#~ "    join order.lineItems as item\n"
#~ "    join item.product as product,\n"
#~ "    Catalog as catalog\n"
#~ "    join catalog.prices as price\n"
#~ "where order.paid = false\n"
#~ "    and order.customer = :customer\n"
#~ "    and price.product = product\n"
#~ "    and catalog.effectiveDate &lt; sysdate\n"
#~ "    and catalog.effectiveDate &gt;= all (\n"
#~ "        select cat.effectiveDate\n"
#~ "        from Catalog as cat\n"
#~ "        where cat.effectiveDate &lt; sysdate\n"
#~ "    )\n"
#~ "group by order\n"
#~ "having sum(price.amount) &gt; :minAmount\n"
#~ "order by sum(price.amount) desc"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[select order.id, sum(price.amount), count(item)\n"
#~ "from Order as order\n"
#~ "    join order.lineItems as item\n"
#~ "    join item.product as product,\n"
#~ "    Catalog as catalog\n"
#~ "    join catalog.prices as price\n"
#~ "where order.paid = false\n"
#~ "    and order.customer = :customer\n"
#~ "    and price.product = product\n"
#~ "    and catalog = :currentCatalog\n"
#~ "group by order\n"
#~ "having sum(price.amount) > :minAmount\n"
#~ "order by sum(price.amount) desc]]>"
#~ msgstr ""
#~ "select order.id, sum(price.amount), count(item)\n"
#~ "from Order as order\n"
#~ "    join order.lineItems as item\n"
#~ "    join item.product as product,\n"
#~ "    Catalog as catalog\n"
#~ "    join catalog.prices as price\n"
#~ "where order.paid = false\n"
#~ "    and order.customer = :customer\n"
#~ "    and price.product = product\n"
#~ "    and catalog = :currentCatalog\n"
#~ "group by order\n"
#~ "having sum(price.amount) &gt; :minAmount\n"
#~ "order by sum(price.amount) desc"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[select count(payment), status.name\n"
#~ "from Payment as payment\n"
#~ "    join payment.currentStatus as status\n"
#~ "    join payment.statusChanges as statusChange\n"
#~ "where payment.status.name <> PaymentStatus.AWAITING_APPROVAL\n"
#~ "    or (\n"
#~ "        statusChange.timeStamp = (\n"
#~ "            select max(change.timeStamp)\n"
#~ "            from PaymentStatusChange change\n"
#~ "            where change.payment = payment\n"
#~ "        )\n"
#~ "        and statusChange.user <> :currentUser\n"
#~ "    )\n"
#~ "group by status.name, status.sortOrder\n"
#~ "order by status.sortOrder]]>"
#~ msgstr ""
#~ "select count(payment), status.name\n"
#~ "from Payment as payment\n"
#~ "    join payment.currentStatus as status\n"
#~ "    join payment.statusChanges as statusChange\n"
#~ "where payment.status.name &lt;&gt; PaymentStatus.AWAITING_APPROVAL\n"
#~ "    or (\n"
#~ "        statusChange.timeStamp = (\n"
#~ "            select max(change.timeStamp)\n"
#~ "            from PaymentStatusChange change\n"
#~ "            where change.payment = payment\n"
#~ "        )\n"
#~ "        and statusChange.user &lt;&gt; :currentUser\n"
#~ "    )\n"
#~ "group by status.name, status.sortOrder\n"
#~ "order by status.sortOrder"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[select count(payment), status.name\n"
#~ "from Payment as payment\n"
#~ "    join payment.currentStatus as status\n"
#~ "where payment.status.name <> PaymentStatus.AWAITING_APPROVAL\n"
#~ "    or payment.statusChanges[ maxIndex(payment.statusChanges) ].user <> :"
#~ "currentUser\n"
#~ "group by status.name, status.sortOrder\n"
#~ "order by status.sortOrder]]>"
#~ msgstr ""
#~ "select count(payment), status.name\n"
#~ "from Payment as payment\n"
#~ "    join payment.currentStatus as status\n"
#~ "where payment.status.name &lt;&gt; PaymentStatus.AWAITING_APPROVAL\n"
#~ "    or payment.statusChanges[ maxIndex(payment.statusChanges) ].user &lt;"
#~ "&gt; :currentUser\n"
#~ "group by status.name, status.sortOrder\n"
#~ "order by status.sortOrder"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[select account, payment\n"
#~ "from Account as account\n"
#~ "    left outer join account.payments as payment\n"
#~ "where :currentUser in elements(account.holder.users)\n"
#~ "    and PaymentStatus.UNPAID = isNull(payment.currentStatus.name, "
#~ "PaymentStatus.UNPAID)\n"
#~ "order by account.type.sortOrder, account.accountNumber, payment.dueDate]]>"
#~ msgstr ""
#~ "select account, payment\n"
#~ "from Account as account\n"
#~ "    left outer join account.payments as payment\n"
#~ "where :currentUser in elements(account.holder.users)\n"
#~ "    and PaymentStatus.UNPAID = isNull(payment.currentStatus.name, "
#~ "PaymentStatus.UNPAID)\n"
#~ "order by account.type.sortOrder, account.accountNumber, payment.dueDate"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[select account, payment\n"
#~ "from Account as account\n"
#~ "    join account.holder.users as user\n"
#~ "    left outer join account.payments as payment\n"
#~ "where :currentUser = user\n"
#~ "    and PaymentStatus.UNPAID = isNull(payment.currentStatus.name, "
#~ "PaymentStatus.UNPAID)\n"
#~ "order by account.type.sortOrder, account.accountNumber, payment.dueDate]]>"
#~ msgstr ""
#~ "select account, payment\n"
#~ "from Account as account\n"
#~ "    join account.holder.users as user\n"
#~ "    left outer join account.payments as payment\n"
#~ "where :currentUser = user\n"
#~ "    and PaymentStatus.UNPAID = isNull(payment.currentStatus.name, "
#~ "PaymentStatus.UNPAID)\n"
#~ "order by account.type.sortOrder, account.accountNumber, payment.dueDate"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[( (Integer) session.createQuery(\"select count(*) from ....\")."
#~ "iterate().next() ).intValue()]]>"
#~ msgstr ""
#~ "( (Integer) session.iterate(\"select count(*) from ....\").next() )."
#~ "intValue()"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[select usr.id, usr.name\n"
#~ "from User as usr\n"
#~ "    left join usr.messages as msg\n"
#~ "group by usr.id, usr.name\n"
#~ "order by count(msg)]]>"
#~ msgstr ""
#~ "select usr.id, usr.name\n"
#~ "from User as usr\n"
#~ "    left join usr.messages as msg\n"
#~ "group by usr.id, usr.name\n"
#~ "order by count(msg)"

#, fuzzy
#~ msgid "<![CDATA[from User usr where size(usr.messages) >= 1]]>"
#~ msgstr "from User usr where size(usr.messages) &gt;= 1"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[select usr.id, usr.name\n"
#~ "from User usr.name\n"
#~ "    join usr.messages msg\n"
#~ "group by usr.id, usr.name\n"
#~ "having count(msg) >= 1]]>"
#~ msgstr ""
#~ "select usr.id, usr.name\n"
#~ "from User usr.name\n"
#~ "    join usr.messages msg\n"
#~ "group by usr.id, usr.name\n"
#~ "having count(msg) &gt;= 1"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[select usr.id, usr.name\n"
#~ "from User as usr\n"
#~ "    left join usr.messages as msg\n"
#~ "group by usr.id, usr.name\n"
#~ "having count(msg) = 0]]>"
#~ msgstr ""
#~ "select usr.id, usr.name\n"
#~ "from User as usr\n"
#~ "    left join usr.messages as msg\n"
#~ "group by usr.id, usr.name\n"
#~ "having count(msg) = 0"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[Query q = s.createQuery(\"from foo Foo as foo where foo.name=:"
#~ "name and foo.size=:size\");\n"
#~ "q.setProperties(fooBean); // fooBean has getName() and getSize()\n"
#~ "List foos = q.list();]]>"
#~ msgstr ""
#~ "Query q = s.createQuery(\"from foo Foo as foo where foo.name=:name and "
#~ "foo.size=:size\");\n"
#~ "q.setProperties(fooBean); // fooBean has getName() and getSize()\n"
#~ "List foos = q.list();"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[Query q = s.createFilter( collection, \"\" ); // the trivial "
#~ "filter\n"
#~ "q.setMaxResults(PAGE_SIZE);\n"
#~ "q.setFirstResult(PAGE_SIZE * pageNumber);\n"
#~ "List page = q.list();]]>"
#~ msgstr ""
#~ "Query q = s.createFilter( collection, \"\" ); // the trivial filter\n"
#~ "q.setMaxResults(PAGE_SIZE);\n"
#~ "q.setFirstResult(PAGE_SIZE * pageNumber);\n"
#~ "List page = q.list();"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[Collection orderedCollection = s.filter( collection, \"order by "
#~ "this.amount\" );\n"
#~ "Collection counts = s.filter( collection, \"select this.type, count(this) "
#~ "group by this.type\" );]]>"
#~ msgstr ""
#~ "Collection orderedCollection = s.filter( collection, \"order by this."
#~ "amount\" );\n"
#~ "Collection counts = s.filter( collection, \"select this.type, count(this) "
#~ "group by this.type\" );"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[( (Integer) session.createQuery(\"select count(*) from ....\")."
#~ "iterate().next() ).intValue();]]>"
#~ msgstr ""
#~ "( (Integer) session.iterate(\"select count(*) from ....\").next() )."
#~ "intValue();"

#, fuzzy
#~ msgid "<![CDATA[select p.name from Person p]]>"
#~ msgstr "select p.name from from Person p"

#, fuzzy
#~ msgid "<![CDATA[select p.name.first from Person p]]>"
#~ msgstr "select p.name.first from from Person p"

#, fuzzy
#~ msgid "<![CDATA[from Person p where p.name = :name]]>"
#~ msgstr "from from Person p where p.name = :name"

#, fuzzy
#~ msgid "<![CDATA[from Person p where p.name.first = :firstName]]>"
#~ msgstr "from from Person p where p.name.first = :firstName"

#, fuzzy
#~ msgid "<![CDATA[from Person p order by p.name]]>"
#~ msgstr "from from Person p order by p.name"

#, fuzzy
#~ msgid "<![CDATA[from Person p order by p.name.first]]>"
#~ msgstr "from from Person p order by p.name.first"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[from Person p where p.name.first='John' and p.name."
#~ "last='Jingleheimer-Schmidt']]>"
#~ msgstr ""
#~ "from Person p where p.name.first='John' and p.name.last='Jingleheimer-"
#~ "Schmidt'"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[from Person p where p.name=('John', 'Jingleheimer-Schmidt')]]>"
#~ msgstr "from Person p where p.name=('John', 'Jingleheimer-Schmidt')"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[from Cat as cat\n"
#~ "where not ( cat.name, cat.color ) in (\n"
#~ "    select cat.name, cat.color from DomesticCat cat\n"
#~ ")]]>"
#~ msgstr ""
#~ "from Cat as cat\n"
#~ "where not ( cat.name, cat.color ) in (\n"
#~ "    select cat.name, cat.color from DomesticCat cat\n"
#~ ")"
