# 
# AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: 0\n"
"POT-Creation-Date: 2010-02-11T05:38:15\n"
"PO-Revision-Date: 2010-02-11T05:38:15\n"
"Last-Translator: Automatically generated\n"
"Language-Team: None\n"
"MIME-Version: 1.0\n"
"Content-Type: application/x-publican; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#, no-c-format
msgid "Criteria Queries"
msgstr ""

#. Tag: para
#, no-c-format
msgid "Hibernate features an intuitive, extensible criteria query API."
msgstr ""

#. Tag: title
#, no-c-format
msgid "Creating a <literal>Criteria</literal> instance"
msgstr ""

#. Tag: para
#, no-c-format
msgid "The interface <literal>org.hibernate.Criteria</literal> represents a query against a particular persistent class. The <literal>Session</literal> is a factory for <literal>Criteria</literal> instances."
msgstr ""

#. Tag: title
#, no-c-format
msgid "Narrowing the result set"
msgstr ""

#. Tag: para
#, no-c-format
msgid "An individual query criterion is an instance of the interface <literal>org.hibernate.criterion.Criterion</literal>. The class <literal>org.hibernate.criterion.Restrictions</literal> defines factory methods for obtaining certain built-in <literal>Criterion</literal> types."
msgstr ""

#. Tag: para
#, no-c-format
msgid "Restrictions can be grouped logically."
msgstr ""

#. Tag: para
#, no-c-format
msgid "There are a range of built-in criterion types (<literal>Restrictions</literal> subclasses). One of the most useful allows you to specify SQL directly."
msgstr ""

#. Tag: para
#, no-c-format
msgid "The <literal>{alias}</literal> placeholder with be replaced by the row alias of the queried entity."
msgstr ""

#. Tag: para
#, no-c-format
msgid "You can also obtain a criterion from a <literal>Property</literal> instance. You can create a <literal>Property</literal> by calling <literal>Property.forName()</literal>:"
msgstr ""

#. Tag: title
#, no-c-format
msgid "Ordering the results"
msgstr ""

#. Tag: para
#, no-c-format
msgid "You can order the results using <literal>org.hibernate.criterion.Order</literal>."
msgstr ""

#. Tag: title
#, no-c-format
msgid "Associations"
msgstr ""

#. Tag: para
#, no-c-format
msgid "By navigating associations using <literal>createCriteria()</literal> you can specify constraints upon related entities:"
msgstr ""

#. Tag: para
#, no-c-format
msgid "The second <literal>createCriteria()</literal> returns a new instance of <literal>Criteria</literal> that refers to the elements of the <literal>kittens</literal> collection."
msgstr ""

#. Tag: para
#, no-c-format
msgid "There is also an alternate form that is useful in certain circumstances:"
msgstr ""

#. Tag: para
#, no-c-format
msgid "(<literal>createAlias()</literal> does not create a new instance of <literal>Criteria</literal>.)"
msgstr ""

#. Tag: para
#, no-c-format
msgid "The kittens collections held by the <literal>Cat</literal> instances returned by the previous two queries are <emphasis>not</emphasis> pre-filtered by the criteria. If you want to retrieve just the kittens that match the criteria, you must use a <literal>ResultTransformer</literal>."
msgstr ""

#. Tag: para
#, no-c-format
msgid "Additionally you may manipulate the result set using a left outer join:"
msgstr ""

#. Tag: para
#, no-c-format
msgid "This will return all of the <literal>Cat</literal>s with a mate whose name starts with \"good\" ordered by their mate's age, and all cats who do not have a mate. This is useful when there is a need to order or limit in the database prior to returning complex/large result sets, and removes many instances where multiple queries would have to be performed and the results unioned by java in memory."
msgstr ""

#. Tag: para
#, no-c-format
msgid "Without this feature, first all of the cats without a mate would need to be loaded in one query."
msgstr ""

#. Tag: para
#, no-c-format
msgid "A second query would need to retreive the cats with mates who's name started with \"good\" sorted by the mates age."
msgstr ""

#. Tag: para
#, no-c-format
msgid "Thirdly, in memory; the lists would need to be joined manually."
msgstr ""

#. Tag: title
#, no-c-format
msgid "Dynamic association fetching"
msgstr ""

#. Tag: para
#, no-c-format
msgid "You can specify association fetching semantics at runtime using <literal>setFetchMode()</literal>."
msgstr ""

#. Tag: para
#, no-c-format
msgid "This query will fetch both <literal>mate</literal> and <literal>kittens</literal> by outer join. See <xref linkend=\"performance-fetching\" /> for more information."
msgstr ""

#. Tag: title
#, no-c-format
msgid "Example queries"
msgstr ""

#. Tag: para
#, no-c-format
msgid "The class <literal>org.hibernate.criterion.Example</literal> allows you to construct a query criterion from a given instance."
msgstr ""

#. Tag: para
#, no-c-format
msgid "Version properties, identifiers and associations are ignored. By default, null valued properties are excluded."
msgstr ""

#. Tag: para
#, no-c-format
msgid "You can adjust how the <literal>Example</literal> is applied."
msgstr ""

#. Tag: para
#, no-c-format
msgid "You can even use examples to place criteria upon associated objects."
msgstr ""

#. Tag: title
#, no-c-format
msgid "Projections, aggregation and grouping"
msgstr ""

#. Tag: para
#, no-c-format
msgid "The class <literal>org.hibernate.criterion.Projections</literal> is a factory for <literal>Projection</literal> instances. You can apply a projection to a query by calling <literal>setProjection()</literal>."
msgstr ""

#. Tag: para
#, no-c-format
msgid "There is no explicit \"group by\" necessary in a criteria query. Certain projection types are defined to be <emphasis>grouping projections</emphasis>, which also appear in the SQL <literal>group by</literal> clause."
msgstr ""

#. Tag: para
#, no-c-format
msgid "An alias can be assigned to a projection so that the projected value can be referred to in restrictions or orderings. Here are two different ways to do this:"
msgstr ""

#. Tag: para
#, no-c-format
msgid "The <literal>alias()</literal> and <literal>as()</literal> methods simply wrap a projection instance in another, aliased, instance of <literal>Projection</literal>. As a shortcut, you can assign an alias when you add the projection to a projection list:"
msgstr ""

#. Tag: para
#, no-c-format
msgid "You can also use <literal>Property.forName()</literal> to express projections:"
msgstr ""

#. Tag: title
#, no-c-format
msgid "Detached queries and subqueries"
msgstr ""

#. Tag: para
#, no-c-format
msgid "The <literal>DetachedCriteria</literal> class allows you to create a query outside the scope of a session and then execute it using an arbitrary <literal>Session</literal>."
msgstr ""

#. Tag: para
#, no-c-format
msgid "A <literal>DetachedCriteria</literal> can also be used to express a subquery. Criterion instances involving subqueries can be obtained via <literal>Subqueries</literal> or <literal>Property</literal>."
msgstr ""

#. Tag: para
#, no-c-format
msgid "Correlated subqueries are also possible:"
msgstr ""

#. Tag: title
#, no-c-format
msgid "Queries by natural identifier"
msgstr ""

#. Tag: para
#, no-c-format
msgid "For most queries, including criteria queries, the query cache is not efficient because query cache invalidation occurs too frequently. However, there is a special kind of query where you can optimize the cache invalidation algorithm: lookups by a constant natural key. In some applications, this kind of query occurs frequently. The criteria API provides special provision for this use case."
msgstr ""

#. Tag: para
#, no-c-format
msgid "First, map the natural key of your entity using <literal>&lt;natural-id&gt;</literal> and enable use of the second-level cache."
msgstr ""

#. Tag: para
#, no-c-format
msgid "This functionality is not intended for use with entities with <emphasis>mutable</emphasis> natural keys."
msgstr ""

#. Tag: para
#, no-c-format
msgid "Once you have enabled the Hibernate query cache, the <literal>Restrictions.naturalId()</literal> allows you to make use of the more efficient cache algorithm."
msgstr ""

