# 
# AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: 0\n"
"POT-Creation-Date: 2010-02-11T05:38:15\n"
"PO-Revision-Date: 2010-02-11T05:38:15\n"
"Last-Translator: Automatically generated\n"
"Language-Team: None\n"
"MIME-Version: 1.0\n"
"Content-Type: application/x-publican; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#, no-c-format
msgid "Interceptors and events"
msgstr ""

#. Tag: para
#, no-c-format
msgid "It is useful for the application to react to certain events that occur inside Hibernate. This allows for the implementation of generic functionality and the extension of Hibernate functionality."
msgstr ""

#. Tag: title
#, no-c-format
msgid "Interceptors"
msgstr ""

#. Tag: para
#, no-c-format
msgid "The <literal>Interceptor</literal> interface provides callbacks from the session to the application, allowing the application to inspect and/or manipulate properties of a persistent object before it is saved, updated, deleted or loaded. One possible use for this is to track auditing information. For example, the following <literal>Interceptor</literal> automatically sets the <literal>createTimestamp</literal> when an <literal>Auditable</literal> is created and updates the <literal>lastUpdateTimestamp</literal> property when an <literal>Auditable</literal> is updated."
msgstr ""

#. Tag: para
#, no-c-format
msgid "You can either implement <literal>Interceptor</literal> directly or extend <literal>EmptyInterceptor</literal>."
msgstr ""

#. Tag: para
#, no-c-format
msgid "There are two kinds of inteceptors: <literal>Session</literal>-scoped and <literal>SessionFactory</literal>-scoped."
msgstr ""

#. Tag: para
#, no-c-format
msgid "A <literal>Session</literal>-scoped interceptor is specified when a session is opened using one of the overloaded SessionFactory.openSession() methods accepting an <literal>Interceptor</literal>."
msgstr ""

#. Tag: para
#, no-c-format
msgid "A <literal>SessionFactory</literal>-scoped interceptor is registered with the <literal>Configuration</literal> object prior to building the <literal>SessionFactory</literal>. Unless a session is opened explicitly specifying the interceptor to use, the supplied interceptor will be applied to all sessions opened from that <literal>SessionFactory</literal>. <literal>SessionFactory</literal>-scoped interceptors must be thread safe. Ensure that you do not store session-specific states, since multiple sessions will use this interceptor potentially concurrently."
msgstr ""

#. Tag: title
#, no-c-format
msgid "Event system"
msgstr ""

#. Tag: para
#, no-c-format
msgid "If you have to react to particular events in your persistence layer, you can also use the Hibernate3 <emphasis>event</emphasis> architecture. The event system can be used in addition, or as a replacement, for interceptors."
msgstr ""

#. Tag: para
#, no-c-format
msgid "All the methods of the <literal>Session</literal> interface correlate to an event. You have a <literal>LoadEvent</literal>, a <literal>FlushEvent</literal>, etc. Consult the XML configuration-file DTD or the <literal>org.hibernate.event</literal> package for the full list of defined event types. When a request is made of one of these methods, the Hibernate <literal>Session</literal> generates an appropriate event and passes it to the configured event listeners for that type. Out-of-the-box, these listeners implement the same processing in which those methods always resulted. However, you are free to implement a customization of one of the listener interfaces (i.e., the <literal>LoadEvent</literal> is processed by the registered implementation of the <literal>LoadEventListener</literal> interface), in which case their implementation would be responsible for processing any <literal>load()</literal> requests made of the <literal>Session</literal>."
msgstr ""

#. Tag: para
#, no-c-format
msgid "The listeners should be considered singletons. This means they are shared between requests, and should not save any state as instance variables."
msgstr ""

#. Tag: para
#, no-c-format
msgid "A custom listener implements the appropriate interface for the event it wants to process and/or extend one of the convenience base classes (or even the default event listeners used by Hibernate out-of-the-box as these are declared non-final for this purpose). Custom listeners can either be registered programmatically through the <literal>Configuration</literal> object, or specified in the Hibernate configuration XML. Declarative configuration through the properties file is not supported. Here is an example of a custom load event listener:"
msgstr ""

#. Tag: para
#, no-c-format
msgid "You also need a configuration entry telling Hibernate to use the listener in addition to the default listener:"
msgstr ""

#. Tag: para
#, no-c-format
msgid "Instead, you can register it programmatically:"
msgstr ""

#. Tag: para
#, no-c-format
msgid "Listeners registered declaratively cannot share instances. If the same class name is used in multiple <literal>&lt;listener/&gt;</literal> elements, each reference will result in a separate instance of that class. If you need to share listener instances between listener types you must use the programmatic registration approach."
msgstr ""

#. Tag: para
#, no-c-format
msgid "Why implement an interface and define the specific type during configuration? A listener implementation could implement multiple event listener interfaces. Having the type additionally defined during registration makes it easier to turn custom listeners on or off during configuration."
msgstr ""

#. Tag: title
#, no-c-format
msgid "Hibernate declarative security"
msgstr ""

#. Tag: para
#, no-c-format
msgid "Usually, declarative security in Hibernate applications is managed in a session facade layer. Hibernate3 allows certain actions to be permissioned via JACC, and authorized via JAAS. This is an optional functionality that is built on top of the event architecture."
msgstr ""

#. Tag: para
#, no-c-format
msgid "First, you must configure the appropriate event listeners, to enable the use of JAAS authorization."
msgstr ""

#. Tag: para
#, no-c-format
msgid "Note that <literal>&lt;listener type=\"...\" class=\"...\"/&gt;</literal> is shorthand for <literal>&lt;event type=\"...\"&gt;&lt;listener class=\"...\"/&gt;&lt;/event&gt;</literal> when there is exactly one listener for a particular event type."
msgstr ""

#. Tag: para
#, no-c-format
msgid "Next, while still in <literal>hibernate.cfg.xml</literal>, bind the permissions to roles:"
msgstr ""

#. Tag: para
#, no-c-format
msgid "The role names are the roles understood by your JACC provider."
msgstr ""

