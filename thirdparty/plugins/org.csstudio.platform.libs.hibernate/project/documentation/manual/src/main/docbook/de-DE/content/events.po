# translation of Collection_Mapping.po to 
# translation of Collection_Mapping.po to
# translation of Collection_Mapping.po to
# translation of Collection_Mapping.po to
# translation of Collection_Mapping.po to
# translation of Collection_Mapping.po to
# Language /mnt/hgfs/base/Hibernate/Reference translations for PACKAGE package.
# Copyright (C) 2006, 2007 Free Software Foundation, Inc.
# Automatically generated, 2006.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
#
msgid ""
msgstr ""
"Project-Id-Version: Collection_Mapping\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2010-02-10T07:25:34\n"
"PO-Revision-Date: 2007-02-26 10:27+1000\n"
"Last-Translator: \n"
"Language-Team:  <de@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: KBabel 1.9.1\n"

#. Tag: title
#, no-c-format
msgid "Interceptors and events"
msgstr "Interzeptoren und Ereignisse"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"It is useful for the application to react to certain events that occur "
"inside Hibernate. This allows for the implementation of generic "
"functionality and the extension of Hibernate functionality."
msgstr ""
"Es ist oftmals von Nutzen, wenn die Anwendung auf bestimmte, innerhalb "
"Hibernates ablaufende Ereignisse (\"Events\") reagiert. Es ermöglicht die "
"Implementierung bestimmter Arten auswählbarer Funktionalitäten sowie eine "
"Erweiterung der Funktionalität von Hibernate."

#. Tag: title
#, no-c-format
msgid "Interceptors"
msgstr "Interzeptoren"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"The <literal>Interceptor</literal> interface provides callbacks from the "
"session to the application, allowing the application to inspect and/or "
"manipulate properties of a persistent object before it is saved, updated, "
"deleted or loaded. One possible use for this is to track auditing "
"information. For example, the following <literal>Interceptor</literal> "
"automatically sets the <literal>createTimestamp</literal> when an "
"<literal>Auditable</literal> is created and updates the "
"<literal>lastUpdateTimestamp</literal> property when an <literal>Auditable</"
"literal> is updated."
msgstr ""
"Das <literal>Interceptor</literal>-Interface bietet die Möglichkeit von "
"Callbacks der Session an die Anwendung, wodurch letztere die Properties "
"eines persistenten Objekts vorweg prüfen und/oder verändern kann, ehe dieses "
"gespeichert, aktualisiert, gelöscht oder geladen wird. Eine mögliche "
"Anwendung hierfür ist etwa das Auditing von Informationen. Zum Beispiel "
"setzt der folgende <literal>Interceptor</literal> automatisch "
"<literal>createTimestamp</literal>, wenn ein <literal>Auditable</literal> "
"erstellt wird und aktualisiert die <literal>lastUpdateTimestamp</literal>-"
"Property, wenn ein <literal>Auditable</literal> aktualisiert wird."

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"You can either implement <literal>Interceptor</literal> directly or extend "
"<literal>EmptyInterceptor</literal>."
msgstr ""
"Sie können <literal>Interceptor</literal> entweder direkt implementieren "
"oder (besser) <literal>EmptyInterceptor</literal> erweitern."

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"There are two kinds of inteceptors: <literal>Session</literal>-scoped and "
"<literal>SessionFactory</literal>-scoped."
msgstr ""
"Es existieren zwei Arten von Interzeptoren: Für die <literal>Session</"
"literal> zuständige und für die <literal>SessionFactory</literal> zuständige."

#. Tag: para
#, no-c-format
msgid ""
"A <literal>Session</literal>-scoped interceptor is specified when a session "
"is opened using one of the overloaded SessionFactory.openSession() methods "
"accepting an <literal>Interceptor</literal>."
msgstr ""
"Ein für die <literal>Session</literal> zuständiger Interzeptor wird beim "
"Öffnen einer Session unter Verwendung einer der überlasteten SessionFactory."
"openSession()-Methoden spezifiziert, die einen <literal>Interceptor</"
"literal> akzeptieren."

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"A <literal>SessionFactory</literal>-scoped interceptor is registered with "
"the <literal>Configuration</literal> object prior to building the "
"<literal>SessionFactory</literal>. Unless a session is opened explicitly "
"specifying the interceptor to use, the supplied interceptor will be applied "
"to all sessions opened from that <literal>SessionFactory</literal>. "
"<literal>SessionFactory</literal>-scoped interceptors must be thread safe. "
"Ensure that you do not store session-specific states, since multiple "
"sessions will use this interceptor potentially concurrently."
msgstr ""
"Ein für die <literal>SessionFactory</literal> zuständiger Interzeptor wird "
"mit dem <literal>Configuration</literal>-Objekt vor dem Bau der "
"<literal>SessionFactory</literal> erfasst. In diesem Fall wird der "
"gelieferte Interzeptor bei allen von dieser <literal>SessionFactory</"
"literal> geöffneten Sessions angewendet, außer bei einer Session wird "
"explizit der zu verwendende Interzeptor genannt. Für die "
"<literal>SessionFactory</literal> zuständige Interzeptoren müssen "
"threadsicher sein und dürfen keinen Session-spezifischen Status speichern, "
"da mehrere Sessions diesen Interzeptor (möglicherweise) gleichzeitig "
"verwenden."

#. Tag: title
#, no-c-format
msgid "Event system"
msgstr "Ereignissystem"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"If you have to react to particular events in your persistence layer, you can "
"also use the Hibernate3 <emphasis>event</emphasis> architecture. The event "
"system can be used in addition, or as a replacement, for interceptors."
msgstr ""
"Falls Sie auf bestimmte Ereignisse in Ihrer Persistenzschicht reagieren "
"müssen, können Sie die Hibernate3 <emphasis>Ereignis</emphasis>-Architektur "
"verwenden. Das Ereignissystem kann zusätzlich oder aber als Ersatz für "
"Interzeptoren verwendet werden."

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"All the methods of the <literal>Session</literal> interface correlate to an "
"event. You have a <literal>LoadEvent</literal>, a <literal>FlushEvent</"
"literal>, etc. Consult the XML configuration-file DTD or the <literal>org."
"hibernate.event</literal> package for the full list of defined event types. "
"When a request is made of one of these methods, the Hibernate "
"<literal>Session</literal> generates an appropriate event and passes it to "
"the configured event listeners for that type. Out-of-the-box, these "
"listeners implement the same processing in which those methods always "
"resulted. However, you are free to implement a customization of one of the "
"listener interfaces (i.e., the <literal>LoadEvent</literal> is processed by "
"the registered implementation of the <literal>LoadEventListener</literal> "
"interface), in which case their implementation would be responsible for "
"processing any <literal>load()</literal> requests made of the "
"<literal>Session</literal>."
msgstr ""
"Im Wesentlichen korrelieren alle Methoden des <literal>Session</literal>-"
"Interface mit einem Ereignis. Es gibt ein <literal>LoadEvent</literal>, ein "
"<literal>FlushEvent</literal>, usw. (in der XML-Konfigurationsdatei DTD oder "
"dem <literal>org.hibernate.event</literal>-Paket finden Sie die vollständige "
"Liste aller definierten Ereignistypen). Wenn eine Anfrage einer dieser "
"Methoden erfolgt, so generiert die Hibernate <literal>Session</literal> ein "
"zugehöriges Ereignis und gibt es an die für diesen Typ konfigurierten "
"\"Event-Listener\" weiter. Diese Listener implementieren dieselbe "
"Bearbeitung, die diese Methoden stets hervorbringen. Es steht Ihnen jedoch "
"frei, ein angepasstes Listener-Interface zu implementieren (d.h. "
"<literal>LoadEvent</literal> wird durch die erfasste Implementierung des "
"<literal>LoadEventListener</literal>-Interface bearbeitet), in welchem Fall "
"die Implementierung für die Bearbeitung sämtlicher durch die "
"<literal>Session</literal> erfolgender <literal>load()</literal>-Anfragen "
"verantwortlich wäre."

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"The listeners should be considered singletons. This means they are shared "
"between requests, and should not save any state as instance variables."
msgstr ""
"Die Listener sollten effektiv als Singletons angesehen werden, was bedeutet, "
"dass sie zwischen Anfragen geteilt werden und daher keinen Status als "
"Instanzvariable speichern sollten."

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"A custom listener implements the appropriate interface for the event it "
"wants to process and/or extend one of the convenience base classes (or even "
"the default event listeners used by Hibernate out-of-the-box as these are "
"declared non-final for this purpose). Custom listeners can either be "
"registered programmatically through the <literal>Configuration</literal> "
"object, or specified in the Hibernate configuration XML. Declarative "
"configuration through the properties file is not supported. Here is an "
"example of a custom load event listener:"
msgstr ""
"Ein angepasster Listener sollte das passende Interface für das Ereignis, das "
"bearbeitet werden und/oder einer der Bedienungsgrundklassen erweitern soll, "
"implementieren (oder sogar die ausgezeichneten standardmäßigen Ereignis-"
"Listener, die von Hibernate verwendet und für diesen Zweck als nicht-final "
"deklariert sind). Angepasste Listener können entweder programmatisch durch "
"das <literal>Configuration</literal>-Objekt oder in der Hibernate "
"Konfigurations-XML (deklarative Konfiguration durch die Properties-Datei "
"wird nicht unterstützt) erfasst werden. Nachfolgend sehen Sie ein Beispiel "
"für einen angepassten \"Load-Event-Listener\":"

#. Tag: para
#, no-c-format
msgid ""
"You also need a configuration entry telling Hibernate to use the listener in "
"addition to the default listener:"
msgstr ""
"Sie benötigen außerdem einen Konfigurationseintrag, der Hibernate mitteilt, "
"dass der Listener zusätzlich zum Standard-Listener verwendet werden soll:"

#. Tag: para
#, fuzzy, no-c-format
msgid "Instead, you can register it programmatically:"
msgstr "Statt dessen können Sie dies programmatisch erfassen:"

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Listeners registered declaratively cannot share instances. If the same class "
"name is used in multiple <literal>&lt;listener/&gt;</literal> elements, each "
"reference will result in a separate instance of that class. If you need to "
"share listener instances between listener types you must use the "
"programmatic registration approach."
msgstr ""
"Deklarativ erfasste Listener können keine Instanzen teilen. Falls derselbe "
"Klassenname in mehreren <literal>&lt;listener/&gt;</literal>-Elementen "
"verwendet wird, so wird jeder Verweis in einer separaten Instanz dieser "
"Klasse resultieren. Falls Sie die Möglichkeit des Teilens von Listener-"
"Instanzen zwischen Listener-Typen benötigen, müssen Sie die programmatische "
"Erfassung nutzen."

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Why implement an interface and define the specific type during "
"configuration? A listener implementation could implement multiple event "
"listener interfaces. Having the type additionally defined during "
"registration makes it easier to turn custom listeners on or off during "
"configuration."
msgstr ""
"Warum jedoch ein Interface implementieren und während der Konfiguration den "
"spezifischen Typ definieren? Nun, eine Listener-Implementierung könnte "
"mehrere Event-Listener Interfaces implementieren. Definiert man den Typ "
"zusätzlich während der Erfassung, ist es einfacher angepasste Listener "
"während der Konfiguration an- und auszuschalten."

#. Tag: title
#, no-c-format
msgid "Hibernate declarative security"
msgstr "Deklarative Sicherheit in Hibernate "

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Usually, declarative security in Hibernate applications is managed in a "
"session facade layer. Hibernate3 allows certain actions to be permissioned "
"via JACC, and authorized via JAAS. This is an optional functionality that is "
"built on top of the event architecture."
msgstr ""
"Für gewöhnlich wird die deklarative Sicherheit in Hibernate Anwendungen "
"durch eine Fassadenschicht geregelt. Jetzt ermöglicht Hibernate3 die "
"Genehmigung bestimmter Vorgänge via JACC sowie die Authorisierung via JAAS. "
"Es handelt sich dabei um eine optionale Funktionalität, die auf der Ereignis-"
"Architektur (sog. \"Event-Architecture\") aufgebaut ist."

#. Tag: para
#, no-c-format
msgid ""
"First, you must configure the appropriate event listeners, to enable the use "
"of JAAS authorization."
msgstr ""
"Zunächst einmal müssen die betreffenden Event-Listener konfiguriert werden, "
"damit die Verwendung der JAAS Authorisierung aktiviert ist."

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Note that <literal>&lt;listener type=\"...\" class=\"...\"/&gt;</literal> is "
"shorthand for <literal>&lt;event type=\"...\"&gt;&lt;listener class=\"...\"/"
"&gt;&lt;/event&gt;</literal> when there is exactly one listener for a "
"particular event type."
msgstr ""
"Beachten Sie, dass <literal>&lt;listener type=\"...\" class=\"...\"/&gt;</"
"literal> lediglich ein Kürzel für <literal>&lt;event type=\"...\"&gt;&lt;"
"listener class=\"...\"/&gt;&lt;/event&gt;</literal> ist, wenn genau ein "
"Listener für einen bestimmten Ereignistyp existiert."

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Next, while still in <literal>hibernate.cfg.xml</literal>, bind the "
"permissions to roles:"
msgstr ""
"Anschließend, und immer noch in <literal>hibernate.cfg.xml</literal>, binden "
"Sie die Genehmigungen (sog. \"permissions\") an die Rollen:"

#. Tag: para
#, no-c-format
msgid "The role names are the roles understood by your JACC provider."
msgstr "Die Rollennamen sind die von Ihrem JACC-Anbieter verstandenen Rollen."

#, fuzzy
#~ msgid ""
#~ "<![CDATA[package org.hibernate.test;\n"
#~ "\n"
#~ "import java.io.Serializable;\n"
#~ "import java.util.Date;\n"
#~ "import java.util.Iterator;\n"
#~ "\n"
#~ "import org.hibernate.EmptyInterceptor;\n"
#~ "import org.hibernate.Transaction;\n"
#~ "import org.hibernate.type.Type;\n"
#~ "\n"
#~ "public class AuditInterceptor extends EmptyInterceptor {\n"
#~ "\n"
#~ "    private int updates;\n"
#~ "    private int creates;\n"
#~ "    private int loads;\n"
#~ "\n"
#~ "    public void onDelete(Object entity,\n"
#~ "                         Serializable id,\n"
#~ "                         Object[] state,\n"
#~ "                         String[] propertyNames,\n"
#~ "                         Type[] types) {\n"
#~ "        // do nothing\n"
#~ "    }\n"
#~ "\n"
#~ "    public boolean onFlushDirty(Object entity,\n"
#~ "                                Serializable id,\n"
#~ "                                Object[] currentState,\n"
#~ "                                Object[] previousState,\n"
#~ "                                String[] propertyNames,\n"
#~ "                                Type[] types) {\n"
#~ "\n"
#~ "        if ( entity instanceof Auditable ) {\n"
#~ "            updates++;\n"
#~ "            for ( int i=0; i < propertyNames.length; i++ ) {\n"
#~ "                if ( \"lastUpdateTimestamp\".equals( propertyNames[i] ) ) "
#~ "{\n"
#~ "                    currentState[i] = new Date();\n"
#~ "                    return true;\n"
#~ "                }\n"
#~ "            }\n"
#~ "        }\n"
#~ "        return false;\n"
#~ "    }\n"
#~ "\n"
#~ "    public boolean onLoad(Object entity,\n"
#~ "                          Serializable id,\n"
#~ "                          Object[] state,\n"
#~ "                          String[] propertyNames,\n"
#~ "                          Type[] types) {\n"
#~ "        if ( entity instanceof Auditable ) {\n"
#~ "            loads++;\n"
#~ "        }\n"
#~ "        return false;\n"
#~ "    }\n"
#~ "\n"
#~ "    public boolean onSave(Object entity,\n"
#~ "                          Serializable id,\n"
#~ "                          Object[] state,\n"
#~ "                          String[] propertyNames,\n"
#~ "                          Type[] types) {\n"
#~ "\n"
#~ "        if ( entity instanceof Auditable ) {\n"
#~ "            creates++;\n"
#~ "            for ( int i=0; i<propertyNames.length; i++ ) {\n"
#~ "                if ( \"createTimestamp\".equals( propertyNames[i] ) ) {\n"
#~ "                    state[i] = new Date();\n"
#~ "                    return true;\n"
#~ "                }\n"
#~ "            }\n"
#~ "        }\n"
#~ "        return false;\n"
#~ "    }\n"
#~ "\n"
#~ "    public void afterTransactionCompletion(Transaction tx) {\n"
#~ "        if ( tx.wasCommitted() ) {\n"
#~ "            System.out.println(\"Creations: \" + creates + \", Updates: "
#~ "\" + updates, \"Loads: \" + loads);\n"
#~ "        }\n"
#~ "        updates=0;\n"
#~ "        creates=0;\n"
#~ "        loads=0;\n"
#~ "    }\n"
#~ "\n"
#~ "}]]>"
#~ msgstr ""
#~ "package org.hibernate.test;\n"
#~ "\n"
#~ "import java.io.Serializable;\n"
#~ "import java.util.Date;\n"
#~ "import java.util.Iterator;\n"
#~ "\n"
#~ "import org.hibernate.EmptyInterceptor;\n"
#~ "import org.hibernate.Transaction;\n"
#~ "import org.hibernate.type.Type;\n"
#~ "\n"
#~ "public class AuditInterceptor extends EmptyInterceptor {\n"
#~ "\n"
#~ "    private int updates;\n"
#~ "    private int creates;\n"
#~ "    private int loads;\n"
#~ "\n"
#~ "    public void onDelete(Object entity,\n"
#~ "                         Serializable id,\n"
#~ "                         Object[] state,\n"
#~ "                         String[] propertyNames,\n"
#~ "                         Type[] types) {\n"
#~ "        // do nothing\n"
#~ "    }\n"
#~ "\n"
#~ "    public boolean onFlushDirty(Object entity,\n"
#~ "                                Serializable id,\n"
#~ "                                Object[] currentState,\n"
#~ "                                Object[] previousState,\n"
#~ "                                String[] propertyNames,\n"
#~ "                                Type[] types) {\n"
#~ "\n"
#~ "        if ( entity instanceof Auditable ) {\n"
#~ "            updates++;\n"
#~ "            for ( int i=0; i &lt; propertyNames.length; i++ ) {\n"
#~ "                if ( \"lastUpdateTimestamp\".equals( propertyNames[i] ) ) "
#~ "{\n"
#~ "                    currentState[i] = new Date();\n"
#~ "                    return true;\n"
#~ "                }\n"
#~ "            }\n"
#~ "        }\n"
#~ "        return false;\n"
#~ "    }\n"
#~ "\n"
#~ "    public boolean onLoad(Object entity,\n"
#~ "                          Serializable id,\n"
#~ "                          Object[] state,\n"
#~ "                          String[] propertyNames,\n"
#~ "                          Type[] types) {\n"
#~ "        if ( entity instanceof Auditable ) {\n"
#~ "            loads++;\n"
#~ "        }\n"
#~ "        return false;\n"
#~ "    }\n"
#~ "\n"
#~ "    public boolean onSave(Object entity,\n"
#~ "                          Serializable id,\n"
#~ "                          Object[] state,\n"
#~ "                          String[] propertyNames,\n"
#~ "                          Type[] types) {\n"
#~ "\n"
#~ "        if ( entity instanceof Auditable ) {\n"
#~ "            creates++;\n"
#~ "            for ( int i=0; i&lt;propertyNames.length; i++ ) {\n"
#~ "                if ( \"createTimestamp\".equals( propertyNames[i] ) ) {\n"
#~ "                    state[i] = new Date();\n"
#~ "                    return true;\n"
#~ "                }\n"
#~ "            }\n"
#~ "        }\n"
#~ "        return false;\n"
#~ "    }\n"
#~ "\n"
#~ "    public void afterTransactionCompletion(Transaction tx) {\n"
#~ "        if ( tx.wasCommitted() ) {\n"
#~ "            System.out.println(\"Creations: \" + creates + \", Updates: "
#~ "\" + updates,\n"
#~ "                \"Loads: \" + loads);\n"
#~ "        }\n"
#~ "        updates=0;\n"
#~ "        creates=0;\n"
#~ "        loads=0;\n"
#~ "    }\n"
#~ "\n"
#~ "}"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[Session session = sf.openSession( new AuditInterceptor() );]]>"
#~ msgstr "Session session = sf.openSession( new AuditInterceptor() );"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[new Configuration().setInterceptor( new AuditInterceptor() );]]>"
#~ msgstr "new Configuration().setInterceptor( new AuditInterceptor() );"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[public class MyLoadListener implements LoadEventListener {\n"
#~ "    // this is the single method defined by the LoadEventListener "
#~ "interface\n"
#~ "    public void onLoad(LoadEvent event, LoadEventListener.LoadType "
#~ "loadType)\n"
#~ "            throws HibernateException {\n"
#~ "        if ( !MySecurity.isAuthorized( event.getEntityClassName(), event."
#~ "getEntityId() ) ) {\n"
#~ "            throw MySecurityException(\"Unauthorized access\");\n"
#~ "        }\n"
#~ "    }\n"
#~ "}]]>"
#~ msgstr ""
#~ "public class MyLoadListener implements LoadEventListener {\n"
#~ "    // this is the single method defined by the LoadEventListener "
#~ "interface\n"
#~ "    public void onLoad(LoadEvent event, LoadEventListener.LoadType "
#~ "loadType)\n"
#~ "            throws HibernateException {\n"
#~ "        if ( !MySecurity.isAuthorized( event.getEntityClassName(), event."
#~ "getEntityId() ) ) {\n"
#~ "            throw MySecurityException(\"Unauthorized access\");\n"
#~ "        }\n"
#~ "    }\n"
#~ "}"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[<hibernate-configuration>\n"
#~ "    <session-factory>\n"
#~ "        ...\n"
#~ "        <event type=\"load\">\n"
#~ "            <listener class=\"com.eg.MyLoadListener\"/>\n"
#~ "            <listener class=\"org.hibernate.event.def."
#~ "DefaultLoadEventListener\"/>\n"
#~ "        </event>\n"
#~ "    </session-factory>\n"
#~ "</hibernate-configuration>]]>"
#~ msgstr ""
#~ "&lt;hibernate-configuration&gt;\n"
#~ "    &lt;session-factory&gt;\n"
#~ "        ...\n"
#~ "        &lt;event type=\"load\"&gt;\n"
#~ "            &lt;listener class=\"com.eg.MyLoadListener\"/&gt;\n"
#~ "            &lt;listener class=\"org.hibernate.event.def."
#~ "DefaultLoadEventListener\"/&gt;\n"
#~ "        &lt;/event&gt;\n"
#~ "    &lt;/session-factory&gt;\n"
#~ "&lt;/hibernate-configuration&gt;"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[Configuration cfg = new Configuration();\n"
#~ "LoadEventListener[] stack = { new MyLoadListener(), new "
#~ "DefaultLoadEventListener() };\n"
#~ "cfg.EventListeners().setLoadEventListeners(stack);]]>"
#~ msgstr ""
#~ "Configuration cfg = new Configuration();\n"
#~ "LoadEventListener[] stack = { new MyLoadListener(), new "
#~ "DefaultLoadEventListener() };\n"
#~ "cfg.EventListeners().setLoadEventListeners(stack);"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[<listener type=\"pre-delete\" class=\"org.hibernate.secure."
#~ "JACCPreDeleteEventListener\"/>\n"
#~ "<listener type=\"pre-update\" class=\"org.hibernate.secure."
#~ "JACCPreUpdateEventListener\"/>\n"
#~ "<listener type=\"pre-insert\" class=\"org.hibernate.secure."
#~ "JACCPreInsertEventListener\"/>\n"
#~ "<listener type=\"pre-load\" class=\"org.hibernate.secure."
#~ "JACCPreLoadEventListener\"/>]]>"
#~ msgstr ""
#~ "&lt;listener type=\"pre-delete\" class=\"org.hibernate.secure."
#~ "JACCPreDeleteEventListener\"/&gt;\n"
#~ "&lt;listener type=\"pre-update\" class=\"org.hibernate.secure."
#~ "JACCPreUpdateEventListener\"/&gt;\n"
#~ "&lt;listener type=\"pre-insert\" class=\"org.hibernate.secure."
#~ "JACCPreInsertEventListener\"/&gt;\n"
#~ "&lt;listener type=\"pre-load\" class=\"org.hibernate.secure."
#~ "JACCPreLoadEventListener\"/&gt;"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[<grant role=\"admin\" entity-name=\"User\" actions=\"insert,"
#~ "update,read\"/>\n"
#~ "<grant role=\"su\" entity-name=\"User\" actions=\"*\"/>]]>"
#~ msgstr ""
#~ "&lt;grant role=\"admin\" entity-name=\"User\" actions=\"insert,update,read"
#~ "\"/&gt;\n"
#~ "&lt;grant role=\"su\" entity-name=\"User\" actions=\"*\"/&gt;"
