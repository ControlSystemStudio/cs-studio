# translation of Collection_Mapping.po to
# Xi Huang <xhuang@redhat.com>, 2006.
# Xi HUANG <xhuang@redhat.com>, 2007.
msgid ""
msgstr ""
"Project-Id-Version: Collection_Mapping\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2010-02-11T05:38:15\n"
"PO-Revision-Date: 2010-03-15 09:03+1000\n"
"Last-Translator: Xi HUANG <xhuang@redhat.com>\n"
"Language-Team:  <en@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: KBabel 1.11.4\n"

#. Tag: title
#, no-c-format
msgid "Configuration"
msgstr "配置"

#. Tag: para
#, no-c-format
msgid "Hibernate is designed to operate in many different environments and, as such, there is a broad range of configuration parameters. Fortunately, most have sensible default values and Hibernate is distributed with an example <literal>hibernate.properties</literal> file in <literal>etc/</literal> that displays the various options. Simply put the example file in your classpath and customize it to suit your needs."
msgstr "由于 Hibernate 是为了能在各种不同环境下工作而设计的，因此存在着大量的配置参数。幸运的是多数配置参数都有比较直观的默认值，并有随 Hibernate 一同分发的配置样例 <literal>hibernate.properties</literal>（位于 <literal>etc/</literal>）来展示各种配置选项。所需做的仅仅是将这个样例文件复制到类路径（classpath）下并进行定制。"

#. Tag: title
#, no-c-format
msgid "Programmatic configuration"
msgstr "可编程的配置方式"

#. Tag: para
#, no-c-format
msgid "An instance of <classname>org.hibernate.cfg.Configuration</classname> represents an entire set of mappings of an application's Java types to an SQL database. The <classname>org.hibernate.cfg.Configuration</classname> is used to build an immutable <interfacename>org.hibernate.SessionFactory</interfacename>. The mappings are compiled from various XML mapping files."
msgstr "<literal>org.hibernate.cfg.Configuration</literal> 实例代表了一个应用程序中 Java 类型到SQL数据库映射的完整集合。<classname>org.hibernate.cfg.Configuration</classname> 被用来构建一个（不可变的（immutable））<interfacename>org.hibernate.SessionFactory</interfacename>。映射定义则由不同的 XML 映射定义文件编译而来。"

#. Tag: para
#, no-c-format
msgid "You can obtain a <classname>org.hibernate.cfg.Configuration</classname> instance by instantiating it directly and specifying XML mapping documents. If the mapping files are in the classpath, use <literal>addResource()</literal>. For example:"
msgstr "你可以直接实例化 <classname>org.hibernate.cfg.Configuration</classname> 来获取一个实例，并为它指定 XML 映射定义文件。如果映射定义文件在类路径（classpath）中，请使用 <literal>addResource（)</literal>。例如："

#. Tag: para
#, no-c-format
msgid "An alternative way is to specify the mapped class and allow Hibernate to find the mapping document for you:"
msgstr "一个替代方法（有时是更好的选择）是，指定被映射的类，让 Hibernate 帮你寻找映射定义文件： "

#. Tag: para
#, no-c-format
msgid "Hibernate will then search for mapping files named <filename>/org/hibernate/auction/Item.hbm.xml</filename> and <filename>/org/hibernate/auction/Bid.hbm.xml</filename> in the classpath. This approach eliminates any hardcoded filenames."
msgstr "Hibernate 将会在类路径（classpath）中寻找名字为 <filename>/org/hibernate/auction/Item.hbm.xml</filename> 和 <filename>/org/hibernate/auction/Bid.hbm.xml</filename> 映射定义文件。这种方式消除了任何对文件名的硬编码（hardcoded）。"

#. Tag: para
#, no-c-format
msgid "A <classname>org.hibernate.cfg.Configuration</classname> also allows you to specify configuration properties. For example:"
msgstr "<classname>org.hibernate.cfg.Configuration</classname>> 也允许你指定配置属性。例如："

#. Tag: para
#, no-c-format
msgid "This is not the only way to pass configuration properties to Hibernate. Some alternative options include:"
msgstr "当然这不是唯一的传递 Hibernate 配置属性的方式，其他可选方式还包括： "

#. Tag: para
#, no-c-format
msgid "Pass an instance of <classname>java.util.Properties</classname> to <literal>Configuration.setProperties()</literal>."
msgstr "传一个 <classname>java.util.Properties</classname> 实例给 <literal>Configuration.setProperties()</literal>。"

#. Tag: para
#, no-c-format
msgid "Place a file named <filename>hibernate.properties</filename> in a root directory of the classpath."
msgstr "将 <filename>hibernate.properties</filename> 放置在类路径（classpath）的根目录下（root directory）。"

#. Tag: para
#, no-c-format
msgid "Set <literal>System</literal> properties using <literal>java -Dproperty=value</literal>."
msgstr "通过 <literal>java -Dproperty=value</literal> 来设置系统（<literal>System</literal>）属性。"

#. Tag: para
#, no-c-format
msgid "Include <literal>&lt;property&gt;</literal> elements in <literal>hibernate.cfg.xml</literal> (this is discussed later)."
msgstr "在 <literal>hibernate.cfg.xml</literal> 中加入元素 <literal>&lt;property&gt;</literal>（稍后讨论）。 "

#. Tag: para
#, no-c-format
msgid "If you want to get started quickly<filename>hibernate.properties</filename> is the easiest approach."
msgstr "如果你想快速上路，<filename>hibernate.properties</filename> 就是最容易的途径。"

#. Tag: para
#, no-c-format
msgid "The <classname>org.hibernate.cfg.Configuration</classname> is intended as a startup-time object that will be discarded once a <literal>SessionFactory</literal> is created."
msgstr "<classname>org.hibernate.cfg.Configuration</classname> 实例被设计成启动期间（startup-time）对象，一旦 <literal>SessionFactory</literal> 创建完成它就被丢弃了。"

#. Tag: title
#, no-c-format
msgid "Obtaining a SessionFactory"
msgstr "获得 SessionFactory"

#. Tag: para
#, no-c-format
msgid "When all mappings have been parsed by the <classname>org.hibernate.cfg.Configuration</classname>, the application must obtain a factory for <interfacename>org.hibernate.Session</interfacename> instances. This factory is intended to be shared by all application threads:"
msgstr "当所有映射定义被 <classname>org.hibernate.cfg.Configuration</classname> 解析后，应用程序必须获得一个用于构造 <interfacename>org.hibernate.Session</interfacename> 实例的工厂。这个工厂将被应用程序的所有线程共享："

#. Tag: para
#, no-c-format
msgid "Hibernate does allow your application to instantiate more than one <interfacename>org.hibernate.SessionFactory</interfacename>. This is useful if you are using more than one database."
msgstr "Hibernate 允许你的应用程序创建多个 <interfacename>org.hibernate.SessionFactory</interfacename> 实例。这对 使用多个数据库的应用来说很有用。"

#. Tag: title
#, no-c-format
msgid "JDBC connections"
msgstr "JDBC 连接"

#. Tag: para
#, no-c-format
msgid "It is advisable to have the <interfacename>org.hibernate.SessionFactory</interfacename> create and pool JDBC connections for you. If you take this approach, opening a <interfacename>org.hibernate.Session</interfacename> is as simple as:"
msgstr "通常你希望  <interfacename>org.hibernate.SessionFactory</interfacename> 来为你创建和缓存（pool）JDBC 连接。如果你采用这种方式，只需要如下例所示那样，打开一个 <interfacename>org.hibernate.Session</interfacename>："

#. Tag: para
#, no-c-format
msgid "Once you start a task that requires access to the database, a JDBC connection will be obtained from the pool."
msgstr "一旦你需要进行数据访问时，就会从连接池（connection pool）获得一个 JDBC 连接。 "

#. Tag: para
#, no-c-format
msgid "Before you can do this, you first need to pass some JDBC connection properties to Hibernate. All Hibernate property names and semantics are defined on the class <classname>org.hibernate.cfg.Environment</classname>. The most important settings for JDBC connection configuration are outlined below."
msgstr "为了使这种方式工作起来，我们需要向 Hibernate 传递一些 JDBC 连接的属性。所有 Hibernate 属性的名字和语义都在 <classname>org.hibernate.cfg.Environment</classname> 中定义。我们现在将描述 JDBC 连接配置中最重要的设置。"

#. Tag: para
#, no-c-format
msgid "Hibernate will obtain and pool connections using <classname>java.sql.DriverManager</classname> if you set the following properties:"
msgstr "如果你设置如下属性，Hibernate 将使用 <classname>java.sql.DriverManager</classname> 来获得（和缓存）JDBC 连接："

#. Tag: title
#, no-c-format
msgid "Hibernate JDBC Properties"
msgstr "Hibernate JDBC 属性"

#. Tag: entry
#, no-c-format
msgid "Property name"
msgstr "属性名"

#. Tag: entry
#, no-c-format
msgid "Purpose"
msgstr "用途"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.connection.driver_class</property>"
msgstr "<property>hibernate.connection.driver_class</property>"

#. Tag: entry
#, no-c-format
msgid "<emphasis>JDBC driver class</emphasis>"
msgstr "<emphasis>JDBC 驱动类</emphasis>"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.connection.url</property>"
msgstr "<property>hibernate.connection.url</property>"

#. Tag: entry
#, no-c-format
msgid "<emphasis>JDBC URL</emphasis>"
msgstr "<emphasis>JDBC URL</emphasis>"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.connection.username</property>"
msgstr "<property>hibernate.connection.username</property>"

#. Tag: entry
#, no-c-format
msgid "<emphasis>database user</emphasis>"
msgstr "<emphasis>数据库用户</emphasis>（可选） "

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.connection.password</property>"
msgstr "<property>hibernate.connection.password</property>"

#. Tag: entry
#, no-c-format
msgid "<emphasis>database user password</emphasis>"
msgstr "<emphasis>数据库密码</emphasis>（可选） "

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.connection.pool_size</property>"
msgstr "<property>hibernate.connection.pool_size</property>"

#. Tag: entry
#, no-c-format
msgid "<emphasis>maximum number of pooled connections</emphasis>"
msgstr "<emphasis>连接池容量上限数目</emphasis>"

#. Tag: para
#, no-c-format
msgid "Hibernate's own connection pooling algorithm is, however, quite rudimentary. It is intended to help you get started and is <emphasis>not intended for use in a production system</emphasis>, or even for performance testing. You should use a third party pool for best performance and stability. Just replace the <property>hibernate.connection.pool_size</property> property with connection pool specific settings. This will turn off Hibernate's internal pool. For example, you might like to use c3p0."
msgstr "但 Hibernate 自带的连接池算法相当不成熟。它只是为了让你快些上手<emphasis>，并不适合用于产品系统</emphasis>或性能测试中。 出于最佳性能和稳定性考虑你应该使用第三方的连接池。只需要用特定连接池的设置替换 <literal>hibernate.connection.pool_size</literal> 即可。这将关闭 Hibernate 自带的连接池。例如，你可能会想用 C3P0。  "

#. Tag: para
#, no-c-format
msgid "C3P0 is an open source JDBC connection pool distributed along with Hibernate in the <filename>lib</filename> directory. Hibernate will use its <classname>org.hibernate.connection.C3P0ConnectionProvider</classname> for connection pooling if you set <property>hibernate.c3p0.*</property> properties. If you would like to use Proxool, refer to the packaged <filename>hibernate.properties</filename> and the Hibernate web site for more information."
msgstr "C3P0 是一个随 Hibernate 一同分发的开源的 JDBC 连接池，它位于 <literal>lib</literal>目录下。 如果你设置了 <literal>hibernate.c3p0.*</literal> 相关的属性，Hibernate将使用 <literal>C3P0ConnectionProvider</literal> 来缓存 JDBC 连接。如果你更原意使用 Proxool，请参考发行包中的 <literal>hibernate.properties</literal> 并到 Hibernate 网站获取更多的信息。 "

#. Tag: para
#, no-c-format
msgid "The following is an example <filename>hibernate.properties</filename> file for c3p0:"
msgstr "这是一个使用 C3P0 的 <literal>hibernate.properties</literal> 样例文件： "

#. Tag: para
#, no-c-format
msgid "For use inside an application server, you should almost always configure Hibernate to obtain connections from an application server <interfacename>javax.sql.Datasource</interfacename> registered in JNDI. You will need to set at least one of the following properties:"
msgstr "为了能在应用程序服务器（application server）中使用 Hibernate，应当总是将 Hibernate 配置成从注册在 JNDI 中的 <literal>Datasource</literal> 处获得连接，你至少需要设置下列属性中的一个： "

#. Tag: title
#, no-c-format
msgid "Hibernate Datasource Properties"
msgstr "Hibernate 数据源属性"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.connection.datasource</property>"
msgstr "<property>hibernate.connection.datasource</property>"

#. Tag: entry
#, no-c-format
msgid "<emphasis>datasource JNDI name</emphasis>"
msgstr "<emphasis>数据库用户</emphasis>（可选） "

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.jndi.url</property>"
msgstr "<property>hibernate.jndi.url</property>"

#. Tag: entry
#, no-c-format
msgid "<emphasis>URL of the JNDI provider</emphasis> (optional)"
msgstr "<emphasis>JNDI 提供者的 URL</emphasis>（可选）"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.jndi.class</property>"
msgstr "<property>hibernate.jndi.class</property>"

#. Tag: entry
#, no-c-format
msgid "<emphasis>class of the JNDI <literal>InitialContextFactory</literal></emphasis> (optional)"
msgstr "<emphasis>JNDI <literal>InitialContextFactory</literal> 类</emphasis>（可选）"

#. Tag: entry
#, no-c-format
msgid "<emphasis>database user</emphasis> (optional)"
msgstr "<emphasis>数据库用户</emphasis>（可选）"

#. Tag: entry
#, no-c-format
msgid "<emphasis>database user password</emphasis> (optional)"
msgstr "<emphasis>数据库密码</emphasis>（可选）"

#. Tag: para
#, no-c-format
msgid "Here is an example <filename>hibernate.properties</filename> file for an application server provided JNDI datasource:"
msgstr "这是一个使用应用程序服务器提供的 JNDI 数据源的 <literal>hibernate.properties</literal> 样例文件： "

#. Tag: para
#, no-c-format
msgid "JDBC connections obtained from a JNDI datasource will automatically participate in the container-managed transactions of the application server."
msgstr "从 JNDI 数据源获得的 JDBC 连接将自动参与到应用程序服务器中容器管理的事务（container-managed transactions）中去。"

#. Tag: para
#, no-c-format
msgid "Arbitrary connection properties can be given by prepending \"<literal>hibernate.connection</literal>\" to the connection property name. For example, you can specify a <property>charSet</property> connection property using <property>hibernate.connection.charSet</property>."
msgstr "任何连接（connection）属性的属性名都要以 \"<literal>hibernate.connnection</literal>\" 开头。例如，你可能会使用 <literal>hibernate.connection.charSet</literal> 来指定 <property>charSet</property> 连接属性。 "

#. Tag: para
#, no-c-format
msgid "You can define your own plugin strategy for obtaining JDBC connections by implementing the interface <interfacename>org.hibernate.connection.ConnectionProvider</interfacename>, and specifying your custom implementation via the <property>hibernate.connection.provider_class</property> property."
msgstr "通过实现 <literal>org.hibernate.connection.ConnectionProvider</literal> 接口，你可以定义属于你自己的获得JDBC连接的插件策略。通过设置<literal>hibernate.connection.provider_class</literal>，你可以选择一个自定义的实现。 "

#. Tag: title
#, no-c-format
msgid "Optional configuration properties"
msgstr "可选的配置属性"

#. Tag: para
#, no-c-format
msgid "There are a number of other properties that control the behavior of Hibernate at runtime. All are optional and have reasonable default values."
msgstr "有大量属性能用来控制 Hibernate 在运行期的行为。它们都是可选的，并拥有适当的默认值。 "

#. Tag: para
#, no-c-format
msgid "<emphasis>Some of these properties are \"system-level\" only.</emphasis> System-level properties can be set only via <literal>java -Dproperty=value</literal> or <filename>hibernate.properties</filename>. They <emphasis>cannot</emphasis> be set by the other techniques described above."
msgstr "<emphasis>其中一些属性是\"系统级（system-level）的\"</emphasis>。系统级属性只能通过<literal>java -Dproperty=value</literal> 或 <literal>hibernate.properties</literal> 来设置，而<emphasis>不能</emphasis>用上面描述的其他方法来设置。"

#. Tag: title
#, no-c-format
msgid "Hibernate Configuration Properties"
msgstr "Hibernate 配置属性"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.dialect</property>"
msgstr "<property>hibernate.dialect</property>"

#. Tag: entry
#, no-c-format
msgid "The classname of a Hibernate <classname>org.hibernate.dialect.Dialect</classname> which allows Hibernate to generate SQL optimized for a particular relational database."
msgstr "允许 Hibernate 针对特定的关系数据库生成优化的 SQL 的 <classname>org.hibernate.dialect.Dialect</classname> 的类名。"

#. Tag: para
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>full.classname.of.Dialect</literal>"
msgstr "<emphasis role=\"strong\">例如：</emphasis><literal>full.classname.of.Dialect</literal> "

#. Tag: para
#, no-c-format
msgid "In most cases Hibernate will actually be able to choose the correct <classname>org.hibernate.dialect.Dialect</classname> implementation based on the <literal>JDBC metadata</literal> returned by the JDBC driver."
msgstr "在大多数情况下，Hibernate 可以根据 JDBC 驱动返回的 <literal>JDBC metadata</literal> 选择正确的 <classname>org.hibernate.dialect.Dialect</classname> 实现。"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.show_sql</property>"
msgstr "<property>hibernate.show_sql</property>"

#. Tag: entry
#, no-c-format
msgid "Write all SQL statements to console. This is an alternative to setting the log category <literal>org.hibernate.SQL</literal> to <literal>debug</literal>."
msgstr "输出所有 SQL 语句到控制台。有一个另外的选择是把 <literal>org.hibernate.SQL</literal> 这个 log category设为 <literal>debug</literal>。"

#. Tag: para
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>true</literal> | <literal>false</literal>"
msgstr "<emphasis role=\"strong\">例如：</emphasis><literal>true</literal> | <literal>false</literal> "

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.format_sql</property>"
msgstr "<property>hibernate.format_sql</property>"

#. Tag: entry
#, no-c-format
msgid "Pretty print the SQL in the log and console."
msgstr "在 log 和 console 中打印出更漂亮的 SQL。"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.default_schema</property>"
msgstr "<property>hibernate.default_schema</property>"

#. Tag: entry
#, no-c-format
msgid "Qualify unqualified table names with the given schema/tablespace in generated SQL."
msgstr "在生成的 SQL 中，将给定的 schema/tablespace 附加于非全限定名的表名上。 "

#. Tag: para
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>SCHEMA_NAME</literal>"
msgstr "<emphasis role=\"strong\">例如：</emphasis><literal>SCHEMA_NAME</literal> "

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.default_catalog</property>"
msgstr "<property>hibernate.default_catalog</property>"

#. Tag: entry
#, no-c-format
msgid "Qualifies unqualified table names with the given catalog in generated SQL."
msgstr "在生成的 SQL 中，将给定的 catalog 附加于非全限定名的表名上。 "

#. Tag: para
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>CATALOG_NAME</literal>"
msgstr "<emphasis role=\"strong\">例如：</emphasis><literal>CATALOG_NAME</literal> "

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.session_factory_name</property>"
msgstr "<property>hibernate.session_factory_name</property>"

#. Tag: entry
#, no-c-format
msgid "The <interfacename>org.hibernate.SessionFactory</interfacename> will be automatically bound to this name in JNDI after it has been created."
msgstr "<interfacename>org.hibernate.SessionFactory</interfacename> 创建后，将自动使用这个名字绑定到 JNDI 中。"

#. Tag: para
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>jndi/composite/name</literal>"
msgstr "<emphasis role=\"strong\">例如：</emphasis><literal>jndi/composite/name</literal> "

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.max_fetch_depth</property>"
msgstr "<property>hibernate.max_fetch_depth</property>"

#. Tag: entry
#, no-c-format
msgid "Sets a maximum \"depth\" for the outer join fetch tree for single-ended associations (one-to-one, many-to-one). A <literal>0</literal> disables default outer join fetching."
msgstr "为单向关联（一对一，多对一）的外连接抓取（outer join fetch）树设置最大深度。值为 <literal>0</literal> 意味着将关闭默认的外连接抓取。 "

#. Tag: para
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> recommended values between <literal>0</literal> and <literal>3</literal>"
msgstr "<emphasis role=\"strong\">例如：</emphasis> 建议在 <literal>0</literal> 到 <literal>3</literal> 之间取值 "

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.default_batch_fetch_size</property>"
msgstr "<property>hibernate.default_batch_fetch_size</property>"

#. Tag: entry
#, no-c-format
msgid "Sets a default size for Hibernate batch fetching of associations."
msgstr "为 Hibernate 关联的批量抓取设置默认数量。 "

#. Tag: para
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> recommended values <literal>4</literal>, <literal>8</literal>, <literal>16</literal>"
msgstr "<emphasis role=\"strong\">例如：</emphasis>建议的取值为 <literal>4</literal>，<literal>8</literal>，和 <literal>16</literal> "

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.default_entity_mode</property>"
msgstr "<property>hibernate.default_entity_mode</property>"

#. Tag: entry
#, no-c-format
msgid "Sets a default mode for entity representation for all sessions opened from this <literal>SessionFactory</literal>"
msgstr "为由这个 <literal>SessionFactory</literal> 打开的所有 Session 指定默认的实体表现模式。 "

#. Tag: para
#, no-c-format
msgid "<literal>dynamic-map</literal>, <literal>dom4j</literal>, <literal>pojo</literal>"
msgstr "<emphasis role=\"strong\">取值</emphasis><literal>dynamic-map</literal>，<literal>dom4j</literal>，<literal>pojo</literal>"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.order_updates</property>"
msgstr "<property>hibernate.order_updates</property>"

#. Tag: entry
#, no-c-format
msgid "Forces Hibernate to order SQL updates by the primary key value of the items being updated. This will result in fewer transaction deadlocks in highly concurrent systems."
msgstr "强制 Hibernate 按照被更新数据的主键，为 SQL 更新排序。这么做将减少在高并发系统中事务的死锁。"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.generate_statistics</property>"
msgstr "<property>hibernate.generate_statistics</property>"

#. Tag: entry
#, no-c-format
msgid "If enabled, Hibernate will collect statistics useful for performance tuning."
msgstr "如果开启，Hibernate 将收集有助于性能调节的统计数据。"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.use_identifier_rollback</property>"
msgstr "<property>hibernate.use_identifier_rollback</property>"

#. Tag: entry
#, no-c-format
msgid "If enabled, generated identifier properties will be reset to default values when objects are deleted."
msgstr "如果开启，在对象被删除时生成的标识属性将被重设为默认值。"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.use_sql_comments</property>"
msgstr "<property>hibernate.use_sql_comments</property>"

#. Tag: entry
#, no-c-format
msgid "If turned on, Hibernate will generate comments inside the SQL, for easier debugging, defaults to <literal>false</literal>."
msgstr "如果开启，Hibernate 将在 SQL 中生成有助于调试的注释信息，默认值为 <literal>false</literal>。"

#. Tag: title
#, no-c-format
msgid "Hibernate JDBC and Connection Properties"
msgstr "Hibernate JDBC 和连接（connection）属性"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.jdbc.fetch_size</property>"
msgstr "<property>hibernate.jdbc.fetch_size</property>"

#. Tag: entry
#, no-c-format
msgid "A non-zero value determines the JDBC fetch size (calls <literal>Statement.setFetchSize()</literal>)."
msgstr "非零值，指定 JDBC 抓取数量的大小（调用 <literal>Statement.setFetchSize()</literal>）。"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.jdbc.batch_size</property>"
msgstr "<property>hibernate.jdbc.batch_size</property>"

#. Tag: entry
#, no-c-format
msgid "A non-zero value enables use of JDBC2 batch updates by Hibernate."
msgstr "非零值，允许 Hibernate 使用 JDBC2 的批量更新。"

#. Tag: para
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> recommended values between <literal>5</literal> and <literal>30</literal>"
msgstr "<emphasis role=\"strong\">例如：</emphasis>建议取 <literal>5</literal> 到 <literal>30</literal> 之间的值 "

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.jdbc.batch_versioned_data</property>"
msgstr "<property>hibernate.jdbc.batch_versioned_data</property>"

#. Tag: entry
#, no-c-format
msgid "Set this property to <literal>true</literal> if your JDBC driver returns correct row counts from <literal>executeBatch()</literal>. Iit is usually safe to turn this option on. Hibernate will then use batched DML for automatically versioned data. Defaults to <literal>false</literal>."
msgstr "如果你想让你的 JDBC 驱动从 <literal>true</literal> 返回正确的行计数 ，那么将此属性设为 <literal>executeBatch()</literal>（开启这个选项通常是安全的）。同时，Hibernate 将为自动版本化的数据使用批量 DML。默认值为 <literal>false</literal>。 "

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.jdbc.factory_class</property>"
msgstr "<property>hibernate.jdbc.factory_class</property>"

#. Tag: entry
#, no-c-format
msgid "Select a custom <interfacename>org.hibernate.jdbc.Batcher</interfacename>. Most applications will not need this configuration property."
msgstr "选择一个自定义的 <literal>Batcher</literal>。多数应用程序不需要这个配置属性。 "

#. Tag: para
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>classname.of.BatcherFactory</literal>"
msgstr "<emphasis role=\"strong\">例如：</emphasis><literal>classname.of.Batcher</literal> "

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.jdbc.use_scrollable_resultset</property>"
msgstr "<property>hibernate.jdbc.use_scrollable_resultset</property>"

#. Tag: entry
#, no-c-format
msgid "Enables use of JDBC2 scrollable resultsets by Hibernate. This property is only necessary when using user-supplied JDBC connections. Hibernate uses connection metadata otherwise."
msgstr "允许 Hibernate 使用 JDBC2 的可滚动结果集。只有在使用用户提供的 JDBC 连接时，这个选项才是必要的，否则 Hibernate 会使用连接的元数据。 "

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.jdbc.use_streams_for_binary</property>"
msgstr "<property>hibernate.jdbc.use_streams_for_binary</property>"

#. Tag: entry
#, no-c-format
msgid "Use streams when writing/reading <literal>binary</literal> or <literal>serializable</literal> types to/from JDBC. <emphasis>*system-level property*</emphasis>"
msgstr "在 JDBC 读写 <literal>binary</literal> 或 <literal>serializable</literal> 的类型时使用流（stream）（系统级属性）。 "

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.jdbc.use_get_generated_keys</property>"
msgstr "<property>hibernate.jdbc.use_get_generated_keys</property>"

#. Tag: entry
#, no-c-format
msgid "Enables use of JDBC3 <literal>PreparedStatement.getGeneratedKeys()</literal> to retrieve natively generated keys after insert. Requires JDBC3+ driver and JRE1.4+, set to false if your driver has problems with the Hibernate identifier generators. By default, it tries to determine the driver capabilities using connection metadata."
msgstr "在数据插入数据库之后，允许使用 JDBC3 <literal>PreparedStatement.getGeneratedKeys()</literal> 来获取数据库生成的 key（键）。需要 JDBC3+ 驱动和 JRE1.4+，如果你的数据库驱动在使用 Hibernate 的标识生成器时遇到问题，请将此值设为 false。默认情况下将使用连接的元数据来判定驱动的能力。 "

#. Tag: para
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>true|false</literal>"
msgstr "<emphasis role=\"strong\">例如：</emphasis><literal>true | false</literal> "

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.connection.provider_class</property>"
msgstr "<property>hibernate.connection.provider_class</property>"

#. Tag: entry
#, no-c-format
msgid "The classname of a custom <interfacename>org.hibernate.connection.ConnectionProvider</interfacename> which provides JDBC connections to Hibernate."
msgstr "自定义 <literal>ConnectionProvider</literal> 的类名，此类用来向 Hibernate 提供 JDBC 连接。 "

#. Tag: para
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>classname.of.ConnectionProvider</literal>"
msgstr "<emphasis role=\"strong\">例如：</emphasis><literal>classname.of.ConnectionProvider</literal> "

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.connection.isolation</property>"
msgstr "<property>hibernate.connection.isolation</property>"

#. Tag: entry
#, no-c-format
msgid "Sets the JDBC transaction isolation level. Check <interfacename>java.sql.Connection</interfacename> for meaningful values, but note that most databases do not support all isolation levels and some define additional, non-standard isolations."
msgstr "设置 JDBC 事务隔离级别。查看 <literal>java.sql.Connection</literal> 来了解各个值的具体意义，但请注意多数数据库都不支持所有的隔离级别。 "

#. Tag: para
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>1, 2, 4, 8</literal>"
msgstr "<emphasis role=\"strong\">例如：</emphasis><literal>1, 2, 4, 8</literal> "

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.connection.autocommit</property>"
msgstr "<property>hibernate.connection.autocommit</property>"

#. Tag: entry
#, no-c-format
msgid "Enables autocommit for JDBC pooled connections (it is not recommended)."
msgstr "允许被缓存的 JDBC 连接开启自动提交（autocommit）（不推荐）。"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.connection.release_mode</property>"
msgstr "<property>hibernate.connection.release_mode</property>"

#. Tag: entry
#, no-c-format
msgid "Specifies when Hibernate should release JDBC connections. By default, a JDBC connection is held until the session is explicitly closed or disconnected. For an application server JTA datasource, use <literal>after_statement</literal> to aggressively release connections after every JDBC call. For a non-JTA connection, it often makes sense to release the connection at the end of each transaction, by using <literal>after_transaction</literal>. <literal>auto</literal> will choose <literal>after_statement</literal> for the JTA and CMT transaction strategies and <literal>after_transaction</literal> for the JDBC transaction strategy."
msgstr "指定 Hibernate 在何时释放 JDBC 连接。默认情况下,直到 Session 被显式关闭或被断开连接时,才会释放 JDBC 连接。对于应用程序服务器的 JTA 数据源，你应当使用  <literal>after_statement</literal>，这样在每次 JDBC 调用后，都会主动的释放连接。对于非 JTA 的连接，使用 <literal>after_transaction</literal> 在每个事务结束时释放连接是合理的。<literal>auto</literal> 将为 JTA 和 CMT 事务策略选择 <literal>after_statement</literal>，为JDBC事务策略选择 <literal>after_transaction</literal>。"

#. Tag: para
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>auto</literal> (default) | <literal>on_close</literal> | <literal>after_transaction</literal> | <literal>after_statement</literal>"
msgstr "<emphasis role=\"strong\">例如：</emphasis><literal>auto</literal> (默认) | <literal>on_close</literal> | <literal>after_transaction</literal> | <literal>after_statement</literal> "

#. Tag: para
#, no-c-format
msgid "This setting only affects <literal>Session</literal>s returned from <literal>SessionFactory.openSession</literal>. For <literal>Session</literal>s obtained through <literal>SessionFactory.getCurrentSession</literal>, the <literal>CurrentSessionContext</literal> implementation configured for use controls the connection release mode for those <literal>Session</literal>s. See <xref linkend=\"architecture-current-session\" />"
msgstr "注意，这些设置仅对通过 <literal>SessionFactory.openSession</literal> 得到的 <literal>Session</literal> 起作用。对于通过 <literal>SessionFactory.getCurrentSession</literal> 得到的 <literal>Session</literal>，所配置的 <literal>CurrentSessionContext</literal> 实现控制这些 <literal>Session</literal> 的连接释放模式。请参阅 <xref linkend=\"architecture-current-session\" />。"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.connection.</property><emphasis>&lt;propertyName&gt;</emphasis>"
msgstr "<property>hibernate.connection.</property><emphasis>&lt;propertyName&gt;</emphasis>"

#. Tag: entry
#, no-c-format
msgid "Pass the JDBC property <emphasis>&lt;propertyName&gt;</emphasis> to <literal>DriverManager.getConnection()</literal>."
msgstr "把 JDBC 属性 <emphasis>&lt;propertyName&gt;</emphasis> 传递给 <literal>DriverManager.getConnection()</literal>。"

#. Tag: entry
#, no-c-format
msgid "<property>hibernate.jndi.</property><emphasis>&lt;propertyName&gt;</emphasis>"
msgstr "<property>hibernate.jndi.</property><emphasis>&lt;propertyName&gt;</emphasis>"

#. Tag: entry
#, no-c-format
msgid "Pass the property <emphasis>&lt;propertyName&gt;</emphasis> to the JNDI <literal>InitialContextFactory</literal>."
msgstr "把 <emphasis>&lt;propertyName&gt;</emphasis> 属性传递给 JNDI <literal>InitialContextFactory</literal>。"

#. Tag: title
#, no-c-format
msgid "Hibernate Cache Properties"
msgstr "Hibernate 缓存属性"

#. Tag: entry
#, no-c-format
msgid "<literal>hibernate.cache.provider_class</literal>"
msgstr "<literal>hibernate.cache.provider_class</literal>"

#. Tag: entry
#, no-c-format
msgid "The classname of a custom <literal>CacheProvider</literal>."
msgstr "自定义的 <literal>CacheProvider</literal> 的类名。"

#. Tag: para
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>classname.of.CacheProvider</literal>"
msgstr "<emphasis role=\"strong\">例如：</emphasis><literal>classname.of.CacheProvider</literal> "

#. Tag: entry
#, no-c-format
msgid "<literal>hibernate.cache.use_minimal_puts</literal>"
msgstr "<literal>hibernate.cache.use_minimal_puts</literal>"

#. Tag: entry
#, no-c-format
msgid "Optimizes second-level cache operation to minimize writes, at the cost of more frequent reads. This setting is most useful for clustered caches and, in Hibernate3, is enabled by default for clustered cache implementations."
msgstr "以频繁的读操作为代价，优化二级缓存来最小化写操作。在 Hibernate3 中，这个设置对的集群缓存非常有用，对集群缓存的实现而言，默认是开启的。 "

#. Tag: entry
#, no-c-format
msgid "<literal>hibernate.cache.use_query_cache</literal>"
msgstr "<literal>hibernate.cache.use_query_cache</literal>"

#. Tag: entry
#, no-c-format
msgid "Enables the query cache. Individual queries still have to be set cachable."
msgstr "允许查询缓存，个别查询仍然需要被设置为可缓存的。 "

#. Tag: entry
#, no-c-format
msgid "<literal>hibernate.cache.use_second_level_cache</literal>"
msgstr "<literal>hibernate.cache.use_second_level_cache</literal>"

#. Tag: entry
#, no-c-format
msgid "Can be used to completely disable the second level cache, which is enabled by default for classes which specify a <literal>&lt;cache&gt;</literal> mapping."
msgstr "能用来完全禁止使用二级缓存。对那些在类的映射定义中指定 <literal>&lt;cache&gt;</literal> 的类，会默认开启二级缓存。 "

#. Tag: entry
#, no-c-format
msgid "<literal>hibernate.cache.query_cache_factory</literal>"
msgstr "<literal>hibernate.cache.query_cache_factory</literal>"

#. Tag: entry
#, no-c-format
msgid "The classname of a custom <literal>QueryCache</literal> interface, defaults to the built-in <literal>StandardQueryCache</literal>."
msgstr "自定义实现 <literal>QueryCache</literal> 接口的类名，默认为内建的 <literal>StandardQueryCache</literal>。"

#. Tag: para
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>classname.of.QueryCache</literal>"
msgstr "<emphasis role=\"strong\">例如：</emphasis><literal>classname.of.QueryCache</literal> "

#. Tag: entry
#, no-c-format
msgid "<literal>hibernate.cache.region_prefix</literal>"
msgstr "<literal>hibernate.cache.region_prefix</literal>"

#. Tag: entry
#, no-c-format
msgid "A prefix to use for second-level cache region names."
msgstr "二级缓存区域名的前缀。"

#. Tag: para
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>prefix</literal>"
msgstr "<emphasis role=\"strong\">例如：</emphasis><literal>prefix</literal> "

#. Tag: entry
#, no-c-format
msgid "<literal>hibernate.cache.use_structured_entries</literal>"
msgstr "<literal>hibernate.cache.use_structured_entries</literal>"

#. Tag: entry
#, no-c-format
msgid "Forces Hibernate to store data in the second-level cache in a more human-friendly format."
msgstr "强制 Hibernate 以更人性化的格式将数据存入二级缓存。"

#. Tag: title
#, no-c-format
msgid "Hibernate Transaction Properties"
msgstr "Hibernate 事务属性"

#. Tag: entry
#, no-c-format
msgid "<literal>hibernate.transaction.factory_class</literal>"
msgstr "<literal>hibernate.transaction.factory_class</literal>"

#. Tag: entry
#, no-c-format
msgid "The classname of a <literal>TransactionFactory</literal> to use with Hibernate <literal>Transaction</literal> API (defaults to <literal>JDBCTransactionFactory</literal>)."
msgstr "一个 <literal>TransactionFactory</literal> 的类名，用于 Hibernate <literal>Transaction</literal> API（默认为 <literal>JDBCTransactionFactory</literal>）。"

#. Tag: para
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>classname.of.TransactionFactory</literal>"
msgstr "<emphasis role=\"strong\">例如：</emphasis><literal>classname.of.TransactionFactory</literal> "

#. Tag: entry
#, no-c-format
msgid "<literal>jta.UserTransaction</literal>"
msgstr "<literal>jta.UserTransaction</literal>"

#. Tag: entry
#, no-c-format
msgid "A JNDI name used by <literal>JTATransactionFactory</literal> to obtain the JTA <literal>UserTransaction</literal> from the application server."
msgstr "一个 JNDI 名字，被 <literal>JTATransactionFactory</literal> 用来从应用服务器获取 JTA   <literal>UserTransaction</literal>。"

#. Tag: entry
#, no-c-format
msgid "<literal>hibernate.transaction.manager_lookup_class</literal>"
msgstr "<literal>hibernate.transaction.manager_lookup_class</literal>"

#. Tag: entry
#, no-c-format
msgid "The classname of a <literal>TransactionManagerLookup</literal>. It is required when JVM-level caching is enabled or when using hilo generator in a JTA environment."
msgstr "一个 <literal>TransactionManagerLookup</literal> 的类名 — 当使用 JVM 级缓存，或在 JTA 环境中使用 hilo 生成器的时候需要该类。 "

#. Tag: para
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>classname.of.TransactionManagerLookup</literal>"
msgstr "<emphasis role=\"strong\">例如：</emphasis><literal>classname.of.TransactionManagerLookup</literal> "

#. Tag: entry
#, no-c-format
msgid "<literal>hibernate.transaction.flush_before_completion</literal>"
msgstr "<literal>hibernate.transaction.flush_before_completion</literal>"

#. Tag: entry
#, no-c-format
msgid "If enabled, the session will be automatically flushed during the before completion phase of the transaction. Built-in and automatic session context management is preferred, see <xref linkend=\"architecture-current-session\" />."
msgstr "如果开启，session 在事务完成后将被自动清洗（flush）。现在更好的方法是使用自动 session 上下文管理。请参见 <xref linkend=\"architecture-current-session\"/>。 "

#. Tag: entry
#, no-c-format
msgid "<literal>hibernate.transaction.auto_close_session</literal>"
msgstr "<literal>hibernate.transaction.auto_close_session</literal>"

#. Tag: entry
#, no-c-format
msgid "If enabled, the session will be automatically closed during the after completion phase of the transaction. Built-in and automatic session context management is preferred, see <xref linkend=\"architecture-current-session\" />."
msgstr "如果开启，session 在事务完成后将被自动关闭。 现在更好的方法是使用自动 session 上下文管理。请参见 <xref linkend=\"architecture-current-session\"/>。  "

#. Tag: title
#, no-c-format
msgid "Miscellaneous Properties"
msgstr "其他属性"

#. Tag: entry
#, no-c-format
msgid "<literal>hibernate.current_session_context_class</literal>"
msgstr "<literal>hibernate.current_session_context_class</literal>"

#. Tag: entry
#, no-c-format
msgid "Supply a custom strategy for the scoping of the \"current\" <literal>Session</literal>. See <xref linkend=\"architecture-current-session\" /> for more information about the built-in strategies."
msgstr "为\"当前\" <literal>Session</literal> 指定一个（自定义的）策略。关于内置策略的详情，请参见 <xref linkend=\"architecture-current-session\"/>。 "

#. Tag: para
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>jta</literal> | <literal>thread</literal> | <literal>managed</literal> | <literal>custom.Class</literal>"
msgstr "<emphasis role=\"strong\">例如：</emphasis><literal>jta</literal> | <literal>thread</literal> | <literal>managed</literal> | <literal>custom.Class</literal> "

#. Tag: entry
#, no-c-format
msgid "<literal>hibernate.query.factory_class</literal>"
msgstr "<literal>hibernate.query.factory_class</literal>"

#. Tag: entry
#, no-c-format
msgid "Chooses the HQL parser implementation."
msgstr "选择 HQL 解析器的实现。"

#. Tag: para
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>org.hibernate.hql.ast.ASTQueryTranslatorFactory</literal> or <literal>org.hibernate.hql.classic.ClassicQueryTranslatorFactory</literal>"
msgstr "<emphasis role=\"strong\">例如：</emphasis><literal>org.hibernate.hql.ast.ASTQueryTranslatorFactory</literal> 或 <literal>org.hibernate.hql.classic.ClassicQueryTranslatorFactory</literal> "

#. Tag: entry
#, no-c-format
msgid "<literal>hibernate.query.substitutions</literal>"
msgstr "<literal>hibernate.query.substitutions</literal>"

#. Tag: entry
#, no-c-format
msgid "Is used to map from tokens in Hibernate queries to SQL tokens (tokens might be function or literal names, for example)."
msgstr "将 Hibernate 查询中的符号映射到 SQL 查询中的符号（符号可能是函数名或常量名字）。  "

#. Tag: para
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>hqlLiteral=SQL_LITERAL, hqlFunction=SQLFUNC</literal>"
msgstr "<emphasis role=\"strong\">例如：</emphasis><literal>hqlLiteral=SQL_LITERAL, hqlFunction=SQLFUNC</literal> "

#. Tag: entry
#, no-c-format
msgid "<literal>hibernate.hbm2ddl.auto</literal>"
msgstr "<literal>hibernate.hbm2ddl.auto</literal>"

#. Tag: entry
#, no-c-format
msgid "Automatically validates or exports schema DDL to the database when the <literal>SessionFactory</literal> is created. With <literal>create-drop</literal>, the database schema will be dropped when the <literal>SessionFactory</literal> is closed explicitly."
msgstr "在 <literal>SessionFactory</literal> 创建时，自动检查数据库结构，或者将数据库 schema 的 DDL 导出到数据库。使用 <literal>create-drop</literal> 时，在显式关闭 <literal>SessionFactory</literal> 时，将删除掉数据库 schema。 "

#. Tag: para
#, no-c-format
msgid "<emphasis role=\"strong\">e.g.</emphasis> <literal>validate</literal> | <literal>update</literal> | <literal>create</literal> | <literal>create-drop</literal>"
msgstr "<emphasis role=\"strong\">例如：</emphasis><literal>validate</literal> | <literal>update</literal> | <literal>create</literal> | <literal>create-drop</literal> "

#. Tag: entry
#, no-c-format
msgid "<literal>hibernate.cglib.use_reflection_optimizer</literal>"
msgstr "<literal>hibernate.cglib.use_reflection_optimizer</literal>"

#. Tag: entry
#, no-c-format
msgid "Enables the use of CGLIB instead of runtime reflection (System-level property). Reflection can sometimes be useful when troubleshooting. Hibernate always requires CGLIB even if you turn off the optimizer. You cannot set this property in <literal>hibernate.cfg.xml</literal>."
msgstr "开启 CGLIB 来替代运行时反射机制（系统级属性）。反射机制有时在除错时比较有用。注意即使关闭这个优化，Hibernate 还是需要 CGLIB。你不能在 <literal>hibernate.cfg.xml</literal> 中设置此属性。 "

#. Tag: title
#, no-c-format
msgid "SQL Dialects"
msgstr "SQL 方言"

#. Tag: para
#, no-c-format
msgid "Always set the <literal>hibernate.dialect</literal> property to the correct <literal>org.hibernate.dialect.Dialect</literal> subclass for your database. If you specify a dialect, Hibernate will use sensible defaults for some of the other properties listed above. This means that you will not have to specify them manually."
msgstr "你应当总是为你的数据库将 <literal>hibernate.dialect</literal> 属性设置成正确的  <literal>org.hibernate.dialect.Dialect</literal> 子类。如果你指定一种方言，Hibernate 将为上面列出的一些属性使用合理的默认值，这样你就不用手工指定它们。"

#. Tag: title
#, no-c-format
msgid "Hibernate SQL Dialects (<literal>hibernate.dialect</literal>)"
msgstr "Hibernate SQL 方言（<literal>hibernate.dialect</literal>）"

#. Tag: entry
#, no-c-format
msgid "RDBMS"
msgstr "RDBMS"

#. Tag: entry
#, no-c-format
msgid "Dialect"
msgstr "Dialect"

#. Tag: entry
#, no-c-format
msgid "DB2"
msgstr "DB2"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.DB2Dialect</literal>"
msgstr "<literal>org.hibernate.dialect.DB2Dialect</literal>"

#. Tag: entry
#, no-c-format
msgid "DB2 AS/400"
msgstr "DB2 AS/400"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.DB2400Dialect</literal>"
msgstr "<literal>org.hibernate.dialect.DB2400Dialect</literal>"

#. Tag: entry
#, no-c-format
msgid "DB2 OS390"
msgstr "DB2 OS390"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.DB2390Dialect</literal>"
msgstr "<literal>org.hibernate.dialect.DB2390Dialect</literal>"

#. Tag: entry
#, no-c-format
msgid "PostgreSQL"
msgstr "PostgreSQL"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.PostgreSQLDialect</literal>"
msgstr "<literal>org.hibernate.dialect.PostgreSQLDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "MySQL"
msgstr "MySQL"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.MySQLDialect</literal>"
msgstr "<literal>org.hibernate.dialect.MySQLDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "MySQL with InnoDB"
msgstr "MySQL with InnoDB"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.MySQLInnoDBDialect</literal>"
msgstr "<literal>org.hibernate.dialect.MySQLInnoDBDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "MySQL with MyISAM"
msgstr "MySQL with MyISAM"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.MySQLMyISAMDialect</literal>"
msgstr "<literal>org.hibernate.dialect.MySQLMyISAMDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "Oracle (any version)"
msgstr "Oracle（any version）"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.OracleDialect</literal>"
msgstr "<literal>org.hibernate.dialect.OracleDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "Oracle 9i"
msgstr "Oracle 9i"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.Oracle9iDialect</literal>"
msgstr "<literal>org.hibernate.dialect.Oracle9iDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "Oracle 10g"
msgstr "Oracle 10g"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.Oracle10gDialect</literal>"
msgstr "<literal>org.hibernate.dialect.Oracle10gDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "Sybase"
msgstr "Sybase"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.SybaseDialect</literal>"
msgstr "<literal>org.hibernate.dialect.SybaseDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "Sybase Anywhere"
msgstr "Sybase Anywhere"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.SybaseAnywhereDialect</literal>"
msgstr "<literal>org.hibernate.dialect.SybaseAnywhereDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "Microsoft SQL Server"
msgstr "Microsoft SQL Server"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.SQLServerDialect</literal>"
msgstr "<literal>org.hibernate.dialect.SQLServerDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "SAP DB"
msgstr "SAP DB"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.SAPDBDialect</literal>"
msgstr "<literal>org.hibernate.dialect.SAPDBDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "Informix"
msgstr "Informix"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.InformixDialect</literal>"
msgstr "<literal>org.hibernate.dialect.InformixDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "HypersonicSQL"
msgstr "HypersonicSQL"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.HSQLDialect</literal>"
msgstr "<literal>org.hibernate.dialect.HSQLDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "Ingres"
msgstr "Ingres"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.IngresDialect</literal>"
msgstr "<literal>org.hibernate.dialect.IngresDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "Progress"
msgstr "Progress"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.ProgressDialect</literal>"
msgstr "<literal>org.hibernate.dialect.ProgressDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "Mckoi SQL"
msgstr "Mckoi SQL"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.MckoiDialect</literal>"
msgstr "<literal>org.hibernate.dialect.MckoiDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "Interbase"
msgstr "Interbase"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.InterbaseDialect</literal>"
msgstr "<literal>org.hibernate.dialect.InterbaseDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "Pointbase"
msgstr "Pointbase"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.PointbaseDialect</literal>"
msgstr "<literal>org.hibernate.dialect.PointbaseDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "FrontBase"
msgstr "FrontBase"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.FrontbaseDialect</literal>"
msgstr "<literal>org.hibernate.dialect.FrontbaseDialect</literal>"

#. Tag: entry
#, no-c-format
msgid "Firebird"
msgstr "Firebird"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.dialect.FirebirdDialect</literal>"
msgstr "<literal>org.hibernate.dialect.FirebirdDialect</literal>"

#. Tag: title
#, no-c-format
msgid "Outer Join Fetching"
msgstr "外连接抓取（Outer Join Fetching）"

#. Tag: para
#, no-c-format
msgid "If your database supports ANSI, Oracle or Sybase style outer joins, <emphasis>outer join fetching</emphasis> will often increase performance by limiting the number of round trips to and from the database. This is, however, at the cost of possibly more work performed by the database itself. Outer join fetching allows a whole graph of objects connected by many-to-one, one-to-many, many-to-many and one-to-one associations to be retrieved in a single SQL <literal>SELECT</literal>."
msgstr "如果你的数据库支持 ANSI、Oracle 或 Sybase 风格的外连接，<emphasis>外连接抓取</emphasis>通常能通过限制往返数据库次数（更多的工作交由数据库自己来完成）来提高效率。外连接抓取允许在单个 <literal>SELECT</literal> SQL 语句中， 通过 many-to-one、one-to-many、many-to-many 和 one-to-one 关联获取连接对象的整个对象图。"

#. Tag: para
#, no-c-format
msgid "Outer join fetching can be disabled <emphasis>globally</emphasis> by setting the property <literal>hibernate.max_fetch_depth</literal> to <literal>0</literal>. A setting of <literal>1</literal> or higher enables outer join fetching for one-to-one and many-to-one associations that have been mapped with <literal>fetch=\"join\"</literal>."
msgstr "将 <literal>hibernate.max_fetch_depth</literal> 设为 <literal>0</literal> 能在<emphasis>全局</emphasis> 范围内禁止外连接抓取。设为 <literal>1</literal> 或更高值能启用 one-to-one 和 many-to-oneouter 关联的外连接抓取，它们通过 <literal>fetch=\"join\"</literal> 来映射。 "

#. Tag: para
#, no-c-format
msgid "See <xref linkend=\"performance-fetching\" /> for more information."
msgstr "参见 <xref linkend=\"performance-fetching\"/> 获得更多信息。 "

#. Tag: title
#, no-c-format
msgid "Binary Streams"
msgstr "二进制流（Binary Streams）"

#. Tag: para
#, no-c-format
msgid "Oracle limits the size of <literal>byte</literal> arrays that can be passed to and/or from its JDBC driver. If you wish to use large instances of <literal>binary</literal> or <literal>serializable</literal> type, you should enable <literal>hibernate.jdbc.use_streams_for_binary</literal>. <emphasis>This is a system-level setting only.</emphasis>"
msgstr "Oracle 限制那些通过 JDBC 驱动传输的<literal>字节</literal>数组的数目。如果你希望使用<literal>二进值（binary）</literal>或 <literal>可序列化的（serializable）</literal>类型的大对象，你应该开启 <literal>hibernate.jdbc.use_streams_for_binary</literal> 属性。<emphasis>这是系统级属性。</emphasis> "

#. Tag: title
#, no-c-format
msgid "Second-level and query cache"
msgstr "二级缓存与查询缓存"

#. Tag: para
#, no-c-format
msgid "The properties prefixed by <literal>hibernate.cache</literal> allow you to use a process or cluster scoped second-level cache system with Hibernate. See the <xref linkend=\"performance-cache\" /> for more information."
msgstr "以 <literal>hibernate.cache</literal> 为前缀的属性允许你在 Hibernate 中，使用进程或群集范围内的二级缓存系统。参见 <xref linkend=\"performance-cache\"/> 获取更多的详情。"

#. Tag: title
#, no-c-format
msgid "Query Language Substitution"
msgstr "查询语言中的替换"

#. Tag: para
#, no-c-format
msgid "You can define new Hibernate query tokens using <literal>hibernate.query.substitutions</literal>. For example:"
msgstr "你可以使用 <literal>hibernate.query.substitutions</literal> 在 Hibernate 中定义新的查询符号。例如： "

#. Tag: para
#, no-c-format
msgid "This would cause the tokens <literal>true</literal> and <literal>false</literal> to be translated to integer literals in the generated SQL."
msgstr "将导致符号 <literal>true</literal> 和 <literal>false</literal> 在生成的 SQL 中被翻译成整数常量。"

#. Tag: para
#, no-c-format
msgid "This would allow you to rename the SQL <literal>LOWER</literal> function."
msgstr "将允许你重命名 SQL 中的 <literal>LOWER</literal> 函数。"

#. Tag: title
#, no-c-format
msgid "Hibernate statistics"
msgstr "Hibernate 的统计（statistics）机制"

#. Tag: para
#, no-c-format
msgid "If you enable <literal>hibernate.generate_statistics</literal>, Hibernate exposes a number of metrics that are useful when tuning a running system via <literal>SessionFactory.getStatistics()</literal>. Hibernate can even be configured to expose these statistics via JMX. Read the Javadoc of the interfaces in <literal>org.hibernate.stats</literal> for more information."
msgstr "如果你开启 <literal>hibernate.generate_statistics</literal>，那么当你通过  <literal>SessionFactory.getStatistics()</literal> 调整正在运行的系统时，Hibernate 将导出大量有用的数据。Hibernate 甚至能被配置成通过 JMX 导出这些统计信息。参考 <literal>org.hibernate.stats</literal> 中接口的 Javadoc，以获得更多信息。 "

#. Tag: title
#, no-c-format
msgid "Logging"
msgstr "日志"

#. Tag: para
#, no-c-format
msgid "Hibernate utilizes <ulink url=\"http://www.slf4j.org/\">Simple Logging Facade for Java</ulink> (SLF4J) in order to log various system events. SLF4J can direct your logging output to several logging frameworks (NOP, Simple, log4j version 1.2, JDK 1.4 logging, JCL or logback) depending on your chosen binding. In order to setup logging you will need <filename>slf4j-api.jar</filename> in your classpath together with the jar file for your preferred binding - <filename>slf4j-log4j12.jar</filename> in the case of Log4J. See the SLF4J <ulink url=\"http://www.slf4j.org/manual.html\">documentation</ulink> for more detail. To use Log4j you will also need to place a <filename>log4j.properties</filename> file in your classpath. An example properties file is distributed with Hibernate in the <literal>src/</literal> directory."
msgstr "Hibernate 利用 <ulink url=\"http://www.slf4j.org/\">Simple Logging Facade for Java</ulink> (SLF4J) 来记录不同系统事件的日志。SLF4J 可以根据你选择的绑定把日志输出到几个日志框架（NOP、Simple、log4j version 1.2、JDK 1.4 logging、JCL 或 logback）上。为了设置日志，你需要在 classpath 里加入 <filename>slf4j-api.jar</filename> 和你选择的绑定的 JAR 文件（使用 Log4J 时加入 <filename>slf4j-log4j12.jar</filename>）。更多的细节请参考 SLF4J <ulink url=\"http://www.slf4j.org/manual.html\">文档</ulink>。要使用 Log4j，你也需要在 classpath 里加入 <filename>log4j.properties</filename> 文件。Hibernate 里的 <literal>src/</literal> 目录里带有一个属性文件的例子。"

#. Tag: para
#, no-c-format
msgid "It is recommended that you familiarize yourself with Hibernate's log messages. A lot of work has been put into making the Hibernate log as detailed as possible, without making it unreadable. It is an essential troubleshooting device. The most interesting log categories are the following:"
msgstr "我们强烈建议你熟悉一下 Hibernate 的日志消息。在不失可读性的前提下，我们做了很多工作，使 Hibernate 的日志可能地详细。这是必要的查错利器。最令人感兴趣的日志分类有如下这些："

#. Tag: title
#, no-c-format
msgid "Hibernate Log Categories"
msgstr "Hibernate 日志类别"

#. Tag: entry
#, no-c-format
msgid "Category"
msgstr "类别"

#. Tag: entry
#, no-c-format
msgid "Function"
msgstr "功能"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.SQL</literal>"
msgstr "<literal>org.hibernate.SQL</literal>"

#. Tag: entry
#, no-c-format
msgid "Log all SQL DML statements as they are executed"
msgstr "在所有 SQL DML 语句被执行时为它们记录日志"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.type</literal>"
msgstr "<literal>org.hibernate.type</literal>"

#. Tag: entry
#, no-c-format
msgid "Log all JDBC parameters"
msgstr "为所有 JDBC 参数记录日志"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.tool.hbm2ddl</literal>"
msgstr "<literal>org.hibernate.tool.hbm2ddl</literal>"

#. Tag: entry
#, no-c-format
msgid "Log all SQL DDL statements as they are executed"
msgstr "在所有 SQL DDL 语句执行时为它们记录日志"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.pretty</literal>"
msgstr "<literal>org.hibernate.pretty</literal>"

#. Tag: entry
#, no-c-format
msgid "Log the state of all entities (max 20 entities) associated with the session at flush time"
msgstr "在 session 清洗（flush）时，为所有与其关联的实体（最多 20 个）的状态记录日志"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.cache</literal>"
msgstr "<literal>org.hibernate.cache</literal>"

#. Tag: entry
#, no-c-format
msgid "Log all second-level cache activity"
msgstr "为所有二级缓存的活动记录日志"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.transaction</literal>"
msgstr "<literal>org.hibernate.transaction</literal>"

#. Tag: entry
#, no-c-format
msgid "Log transaction related activity"
msgstr "为事务相关的活动记录日志"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.jdbc</literal>"
msgstr "<literal>org.hibernate.jdbc</literal>"

#. Tag: entry
#, no-c-format
msgid "Log all JDBC resource acquisition"
msgstr "为所有 JDBC 资源的获取记录日志"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.hql.ast.AST</literal>"
msgstr "<literal>org.hibernate.hql.ast.AST</literal>"

#. Tag: entry
#, no-c-format
msgid "Log HQL and SQL ASTs during query parsing"
msgstr "在解析查询的时候,记录 HQL 和 SQL 的 AST 分析日志"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.secure</literal>"
msgstr "<literal>org.hibernate.secure</literal>"

#. Tag: entry
#, no-c-format
msgid "Log all JAAS authorization requests"
msgstr "为 JAAS 认证请求做日志"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate</literal>"
msgstr "<literal>org.hibernate</literal>"

#. Tag: entry
#, no-c-format
msgid "Log everything. This is a lot of information but it is useful for troubleshooting"
msgstr "为任何 Hibernate 相关信息记录日志（信息量较大，但对查错非常有帮助）"

#. Tag: para
#, no-c-format
msgid "When developing applications with Hibernate, you should almost always work with <literal>debug</literal> enabled for the category <literal>org.hibernate.SQL</literal>, or, alternatively, the property <literal>hibernate.show_sql</literal> enabled."
msgstr "在使用 Hibernate 开发应用程序时，你应当总是为 <literal>org.hibernate.SQL</literal> 开启 <literal>debug</literal> 级别的日志记录,或者开启 <literal>hibernate.show_sql</literal> 属性。"

#. Tag: title
#, no-c-format
msgid "Implementing a <literal>NamingStrategy</literal>"
msgstr "实现 <literal>NamingStrategy</literal>"

#. Tag: para
#, no-c-format
msgid "The interface <literal>org.hibernate.cfg.NamingStrategy</literal> allows you to specify a \"naming standard\" for database objects and schema elements."
msgstr "<literal>org.hibernate.cfg.NamingStrategy</literal> 接口允许你为数据库中的对象和 schema 元素指定一个“命名标准”。"

#. Tag: para
#, no-c-format
msgid "You can provide rules for automatically generating database identifiers from Java identifiers or for processing \"logical\" column and table names given in the mapping file into \"physical\" table and column names. This feature helps reduce the verbosity of the mapping document, eliminating repetitive noise (<literal>TBL_</literal> prefixes, for example). The default strategy used by Hibernate is quite minimal."
msgstr "你可能会提供一些通过 Java 标识生成数据库标识或将映射定义文件中\"逻辑\"表/列名处理成\"物理\"表/列名的规则。这个特性有助于减少冗长的映射定义文件，消除重复内容（如 <literal>TBL_</literal> 前缀）。Hibernate 使用的缺省策略是相当精简的。"

#. Tag: para
#, no-c-format
msgid "You can specify a different strategy by calling <literal>Configuration.setNamingStrategy()</literal> before adding mappings:"
msgstr "在加入映射定义前，你可以调用 <literal>Configuration.setNamingStrategy()</literal> 指定一个不同的命名策略： "

#. Tag: para
#, no-c-format
msgid "<literal>org.hibernate.cfg.ImprovedNamingStrategy</literal> is a built-in strategy that might be a useful starting point for some applications."
msgstr "<literal>org.hibernate.cfg.ImprovedNamingStrategy</literal> 是一个内建的命名策略，对一些应用程序而言，可能是非常有用的起点。"

#. Tag: title
#, no-c-format
msgid "XML configuration file"
msgstr "XML 配置文件"

#. Tag: para
#, no-c-format
msgid "An alternative approach to configuration is to specify a full configuration in a file named <literal>hibernate.cfg.xml</literal>. This file can be used as a replacement for the <literal>hibernate.properties</literal> file or, if both are present, to override properties."
msgstr "另一个配置方法是在 <literal>hibernate.cfg.xml</literal> 文件中指定一套完整的配置。这个文件可以当成 <literal>hibernate.properties</literal> 的替代。若两个文件同时存在，它将覆盖前者的属性。"

#. Tag: para
#, no-c-format
msgid "The XML configuration file is by default expected to be in the root of your <literal>CLASSPATH</literal>. Here is an example:"
msgstr "XML 配置文件被默认是放在 <literal>CLASSPATH</literal> 的根目录下。下面是一个例子： "

#. Tag: para
#, no-c-format
msgid "The advantage of this approach is the externalization of the mapping file names to configuration. The <literal>hibernate.cfg.xml</literal> is also more convenient once you have to tune the Hibernate cache. It is your choice to use either <literal>hibernate.properties</literal> or <literal>hibernate.cfg.xml</literal>. Both are equivalent, except for the above mentioned benefits of using the XML syntax."
msgstr "如你所见，这个方法优势在于，在配置文件中指出了映射定义文件的名字。一旦你需要调整 Hibernate 的缓存，<literal>hibernate.cfg.xml</literal> 也是更方便。注意，使用 <literal>hibernate.properties</literal> 还是 <literal>hibernate.cfg.xml</literal> 完全是由你来决定，除了上面提到的 XML 语法的优势之外，两者是等价的。 "

#. Tag: para
#, no-c-format
msgid "With the XML configuration, starting Hibernate is then as simple as:"
msgstr "使用 XML 配置，使得启动 Hibernate 变的异常简单："

#. Tag: para
#, no-c-format
msgid "You can select a different XML configuration file using:"
msgstr "你可以使用如下代码来添加一个不同的 XML 配置文件："

#. Tag: title
#, no-c-format
msgid "J2EE Application Server integration"
msgstr "J2EE 应用程序服务器的集成"

#. Tag: para
#, no-c-format
msgid "Hibernate has the following integration points for J2EE infrastructure:"
msgstr "针对 J2EE 体系，Hibernate 有如下几个集成的方面："

#. Tag: para
#, no-c-format
msgid "<emphasis>Container-managed datasources</emphasis>: Hibernate can use JDBC connections managed by the container and provided through JNDI. Usually, a JTA compatible <literal>TransactionManager</literal> and a <literal>ResourceManager</literal> take care of transaction management (CMT), especially distributed transaction handling across several datasources. You can also demarcate transaction boundaries programmatically (BMT), or you might want to use the optional Hibernate <literal>Transaction</literal> API for this to keep your code portable."
msgstr "<emphasis>容器管理的数据源（Container-managed datasources）</emphasis>： Hibernate 能使用通过容器管理，并由 JNDI 提供的 JDBC 连接。通常，特别是当处理多个数据源的分布式事务的时候，由一个 JTA 兼容的 <literal>TransactionManager</literal> 和一个 <literal>ResourceManager</literal> 来处理事务管理（CMT，容器管理的事务）。当然你可以通过 编程方式来划分事务边界（BMT，Bean 管理的事务）。或者为了代码的可移植性，你也也许会想使用可选的 Hibernate <literal>Transaction</literal> API。 "

#. Tag: para
#, no-c-format
msgid "<emphasis>Automatic JNDI binding</emphasis>: Hibernate can bind its <literal>SessionFactory</literal> to JNDI after startup."
msgstr "<emphasis>自动 JNDI 绑定</emphasis>：Hibernate 可以在启动后将 <literal>SessionFactory</literal> 绑定到 JNDI。"

#. Tag: para
#, no-c-format
msgid "<emphasis>JTA Session binding:</emphasis> the Hibernate <literal>Session</literal> can be automatically bound to the scope of JTA transactions. Simply lookup the <literal>SessionFactory</literal> from JNDI and get the current <literal>Session</literal>. Let Hibernate manage flushing and closing the <literal>Session</literal> when your JTA transaction completes. Transaction demarcation is either declarative (CMT) or programmatic (BMT/UserTransaction)."
msgstr "<emphasis>JTA Session 绑定：</emphasis> Hibernate <literal>Session</literal> 可以自动绑定到 JTA 事务作用的范围。只需简单地从 JNDI 查找 <literal>SessionFactory</literal> 并获得当前的 <literal>Session</literal>。当 JTA 事务完成时，让 Hibernate来处理 <literal>Session</literal> 的清洗（flush）与关闭。事务的划分可以是声明式的（CMT）,也可以是编程式的（BMT/UserTransaction）。 "

#. Tag: para
#, no-c-format
msgid "<emphasis>JMX deployment:</emphasis> if you have a JMX capable application server (e.g. JBoss AS), you can choose to deploy Hibernate as a managed MBean. This saves you the one line startup code to build your <literal>SessionFactory</literal> from a <literal>Configuration</literal>. The container will startup your <literal>HibernateService</literal> and also take care of service dependencies (datasource has to be available before Hibernate starts, etc)."
msgstr "<emphasis>JMX 部署：</emphasis> 如果你使用支持 JMX 应用程序服务器（如，JBoss AS），那么你可以选择将 Hibernate 部署成托管 MBean。这将为你省去一行从<literal>Configuration</literal> 构建 <literal>SessionFactory</literal> 的启动代码。容器将启动你的 <literal>HibernateService</literal>，并完美地处理好服务间的依赖关系（在 Hibernate 启动前，数据源必须是可用的，等等）。 "

#. Tag: para
#, no-c-format
msgid "Depending on your environment, you might have to set the configuration option <literal>hibernate.connection.aggressive_release</literal> to true if your application server shows \"connection containment\" exceptions."
msgstr "如果应用程序服务器抛出 \"connection containment\" 异常，根据你的环境，也许该将配置属性 <literal>hibernate.connection.release_mode</literal> 设为 <literal>after_statement</literal>。"

#. Tag: title
#, no-c-format
msgid "Transaction strategy configuration"
msgstr "事务策略配置"

#. Tag: para
#, no-c-format
msgid "The Hibernate <literal>Session</literal> API is independent of any transaction demarcation system in your architecture. If you let Hibernate use JDBC directly through a connection pool, you can begin and end your transactions by calling the JDBC API. If you run in a J2EE application server, you might want to use bean-managed transactions and call the JTA API and <literal>UserTransaction</literal> when needed."
msgstr "在你的架构中，Hibernate 的 <literal>Session</literal> API 是独立于任何事务分界系统的。如果你让 Hibernate 通过连接池直接使用 JDBC，你需要调用 JDBC API 来打开和关闭你的事务。如果你运行在 J2EE 应用程序服务器中，你也许想用 Bean 管理的事务并在需要的时候调用 JTA API 和 <literal>UserTransaction</literal>。 "

#. Tag: para
#, no-c-format
msgid "To keep your code portable between these two (and other) environments we recommend the optional Hibernate <literal>Transaction</literal> API, which wraps and hides the underlying system. You have to specify a factory class for <literal>Transaction</literal> instances by setting the Hibernate configuration property <literal>hibernate.transaction.factory_class</literal>."
msgstr "为了让你的代码在两种（或其他）环境中可以移植，我们建议使用可选的 Hibernate <literal>Transaction</literal> API，它包装并隐藏了底层系统。你必须通过设置 Hibernate 配置属性 <literal>hibernate.transaction.factory_class</literal> 来指定一个 <literal>Transaction</literal> 实例的工厂类。"

#. Tag: para
#, no-c-format
msgid "There are three standard, or built-in, choices:"
msgstr "有三个标准（内建）的选择： "

#. Tag: term
#, no-c-format
msgid "<literal>org.hibernate.transaction.JDBCTransactionFactory</literal>"
msgstr "<literal>org.hibernate.transaction.JDBCTransactionFactory</literal>"

#. Tag: para
#, no-c-format
msgid "delegates to database (JDBC) transactions (default)"
msgstr "委托给数据库（JDBC）事务（默认）"

#. Tag: term
#, no-c-format
msgid "<literal>org.hibernate.transaction.JTATransactionFactory</literal>"
msgstr "<literal>org.hibernate.transaction.JTATransactionFactory</literal>"

#. Tag: para
#, no-c-format
msgid "delegates to container-managed transactions if an existing transaction is underway in this context (for example, EJB session bean method). Otherwise, a new transaction is started and bean-managed transactions are used."
msgstr "如果在上下文环境中存在运行着的事务（如，EJB 会话 Bean 的方法），则委托给容器管理的事务。否则，将启动一个新的事务，并使用 Bean 管理的事务。"

#. Tag: term
#, no-c-format
msgid "<literal>org.hibernate.transaction.CMTTransactionFactory</literal>"
msgstr "<literal>org.hibernate.transaction.CMTTransactionFactory</literal>"

#. Tag: para
#, no-c-format
msgid "delegates to container-managed JTA transactions"
msgstr "委托给容器管理的 JTA 事务"

#. Tag: para
#, no-c-format
msgid "You can also define your own transaction strategies (for a CORBA transaction service, for example)."
msgstr "你也可以定义属于你自己的事务策略（如，针对 CORBA 的事务服务）。"

#. Tag: para
#, no-c-format
msgid "Some features in Hibernate (i.e., the second level cache, Contextual Sessions with JTA, etc.) require access to the JTA <literal>TransactionManager</literal> in a managed environment. In an application server, since J2EE does not standardize a single mechanism, you have to specify how Hibernate should obtain a reference to the <literal>TransactionManager</literal>:"
msgstr "Hibernate 的一些特性（比如二级缓存，Contextual Sessions with JTA 等等）需要访问在托管环境中的 JTA <literal>TransactionManager</literal>。由于 J2EE 没有标准化一个单一的机制，Hibernate 在应用程序服务器中，你必须指定 Hibernate 如何获得 <literal>TransactionManager</literal> 的引用： "

#. Tag: title
#, no-c-format
msgid "JTA TransactionManagers"
msgstr "JTA TransactionManagers"

#. Tag: entry
#, no-c-format
msgid "Transaction Factory"
msgstr "Transaction 工厂类"

#. Tag: entry
#, no-c-format
msgid "Application Server"
msgstr "应用程序服务器"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.transaction.JBossTransactionManagerLookup</literal>"
msgstr "<literal>org.hibernate.transaction.JBossTransactionManagerLookup</literal>"

#. Tag: entry
#, no-c-format
msgid "JBoss"
msgstr "JBoss"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.transaction.WeblogicTransactionManagerLookup</literal>"
msgstr "<literal>org.hibernate.transaction.WeblogicTransactionManagerLookup</literal>"

#. Tag: entry
#, no-c-format
msgid "Weblogic"
msgstr "Weblogic"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.transaction.WebSphereTransactionManagerLookup</literal>"
msgstr "<literal>org.hibernate.transaction.WebSphereTransactionManagerLookup</literal>"

#. Tag: entry
#, no-c-format
msgid "WebSphere"
msgstr "WebSphere"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.transaction.WebSphereExtendedJTATransactionLookup</literal>"
msgstr "<literal>org.hibernate.transaction.WebSphereExtendedJTATransactionLookup</literal>"

#. Tag: entry
#, no-c-format
msgid "WebSphere 6"
msgstr "WebSphere 6"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.transaction.OrionTransactionManagerLookup</literal>"
msgstr "<literal>org.hibernate.transaction.OrionTransactionManagerLookup</literal>"

#. Tag: entry
#, no-c-format
msgid "Orion"
msgstr "Orion"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.transaction.ResinTransactionManagerLookup</literal>"
msgstr "<literal>org.hibernate.transaction.ResinTransactionManagerLookup</literal>"

#. Tag: entry
#, no-c-format
msgid "Resin"
msgstr "Resin"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.transaction.JOTMTransactionManagerLookup</literal>"
msgstr "<literal>org.hibernate.transaction.JOTMTransactionManagerLookup</literal>"

#. Tag: entry
#, no-c-format
msgid "JOTM"
msgstr "JOTM"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.transaction.JOnASTransactionManagerLookup</literal>"
msgstr "<literal>org.hibernate.transaction.JOnASTransactionManagerLookup</literal>"

#. Tag: entry
#, no-c-format
msgid "JOnAS"
msgstr "JOnAS"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.transaction.JRun4TransactionManagerLookup</literal>"
msgstr "<literal>org.hibernate.transaction.JRun4TransactionManagerLookup</literal>"

#. Tag: entry
#, no-c-format
msgid "JRun4"
msgstr "JRun4"

#. Tag: entry
#, no-c-format
msgid "<literal>org.hibernate.transaction.BESTransactionManagerLookup</literal>"
msgstr "<literal>org.hibernate.transaction.BESTransactionManagerLookup</literal>"

#. Tag: entry
#, no-c-format
msgid "Borland ES"
msgstr "Borland ES"

#. Tag: title
#, no-c-format
msgid "JNDI-bound <literal>SessionFactory</literal>"
msgstr "JNDI 绑定的 <literal>SessionFactory</literal>"

#. Tag: para
#, no-c-format
msgid "A JNDI-bound Hibernate <literal>SessionFactory</literal> can simplify the lookup function of the factory and create new <literal>Session</literal>s. This is not, however, related to a JNDI bound <literal>Datasource</literal>; both simply use the same registry."
msgstr "与 JNDI 绑定的 Hibernate 的 <literal>SessionFactory</literal> 能简化工厂的查询，简化创建新的 <literal>Session</literal>。需要注意的是这与 JNDI 绑定 <literal>Datasource</literal> 没有关系，它们只是恰巧用了相同的注册表。"

#. Tag: para
#, no-c-format
msgid "If you wish to have the <literal>SessionFactory</literal> bound to a JNDI namespace, specify a name (e.g. <literal>java:hibernate/SessionFactory</literal>) using the property <literal>hibernate.session_factory_name</literal>. If this property is omitted, the <literal>SessionFactory</literal> will not be bound to JNDI. This is especially useful in environments with a read-only JNDI default implementation (in Tomcat, for example)."
msgstr "如果你希望将 <literal>SessionFactory</literal> 绑定到一个 JNDI 的名字空间，用属性 <literal>hibernate.session_factory_name</literal> 指定一个名字（如，<literal>java：hibernate/SessionFactory</literal>）。如果不设置这个属性，<literal>SessionFactory</literal> 将不会被绑定到 JNDI 中（在以只读 JNDI 为默认实现的环境中，这个设置尤其有用，如 Tomcat）。"

#. Tag: para
#, no-c-format
msgid "When binding the <literal>SessionFactory</literal> to JNDI, Hibernate will use the values of <literal>hibernate.jndi.url</literal>, <literal>hibernate.jndi.class</literal> to instantiate an initial context. If they are not specified, the default <literal>InitialContext</literal> will be used."
msgstr "在将 <literal>SessionFactory</literal> 绑定至 JNDI 时，Hibernate 将使用 <literal>hibernate.jndi.url</literal>，和 <literal>hibernate.jndi.class</literal> 的值来实例化初始环境（initial context）。如果它们没有被指定，将使用默认的 <literal>InitialContext</literal>。"

#. Tag: para
#, no-c-format
msgid "Hibernate will automatically place the <literal>SessionFactory</literal> in JNDI after you call <literal>cfg.buildSessionFactory()</literal>. This means you will have this call in some startup code, or utility class in your application, unless you use JMX deployment with the <literal>HibernateService</literal> (this is discussed later in greater detail)."
msgstr "在你调用 <literal>cfg.buildSessionFactory()</literal>后，Hibernate 会自动将 <literal>SessionFactory</literal> 注册到 JNDI。这意味这你至少需要在你应用程序的启动代码（或工具类）中完成这个调用，除非你使用 <literal>HibernateService</literal> 来做 JMX 部署（见后面讨论）。"

#. Tag: para
#, no-c-format
msgid "If you use a JNDI <literal>SessionFactory</literal>, an EJB or any other class, you can obtain the <literal>SessionFactory</literal> using a JNDI lookup."
msgstr "假若你使用 JNDI <literal>SessionFactory</literal>，EJB 或者任何其它类都可以从 JNDI 中找到此 <literal>SessionFactory</literal>。 "

#. Tag: para
#, no-c-format
msgid "It is recommended that you bind the <literal>SessionFactory</literal> to JNDI in a managed environment and use a <literal>static</literal> singleton otherwise. To shield your application code from these details, we also recommend to hide the actual lookup code for a <literal>SessionFactory</literal> in a helper class, such as <literal>HibernateUtil.getSessionFactory()</literal>. Note that such a class is also a convenient way to startup Hibernate&mdash;see chapter 1."
msgstr "我们建议，在受管理的环境中，把 <literal>SessionFactory</literal> 绑定到 JNDI，在其它情况下，使用一个 <literal>static（静态的）</literal>singleton。为了在你的应用程序代码中隐藏这些细节，我们还建议你用一个 helper 类把实际查找 <literal>SessionFactory</literal> 的代码隐藏起来，比如 <literal>HibernateUtil.getSessionFactory()</literal>。注意，这个类也就可以方便地启动 Hibernate，参见第一章。 "

#. Tag: title
#, no-c-format
msgid "Current Session context management with JTA"
msgstr "在 JTA 环境下使用 Current Session context（当前 session 上下文）管理"

#. Tag: para
#, no-c-format
msgid "The easiest way to handle <literal>Sessions</literal> and transactions is Hibernate's automatic \"current\" <literal>Session</literal> management. For a discussion of contextual sessions see <xref linkend=\"architecture-current-session\" />. Using the <literal>\"jta\"</literal> session context, if there is no Hibernate <literal>Session</literal> associated with the current JTA transaction, one will be started and associated with that JTA transaction the first time you call <literal>sessionFactory.getCurrentSession()</literal>. The <literal>Session</literal>s retrieved via <literal>getCurrentSession()</literal> in the<literal>\"jta\"</literal> context are set to automatically flush before the transaction completes, close after the transaction completes, and aggressively release JDBC connections after each statement. This allows the <literal>Session</literal>s to be managed by the life cycle of the JTA transaction to which it is associated, keeping user code clean of such management concerns. Your code can either use JTA programmatically through <literal>UserTransaction</literal>, or (recommended for portable code) use the Hibernate <literal>Transaction</literal> API to set transaction boundaries. If you run in an EJB container, declarative transaction demarcation with CMT is preferred."
msgstr "在 Hibernate 中，管理 <literal>Session</literal> 和 transaction 最好的方法是自动的\"当前\"<literal>Session</literal> 管理。请参见 <xref linkend=\"architecture-current-session\" /> 一节的讨论。使用 <literal>\"jta\"</literal> session 上下文，假若在当前 JTA 事务中还没有 Hibernate<literal>Session</literal> 关联，第一次 <literal>sessionFactory.getCurrentSession()</literal> 调用会启动一个 Session，并关联到当前的 JTA 事务。在 <literal>\"jta\"</literal> 上下文中调用 <literal>getCurrentSession()</literal> 获得的 <literal>Session</literal>，会被设置为在 transaction 关闭的时候自动 flush（清洗）、在 transaction 关闭之后自动关闭，每句语句之后主动释放 JDBC 连接。这就可以根据 JTA 事务的生命周期来管理与之关联的 <literal>Session</literal>，用户代码中就可以不再考虑这些管理。你的代码也可以通过 <literal>UserTransaction</literal>用编程方式使用 JTA，或者（我们建议，为了便于移植代码）使用 Hibernate 的 <literal>Transaction</literal> API 来设置 transaction 边界。如果你的代码运行在 EJB 容器中，我们建议对 CMT 使用声明式事务声明。 "

#. Tag: title
#, no-c-format
msgid "JMX deployment"
msgstr "JMX 部署"

#. Tag: para
#, no-c-format
msgid "The line <literal>cfg.buildSessionFactory()</literal> still has to be executed somewhere to get a <literal>SessionFactory</literal> into JNDI. You can do this either in a <literal>static</literal> initializer block, like the one in <literal>HibernateUtil</literal>, or you can deploy Hibernate as a <emphasis>managed service</emphasis>."
msgstr "为了将 <literal>SessionFactory</literal> 注册到 JNDI 中，<literal>cfg.buildSessionFactory()</literal> 这行代码仍需在某处被执行。你可在一个 <literal>static</literal> 初始化块（像 <literal>HibernateUtil</literal> 中的那样）中执行它或将 Hibernate 部署为一个<emphasis>托管的服务</emphasis>。  "

#. Tag: para
#, no-c-format
msgid "Hibernate is distributed with <literal>org.hibernate.jmx.HibernateService</literal> for deployment on an application server with JMX capabilities, such as JBoss AS. The actual deployment and configuration is vendor-specific. Here is an example <literal>jboss-service.xml</literal> for JBoss 4.0.x:"
msgstr "为了部署在一个支持 JMX 的应用程序服务器上，Hibernate 和 <literal>org.hibernate.jmx.HibernateService</literal> 一同分发，如 Jboss AS。 实际的部署和配置是由应用程序服务器提供者指定的。这里是 JBoss 4.0.x 的 <literal>jboss-service.xml</literal> 样例： "

#. Tag: para
#, no-c-format
msgid "This file is deployed in a directory called <literal>META-INF</literal> and packaged in a JAR file with the extension <literal>.sar</literal> (service archive). You also need to package Hibernate, its required third-party libraries, your compiled persistent classes, as well as your mapping files in the same archive. Your enterprise beans (usually session beans) can be kept in their own JAR file, but you can include this EJB JAR file in the main service archive to get a single (hot-)deployable unit. Consult the JBoss AS documentation for more information about JMX service and EJB deployment."
msgstr "这个文件是部署在 <literal>META-INF</literal> 目录下的，并会被打包到以 <literal>.sar</literal>（service archive）为扩展名的 JAR 文件中。同时，你需要将 Hibernate、它所需要的第三方库、你编译好的持久化类以及你的映射定义文件打包进同一个文档。你的企业 Bean（一般为会话 Bean）可能会被打包成它们自己的 JAR 文件，但你也许会将 EJB JAR 文件一同包含进能独立（热）部署的主服务文档。参考 JBoss AS 文档以了解更多的 JMX服务与 EJB 部署的信息。 "

#~ msgid ""
#~ "<![CDATA[Configuration cfg = new Configuration()\n"
#~ "    .addResource(\"Item.hbm.xml\")\n"
#~ "    .addResource(\"Bid.hbm.xml\");]]>"
#~ msgstr ""
#~ "<![CDATA[Configuration cfg = new Configuration()\n"
#~ "    .addResource(\"Item.hbm.xml\")\n"
#~ "    .addResource(\"Bid.hbm.xml\");]]>"

#~ msgid ""
#~ "<![CDATA[Configuration cfg = new Configuration()\n"
#~ "    .addClass(org.hibernate.auction.Item.class)\n"
#~ "    .addClass(org.hibernate.auction.Bid.class);]]>"
#~ msgstr ""
#~ "<![CDATA[Configuration cfg = new Configuration()\n"
#~ "    .addClass(org.hibernate.auction.Item.class)\n"
#~ "    .addClass(org.hibernate.auction.Bid.class);]]>"

#~ msgid ""
#~ "<![CDATA[Configuration cfg = new Configuration()\n"
#~ "    .addClass(org.hibernate.auction.Item.class)\n"
#~ "    .addClass(org.hibernate.auction.Bid.class)\n"
#~ "    .setProperty(\"hibernate.dialect\", \"org.hibernate.dialect."
#~ "MySQLInnoDBDialect\")\n"
#~ "    .setProperty(\"hibernate.connection.datasource\", \"java:comp/env/"
#~ "jdbc/test\")\n"
#~ "    .setProperty(\"hibernate.order_updates\", \"true\");]]>"
#~ msgstr ""
#~ "<![CDATA[Configuration cfg = new Configuration()\n"
#~ "    .addClass(org.hibernate.auction.Item.class)\n"
#~ "    .addClass(org.hibernate.auction.Bid.class)\n"
#~ "    .setProperty(\"hibernate.dialect\", \"org.hibernate.dialect."
#~ "MySQLInnoDBDialect\")\n"
#~ "    .setProperty(\"hibernate.connection.datasource\", \"java:comp/env/"
#~ "jdbc/test\")\n"
#~ "    .setProperty(\"hibernate.order_updates\", \"true\");]]>"

#~ msgid "<![CDATA[SessionFactory sessions = cfg.buildSessionFactory();]]>"
#~ msgstr "<![CDATA[SessionFactory sessions = cfg.buildSessionFactory();]]>"

#~ msgid ""
#~ "<![CDATA[Session session = sessions.openSession(); // open a new Session]]"
#~ ">"
#~ msgstr ""
#~ "<![CDATA[Session session = sessions.openSession(); // open a new Session]]"
#~ ">"

#~ msgid "JDBC URL"
#~ msgstr "JDBC URL"

#~ msgid "database user"
#~ msgstr "database user"

#~ msgid "database user password"
#~ msgstr "数据库用户密码"

#~ msgid ""
#~ "<![CDATA[hibernate.connection.driver_class = org.postgresql.Driver\n"
#~ "hibernate.connection.url = jdbc:postgresql://localhost/mydatabase\n"
#~ "hibernate.connection.username = myuser\n"
#~ "hibernate.connection.password = secret\n"
#~ "hibernate.c3p0.min_size=5\n"
#~ "hibernate.c3p0.max_size=20\n"
#~ "hibernate.c3p0.timeout=1800\n"
#~ "hibernate.c3p0.max_statements=50\n"
#~ "hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect]]>"
#~ msgstr ""
#~ "<![CDATA[hibernate.connection.driver_class = org.postgresql.Driver\n"
#~ "hibernate.connection.url = jdbc:postgresql://localhost/mydatabase\n"
#~ "hibernate.connection.username = myuser\n"
#~ "hibernate.connection.password = secret\n"
#~ "hibernate.c3p0.min_size=5\n"
#~ "hibernate.c3p0.max_size=20\n"
#~ "hibernate.c3p0.timeout=1800\n"
#~ "hibernate.c3p0.max_statements=50\n"
#~ "hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect]]>"

#~ msgid "datasource JNDI name"
#~ msgstr "数据源 JNDI 名字"

#~ msgid ""
#~ "<![CDATA[hibernate.connection.datasource = java:/comp/env/jdbc/test\n"
#~ "hibernate.transaction.factory_class = \\\n"
#~ "    org.hibernate.transaction.JTATransactionFactory\n"
#~ "hibernate.transaction.manager_lookup_class = \\\n"
#~ "    org.hibernate.transaction.JBossTransactionManagerLookup\n"
#~ "hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect]]>"
#~ msgstr ""
#~ "<![CDATA[hibernate.connection.datasource = java:/comp/env/jdbc/test\n"
#~ "hibernate.transaction.factory_class = \\\n"
#~ "    org.hibernate.transaction.JTATransactionFactory\n"
#~ "hibernate.transaction.manager_lookup_class = \\\n"
#~ "    org.hibernate.transaction.JBossTransactionManagerLookup\n"
#~ "hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect]]>"

#~ msgid "<entry>DB2</entry>"
#~ msgstr "<entry>DB2</entry>"

#~ msgid "hibernate.query.substitutions true=1, false=0"
#~ msgstr "hibernate.query.substitutions true=1，false=0"

#~ msgid "hibernate.query.substitutions toLowercase=LOWER"
#~ msgstr "hibernate.query.substitutions toLowercase=LOWER"

#~ msgid "org.hibernate"
#~ msgstr "org.hibernate"

#~ msgid ""
#~ "<![CDATA[SessionFactory sf = new Configuration()\n"
#~ "    .setNamingStrategy(ImprovedNamingStrategy.INSTANCE)\n"
#~ "    .addFile(\"Item.hbm.xml\")\n"
#~ "    .addFile(\"Bid.hbm.xml\")\n"
#~ "    .buildSessionFactory();]]>"
#~ msgstr ""
#~ "<![CDATA[SessionFactory sf = new Configuration()\n"
#~ "    .setNamingStrategy(ImprovedNamingStrategy.INSTANCE)\n"
#~ "    .addFile(\"Item.hbm.xml\")\n"
#~ "    .addFile(\"Bid.hbm.xml\")\n"
#~ "    .buildSessionFactory();]]>"

#~ msgid ""
#~ "<![CDATA[<?xml version='1.0' encoding='utf-8'?>\n"
#~ "<!DOCTYPE hibernate-configuration PUBLIC\n"
#~ "    \"-//Hibernate/Hibernate Configuration DTD//EN\"\n"
#~ "    \"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd"
#~ "\">\n"
#~ "\n"
#~ "<hibernate-configuration>\n"
#~ "\n"
#~ "    <!-- a SessionFactory instance listed as /jndi/name -->\n"
#~ "    <session-factory\n"
#~ "        name=\"java:hibernate/SessionFactory\">\n"
#~ "\n"
#~ "        <!-- properties -->\n"
#~ "        <property name=\"connection.datasource\">java:/comp/env/jdbc/"
#~ "MyDB</property>\n"
#~ "        <property name=\"dialect\">org.hibernate.dialect.MySQLDialect</"
#~ "property>\n"
#~ "        <property name=\"show_sql\">false</property>\n"
#~ "        <property name=\"transaction.factory_class\">\n"
#~ "            org.hibernate.transaction.JTATransactionFactory\n"
#~ "        </property>\n"
#~ "        <property name=\"jta.UserTransaction\">java:comp/UserTransaction</"
#~ "property>\n"
#~ "\n"
#~ "        <!-- mapping files -->\n"
#~ "        <mapping resource=\"org/hibernate/auction/Item.hbm.xml\"/>\n"
#~ "        <mapping resource=\"org/hibernate/auction/Bid.hbm.xml\"/>\n"
#~ "\n"
#~ "        <!-- cache settings -->\n"
#~ "        <class-cache class=\"org.hibernate.auction.Item\" usage=\"read-"
#~ "write\"/>\n"
#~ "        <class-cache class=\"org.hibernate.auction.Bid\" usage=\"read-only"
#~ "\"/>\n"
#~ "        <collection-cache collection=\"org.hibernate.auction.Item.bids\" "
#~ "usage=\"read-write\"/>\n"
#~ "\n"
#~ "    </session-factory>\n"
#~ "\n"
#~ "</hibernate-configuration>]]>"
#~ msgstr ""
#~ "<![CDATA[<?xml version='1.0' encoding='utf-8'?>\n"
#~ "<!DOCTYPE hibernate-configuration PUBLIC\n"
#~ "    \"-//Hibernate/Hibernate Configuration DTD//EN\"\n"
#~ "    \"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd"
#~ "\">\n"
#~ "\n"
#~ "<hibernate-configuration>\n"
#~ "\n"
#~ "    <!-- a SessionFactory instance listed as /jndi/name -->\n"
#~ "    <session-factory\n"
#~ "        name=\"java:hibernate/SessionFactory\">\n"
#~ "\n"
#~ "        <!-- properties -->\n"
#~ "        <property name=\"connection.datasource\">java:/comp/env/jdbc/"
#~ "MyDB</property>\n"
#~ "        <property name=\"dialect\">org.hibernate.dialect.MySQLDialect</"
#~ "property>\n"
#~ "        <property name=\"show_sql\">false</property>\n"
#~ "        <property name=\"transaction.factory_class\">\n"
#~ "            org.hibernate.transaction.JTATransactionFactory\n"
#~ "        </property>\n"
#~ "        <property name=\"jta.UserTransaction\">java:comp/UserTransaction</"
#~ "property>\n"
#~ "\n"
#~ "        <!-- mapping files -->\n"
#~ "        <mapping resource=\"org/hibernate/auction/Item.hbm.xml\"/>\n"
#~ "        <mapping resource=\"org/hibernate/auction/Bid.hbm.xml\"/>\n"
#~ "\n"
#~ "        <!-- cache settings -->\n"
#~ "        <class-cache class=\"org.hibernate.auction.Item\" usage=\"read-"
#~ "write\"/>\n"
#~ "        <class-cache class=\"org.hibernate.auction.Bid\" usage=\"read-only"
#~ "\"/>\n"
#~ "        <collection-cache collection=\"org.hibernate.auction.Item.bids\" "
#~ "usage=\"read-write\"/>\n"
#~ "\n"
#~ "    </session-factory>\n"
#~ "\n"
#~ "</hibernate-configuration>]]>"

#~ msgid ""
#~ "<![CDATA[SessionFactory sf = new Configuration().configure()."
#~ "buildSessionFactory();]]>"
#~ msgstr ""
#~ "<![CDATA[SessionFactory sf = new Configuration().configure()."
#~ "buildSessionFactory();]]>"

#~ msgid ""
#~ "<![CDATA[SessionFactory sf = new Configuration()\n"
#~ "    .configure(\"catdb.cfg.xml\")\n"
#~ "    .buildSessionFactory();]]>"
#~ msgstr ""
#~ "<![CDATA[SessionFactory sf = new Configuration()\n"
#~ "    .configure(\"catdb.cfg.xml\")\n"
#~ "    .buildSessionFactory();]]>"

#~ msgid ""
#~ "<![CDATA[<?xml version=\"1.0\"?>\n"
#~ "<server>\n"
#~ "\n"
#~ "<mbean code=\"org.hibernate.jmx.HibernateService\"\n"
#~ "    name=\"jboss.jca:service=HibernateFactory,name=HibernateFactory\">\n"
#~ "\n"
#~ "    <!-- Required services -->\n"
#~ "    <depends>jboss.jca:service=RARDeployer</depends>\n"
#~ "    <depends>jboss.jca:service=LocalTxCM,name=HsqlDS</depends>\n"
#~ "\n"
#~ "    <!-- Bind the Hibernate service to JNDI -->\n"
#~ "    <attribute name=\"JndiName\">java:/hibernate/SessionFactory</"
#~ "attribute>\n"
#~ "\n"
#~ "    <!-- Datasource settings -->\n"
#~ "    <attribute name=\"Datasource\">java:HsqlDS</attribute>\n"
#~ "    <attribute name=\"Dialect\">org.hibernate.dialect.HSQLDialect</"
#~ "attribute>\n"
#~ "\n"
#~ "    <!-- Transaction integration -->\n"
#~ "    <attribute name=\"TransactionStrategy\">\n"
#~ "        org.hibernate.transaction.JTATransactionFactory</attribute>\n"
#~ "    <attribute name=\"TransactionManagerLookupStrategy\">\n"
#~ "        org.hibernate.transaction.JBossTransactionManagerLookup</"
#~ "attribute>\n"
#~ "    <attribute name=\"FlushBeforeCompletionEnabled\">true</attribute>\n"
#~ "    <attribute name=\"AutoCloseSessionEnabled\">true</attribute>\n"
#~ "\n"
#~ "    <!-- Fetching options -->\n"
#~ "    <attribute name=\"MaximumFetchDepth\">5</attribute>\n"
#~ "\n"
#~ "    <!-- Second-level caching -->\n"
#~ "    <attribute name=\"SecondLevelCacheEnabled\">true</attribute>\n"
#~ "    <attribute name=\"CacheProviderClass\">org.hibernate.cache."
#~ "EhCacheProvider</attribute>\n"
#~ "    <attribute name=\"QueryCacheEnabled\">true</attribute>\n"
#~ "\n"
#~ "    <!-- Logging -->\n"
#~ "    <attribute name=\"ShowSqlEnabled\">true</attribute>\n"
#~ "\n"
#~ "    <!-- Mapping files -->\n"
#~ "    <attribute name=\"MapResources\">auction/Item.hbm.xml,auction/"
#~ "Category.hbm.xml</attribute>\n"
#~ "\n"
#~ "</mbean>\n"
#~ "\n"
#~ "</server>]]>"
#~ msgstr ""
#~ "<![CDATA[<?xml version=\"1.0\"?>\n"
#~ "<server>\n"
#~ "\n"
#~ "<mbean code=\"org.hibernate.jmx.HibernateService\"\n"
#~ "    name=\"jboss.jca:service=HibernateFactory,name=HibernateFactory\">\n"
#~ "\n"
#~ "    <!-- Required services -->\n"
#~ "    <depends>jboss.jca:service=RARDeployer</depends>\n"
#~ "    <depends>jboss.jca:service=LocalTxCM,name=HsqlDS</depends>\n"
#~ "\n"
#~ "    <!-- Bind the Hibernate service to JNDI -->\n"
#~ "    <attribute name=\"JndiName\">java:/hibernate/SessionFactory</"
#~ "attribute>\n"
#~ "\n"
#~ "    <!-- Datasource settings -->\n"
#~ "    <attribute name=\"Datasource\">java:HsqlDS</attribute>\n"
#~ "    <attribute name=\"Dialect\">org.hibernate.dialect.HSQLDialect</"
#~ "attribute>\n"
#~ "\n"
#~ "    <!-- Transaction integration -->\n"
#~ "    <attribute name=\"TransactionStrategy\">\n"
#~ "        org.hibernate.transaction.JTATransactionFactory</attribute>\n"
#~ "    <attribute name=\"TransactionManagerLookupStrategy\">\n"
#~ "        org.hibernate.transaction.JBossTransactionManagerLookup</"
#~ "attribute>\n"
#~ "    <attribute name=\"FlushBeforeCompletionEnabled\">true</attribute>\n"
#~ "    <attribute name=\"AutoCloseSessionEnabled\">true</attribute>\n"
#~ "\n"
#~ "    <!-- Fetching options -->\n"
#~ "    <attribute name=\"MaximumFetchDepth\">5</attribute>\n"
#~ "\n"
#~ "    <!-- Second-level caching -->\n"
#~ "    <attribute name=\"SecondLevelCacheEnabled\">true</attribute>\n"
#~ "    <attribute name=\"CacheProviderClass\">org.hibernate.cache."
#~ "EhCacheProvider</attribute>\n"
#~ "    <attribute name=\"QueryCacheEnabled\">true</attribute>\n"
#~ "\n"
#~ "    <!-- Logging -->\n"
#~ "    <attribute name=\"ShowSqlEnabled\">true</attribute>\n"
#~ "\n"
#~ "    <!-- Mapping files -->\n"
#~ "    <attribute name=\"MapResources\">auction/Item.hbm.xml,auction/"
#~ "Category.hbm.xml</attribute>\n"
#~ "\n"
#~ "</mbean>\n"
#~ "\n"
#~ "</server>]]>"
