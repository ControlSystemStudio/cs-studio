msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2010-02-04T04:51:21\n"
"PO-Revision-Date: 2010-01-12 20:35+0900\n"
"Last-Translator: Jongdae Kim <jdkim528@korea.com>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#, no-c-format
msgid "Architecture"
msgstr "아키텍처"

#. Tag: title
#, no-c-format
msgid "Overview"
msgstr "개요"

#. Tag: para
#, no-c-format
msgid ""
"The diagram below provides a high-level view of the Hibernate architecture:"
msgstr "아래 다이어그램은 Hibernate 아키텍처에 대한 높은 수준의 뷰를 제공한다:"

#. Tag: para
#, no-c-format
msgid ""
"We do not have the scope in this document to provide a more detailed view of "
"all the runtime architectures available; Hibernate is flexible and supports "
"several different approaches. We will, however, show the two extremes: "
"\"minimal\" architecture and \"comprehensive\" architecture."
msgstr ""
"우리가 이용 가능한 모든 런타임 아키텍처들에 대한 보다 상세한 개요를 제공하는 "
"것은 이 문서의 범위를 넘어선다; Hibernate는 유연하며 몇몇 다른 접근법들을 제"
"공한다. 하지만 우리는 두 가지 극단을 보여줄 것이다. \"최소\" 아키텍처와 \"종"
"합\" 아키텍처."

#. Tag: para
#, no-c-format
msgid ""
"This next diagram illustrates how Hibernate utilizes database and "
"configuration data to provide persistence services, and persistent objects, "
"to the application."
msgstr ""
"이 다음 다이어그램은  하이버네이트가 영속화 서비스들과 영속 객체들을 어플리케"
"이션에 제공하기 위해 데이터베이스와 컨피그레이션 데이터를 어떻게 이용하는지"
"를 설명한다."

#. Tag: para
#, no-c-format
msgid ""
"The \"minimal\" architecture has the application provide its own JDBC "
"connections and manage its own transactions. This approach uses a minimal "
"subset of Hibernate's APIs:"
msgstr ""
"\"최소\" 아키텍처는 어플리케이션으로 하여금 그것 자신의 JDBC 커넥션들을 가지"
"고 그것 자신의 트랜잭션들을 관리하도록 한다. 이 접근법은 하이버네이트 API의 "
"최소 부분집합을 사용한다:"

#. Tag: para
#, no-c-format
msgid ""
"The \"comprehensive\" architecture abstracts the application away from the "
"underlying JDBC/JTA APIs and allows Hibernate to manage the details."
msgstr ""
"\"종합\" 아키텍처는 기본 JDBC/JTA로부터 어플리케이션을 추상화 시키고 "
"Hibernate로 하여금 세부적인 것을 관리하도록 한다."

#. Tag: para
#, no-c-format
msgid "Here are some definitions of the objects depicted in the diagrams:"
msgstr "다음은 다이어그램에 도해되어 있는 객체들에 대한 몇가지 정의들이다:"

#. Tag: term
#, no-c-format
msgid "SessionFactory (<literal>org.hibernate.SessionFactory</literal>)"
msgstr "SessionFactory (<literal>org.hibernate.SessionFactory</literal>)"

#. Tag: para
#, no-c-format
msgid ""
"A threadsafe, immutable cache of compiled mappings for a single database. A "
"factory for <literal>Session</literal> and a client of "
"<literal>ConnectionProvider</literal>, <literal>SessionFactory</literal> can "
"hold an optional (second-level) cache of data that is reusable between "
"transactions at a process, or cluster, level."
msgstr ""
"단일 데이터베이스에 대해 컴파일된 매핑들에 관한 쓰레드안전한, 불변 캐시. "
"<literal>Session</literal>을 위한 팩토리와 <literal>ConnectionProvider</"
"literal>, <literal>SessionFactory</literal>의 클라이언트는 프로세스 레벨 또"
"는 클러스터 레벨에서 트랜잭션들 사이에 재사용이 가능한 데이터에 대한 선택적"
"인 (second-level) 캐시를 보유할 수 있다."

#. Tag: term
#, no-c-format
msgid "Session (<literal>org.hibernate.Session</literal>)"
msgstr "Session (<literal>org.hibernate.Session</literal>)"

#. Tag: para
#, no-c-format
msgid ""
"A single-threaded, short-lived object representing a conversation between "
"the application and the persistent store. It wraps a JDBC connection and is "
"a factory for <literal>Transaction</literal>. <literal>Session</literal> "
"holds a mandatory first-level cache of persistent objects that are used when "
"navigating the object graph or looking up objects by identifier."
msgstr ""
"어플리케이션과 영속 저장소 사이의 대화를 표현하는 단일 쓰레드이면서 수명이 짧"
"은 객체. 그것은 JDBC 커넥션을 포장하며, <literal>Transaction</literal>을 위"
"한 팩토리이다. <literal>Session</literal>은 객체 그래프를 네비게이트 하거나 "
"식별자로서 객체들을 탐색할 때 사용되는 영속 객체들에 대한 필수적인 첫 번째 레"
"벨 캐시를 보유하고 있다."

#. Tag: term
#, no-c-format
msgid "Persistent objects and collections"
msgstr "영속 객체들과 콜렉션들"

#. Tag: para
#, no-c-format
msgid ""
"Short-lived, single threaded objects containing persistent state and "
"business function. These can be ordinary JavaBeans/POJOs. They are "
"associated with exactly one <literal>Session</literal>. Once the "
"<literal>Session</literal> is closed, they will be detached and free to use "
"in any application layer (for example, directly as data transfer objects to "
"and from presentation)."
msgstr ""
"영속 상태와 비지니스 기능을 포함하는 수명이 짧은, 단일 쓰레드 객체들. 이것들"
"은 통상의 자바빈즈/POJO들일 수 있다. 그것들은 정확히 한 개의 "
"<literal>Session</literal>과 연관지워진다. <literal>Session</literal>이 닫히"
"는 순간, 그것들은 분리될 것이고 임의의 어플리케이션 계층에서 사용이 자유로워"
"진다(예를 들면. 직접적으로 프리젠테이션 계층 사이의 데이터 전송 객체들로서)."

#. Tag: term
#, no-c-format
msgid "Transient and detached objects and collections"
msgstr "전이(Transient, 필자 주-과도) 객체들과 콜렉션들"

#. Tag: para
#, no-c-format
msgid ""
"Instances of persistent classes that are not currently associated with a "
"<literal>Session</literal>. They may have been instantiated by the "
"application and not yet persisted, or they may have been instantiated by a "
"closed <literal>Session</literal>."
msgstr ""
"현재 <literal>Session</literal>과 연관되어 있지 않은 영속 클래스들의 인스턴스"
"들. 그것들은 어플리케이션에 의해 초기화 되었고 아직 영속화 되지 않았거나 그것"
"들은 닫힌 <literal>Session</literal>에 의해 초기화 되었을 수 있다."

#. Tag: term
#, no-c-format
msgid "Transaction (<literal>org.hibernate.Transaction</literal>)"
msgstr "Transaction (<literal>org.hibernate.Transaction</literal>)"

#. Tag: para
#, no-c-format
msgid ""
"(Optional) A single-threaded, short-lived object used by the application to "
"specify atomic units of work. It abstracts the application from the "
"underlying JDBC, JTA or CORBA transaction. A <literal>Session</literal> "
"might span several <literal>Transaction</literal>s in some cases. However, "
"transaction demarcation, either using the underlying API or "
"<literal>Transaction</literal>, is never optional."
msgstr ""
"(옵션) 어플리케이션에 의해 작업의 원자 단위를 지정하는데 사용되는 단일 쓰레드"
"인, 수명이 짧은 객체. 그것은 기본 JDBC, JTA 또는 CORBA 트랜잭션으로부터 어플"
"리케이션을 추상화 시킨다. 몇몇 경우들에서 하나의 <literal>Session</literal>"
"은 여러 개의 <literal>Transaction</literal>들에 걸쳐져 있을 수 있다. 하지만 "
"기본 API 또는 <literal>Transaction</literal> 중 어느것을 사용하는 트랜잭션 경"
"계 설정은 결코 옵션이 아니다."

#. Tag: term
#, no-c-format
msgid ""
"ConnectionProvider (<literal>org.hibernate.connection.ConnectionProvider</"
"literal>)"
msgstr ""
"ConnectionProvider (<literal>org.hibernate.connection.ConnectionProvider</"
"literal>)"

#. Tag: para
#, no-c-format
msgid ""
"(Optional) A factory for, and pool of, JDBC connections. It abstracts the "
"application from underlying <literal>Datasource</literal> or "
"<literal>DriverManager</literal>. It is not exposed to application, but it "
"can be extended and/or implemented by the developer."
msgstr ""
"(옵션) JDBC 연결들을 위한 팩토리, 그리고 그것들의 pool. 그것은 기본 "
"<literal>Datasource</literal> 또는 <literal>DriverManager</literal>로부터 어"
"플리케이션을 추상화 시킨다. 그것은 어플리케이션에 노출되지 않지만, 그것은 개"
"발자에 의해 확장 그리고/또는 구현 될 수 있다."

#. Tag: term
#, no-c-format
msgid ""
"TransactionFactory (<literal>org.hibernate.TransactionFactory</literal>)"
msgstr ""
"TransactionFactory (<literal>org.hibernate.TransactionFactory</literal>)"

#. Tag: para
#, no-c-format
msgid ""
"(Optional) A factory for <literal>Transaction</literal> instances. It is not "
"exposed to the application, but it can be extended and/or implemented by the "
"developer."
msgstr ""
"(옵션) <literal>Transaction</literal> 인스턴스들을 위한 팩토리. 그것은 어플리"
"케이션에 노출되지 않지만, 그것은  개발자에 의해 확장 그리고/또는 구현 될 수 "
"있다."

#. Tag: term
#, fuzzy, no-c-format
msgid "<emphasis>Extension Interfaces</emphasis>"
msgstr "Extension Interfaces"

#. Tag: para
#, no-c-format
msgid ""
"Hibernate offers a range of optional extension interfaces you can implement "
"to customize the behavior of your persistence layer. See the API "
"documentation for details."
msgstr ""
"하이버네이트는 당신이 당신의 영속 계층의 행위를 맞춤화 시키기 위해 구현할 수 "
"있는 선택적인 확장 인터페이스들의 영역을 제공한다. 상세한 것은 API 문서를 보"
"라."

#. Tag: para
#, no-c-format
msgid ""
"Given a \"minimal\" architecture, the application bypasses the "
"<literal>Transaction</literal>/<literal>TransactionFactory</literal> and/or "
"<literal>ConnectionProvider</literal> APIs to communicate with JTA or JDBC "
"directly."
msgstr ""
"\"최소\" 아키텍처의 경우, 어플리케이션은 JTA 또는 JDBC와 직접 통신하기 위해 "
"<literal>Transaction</literal>/<literal>TransactionFactory</literal> 그리고/"
"또는 <literal>ConnectionProvider</literal> API들을 무시한다."

#. Tag: title
#, no-c-format
msgid "Instance states"
msgstr "인스턴스 상태들"

#. Tag: para
#, no-c-format
msgid ""
"An instance of a persistent class can be in one of three different states. "
"These states are defined in relation to a <emphasis>persistence context</"
"emphasis>. The Hibernate <literal>Session</literal> object is the "
"persistence context. The three different states are as follows:"
msgstr ""
"영속 클래스들의 인스턴스는 세개의 상태들 중 하나에 놓여질 수 있다. 이들 상태"
"들은 <emphasis>영속 컨텍스트</emphasis>에 관련하여 정의된다. 하이버네이트 "
"<literal>Session</literal> 객체는 영속 컨텍스트이다. 세 개의 다른 상태들은 다"
"음과 같다:"

#. Tag: term
#, no-c-format
msgid "transient"
msgstr "transient"

#. Tag: para
#, no-c-format
msgid ""
"The instance is not associated with any persistence context. It has no "
"persistent identity or primary key value."
msgstr ""
"그 인스턴스는 임의의 영속 컨텍스트와 연관지워져 있지 않다. 그것은 영속 식별"
"자 또는 프라이머리 키 값을 갖지 않는다."

#. Tag: term
#, no-c-format
msgid "persistent"
msgstr "persistent"

#. Tag: para
#, no-c-format
msgid ""
"The instance is currently associated with a persistence context. It has a "
"persistent identity (primary key value) and can have a corresponding row in "
"the database. For a particular persistence context, Hibernate "
"<emphasis>guarantees</emphasis> that persistent identity is equivalent to "
"Java identity in relation to the in-memory location of the object."
msgstr ""
"그 인스턴스는 현재 영속 컨텍스트와 연관되어 있다. 그것은 영속 식별자(프라이머"
"리 키 값)을 갖고 있고 데이터베이스 내에서 하나의 대응하는 행을 가질 수 있다. "
"특정 영속 컨텍스트의 경우, 하이버네이트는 영속 식별자가 객체의 메모리 내 위치"
"에 관하여 자바 식별자와 동등함을 <emphasis>보증한다</emphasis>."

#. Tag: term
#, no-c-format
msgid "detached"
msgstr "detached"

#. Tag: para
#, no-c-format
msgid ""
"The instance was once associated with a persistence context, but that "
"context was closed, or the instance was serialized to another process. It "
"has a persistent identity and can have a corresponding row in the database. "
"For detached instances, Hibernate does not guarantee the relationship "
"between persistent identity and Java identity."
msgstr ""
"그 인스턴스는 일단 영속 컨텍스트와 연관되었지만, 그 컨텍스트가 닫혀졌거나, 또"
"는 그 인스턴스가 또 다른 프로세스에 직렬화 되었다. 그것은 영속 식별자를 갖고 "
"있으며, 데이터베이스 내에서 하나의 대응하는 행을 가질 수 있다. 분리된 인스턴"
"스들의 경우, 하이버네이트는 영속 식별자와 자바 식별자 사이의 관계를 보증하지 "
"않는다."

#. Tag: title
#, no-c-format
msgid "JMX Integration"
msgstr "JMX 통합"

#. Tag: para
#, no-c-format
msgid ""
"JMX is the J2EE standard for the management of Java components. Hibernate "
"can be managed via a JMX standard service. AN MBean implementation is "
"provided in the distribution: <literal>org.hibernate.jmx.HibernateService</"
"literal>."
msgstr ""
"JMX는 자바 컴포넌트 관리를 위한 J2EE 표준이다. 하이버네이트는 JMX 표준 서비스"
"를 통해 관리될 수 있다. 하나의 MBean 구현이 배포본 내에 제공된다: "
"<literal>org.hibernate.jmx.HibernateService</literal>."

#. Tag: para
#, no-c-format
msgid ""
"For an example of how to deploy Hibernate as a JMX service on the JBoss "
"Application Server, please see the JBoss User Guide. JBoss AS also provides "
"these benefits if you deploy using JMX:"
msgstr ""
"JBoss 어플리케이션 서버 상에 JMX 서비스로서 하이버네이트를 배포하는 방법에 대"
"한 예제는 JBoss 사용자 가이드를 보길 바란다. 당신이 JMX를 사용하여 배포할 경"
"우, JBoss AS는 또한 다음 이점들을 제공한다: "

#. Tag: para
#, no-c-format
msgid ""
"<emphasis>Session Management</emphasis>: the Hibernate <literal>Session</"
"literal>'s life cycle can be automatically bound to the scope of a JTA "
"transaction. This means that you no longer have to manually open and close "
"the <literal>Session</literal>; this becomes the job of a JBoss EJB "
"interceptor. You also do not have to worry about transaction demarcation in "
"your code (if you would like to write a portable persistence layer use the "
"optional Hibernate <literal>Transaction</literal> API for this). You call "
"the <literal>HibernateContext</literal> to access a <literal>Session</"
"literal>."
msgstr ""
"<emphasis>세션 관리</emphasis>: 하이버네이트 <literal>Session</literal>의 생"
"명주기는 JTA 트랜잭션의 영역에 자동적으로 묶여질 수 있다. 이것은 당신이 "
"<literal>Session</literal>을 더 이상 수작업으로 열거나 닫지 않아도 됨을 의미"
"한다; 이것은 JBoss 인터셉터의 작업이 된다. 당신은 또한 더 이상 당신의 코드 내"
"에서 트랜잭션 격리에 대해 걱정하지 않아도 된다(만일 당신이 이식가능한 영속 계"
"층을 작성하고자 원할 경우 이것을 위해 선택적으로 하이버네이트 "
"<literal>Transaction</literal> API를 사용하라). 당신은 <literal>Session</"
"literal>에 접근하기 위해 <literal>HibernateContext</literal>를 호출한다."

#. Tag: para
#, no-c-format
msgid ""
"<emphasis>HAR deployment</emphasis>: the Hibernate JMX service is deployed "
"using a JBoss service deployment descriptor in an EAR and/or SAR file, as it "
"supports all the usual configuration options of a Hibernate "
"<literal>SessionFactory</literal>. However, you still need to name all your "
"mapping files in the deployment descriptor. If you use the optional HAR "
"deployment, JBoss will automatically detect all mapping files in your HAR "
"file."
msgstr ""
"<emphasis>HAR 배포</emphasis>: JBoss가 하이버네이트 <literal>SessionFactory</"
"literal>의 거의 모든 구성 옵션들을 지원하므로, 하이버네이트 JMS 서비스는 "
"JBoss 서비스 배포 디스크립터를 사용하여 EAR 그리고/또는 SAR 파일로서 배포된"
"다. 하지만 당신은 여전히 배포 디스크립터 내에 모든 당신의 매핑 파일들을 명명"
"할 필요가 있다. 만일 당신이 선택적인 HAR 배포를 사용할 경우, JBoss는 당신의 "
"HAR 파일 내에 있는 모든 매핑 파일들을 자동적으로 검출할 것이다."

#. Tag: para
#, no-c-format
msgid ""
"Consult the JBoss AS user guide for more information about these options."
msgstr ""
"이들 옵션들에 대한 추가 정보는 JBoss 어플리케이션 서버 사용자 가이드를 참조하"
"라."

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"Another feature available as a JMX service is runtime Hibernate statistics. "
"See <xref linkend=\"configuration-optional-statistics\" /> for more "
"information."
msgstr ""
"JMX 서비스로서 이용 가능한 또다른 특징은 런타임 하이버네이트 통계이다. 부가 "
"정보는 <xref linkend=\"configuration-optional-statistics\"/>를 보라."

#. Tag: title
#, no-c-format
msgid "JCA Support"
msgstr "JCA 지원"

#. Tag: para
#, no-c-format
msgid ""
"Hibernate can also be configured as a JCA connector. Please see the website "
"for more information. Please note, however, that at this stage Hibernate JCA "
"support is under development."
msgstr ""
"하이버네이트는 또한 JCA 커넥터로서 구성될 수도 있다. 부가 정보는 웹 사이트를 "
"보길 바란다. 하지만 현 단게에서 하이버네이트 JCA 지원은 개발 중에 있음을 염두"
"에 두길 바란다."

#. Tag: title
#, no-c-format
msgid "Contextual sessions"
msgstr "컨텍스트의 세션들"

#. Tag: para
#, no-c-format
msgid ""
"Most applications using Hibernate need some form of \"contextual\" session, "
"where a given session is in effect throughout the scope of a given context. "
"However, across applications the definition of what constitutes a context is "
"typically different; different contexts define different scopes to the "
"notion of current. Applications using Hibernate prior to version 3.0 tended "
"to utilize either home-grown <literal>ThreadLocal</literal>-based contextual "
"sessions, helper classes such as <literal>HibernateUtil</literal>, or "
"utilized third-party frameworks, such as Spring or Pico, which provided "
"proxy/interception-based contextual sessions."
msgstr ""
"하이버네이트를 사용하는 대부분의 어플리케이션들은 \"컨텍스트상의(contextual)"
"\" 세션에 대한 어떤 형식을 필요로 하며, 여기서 주어진 세션은 주어진 컨텍스트"
"의 영역 내에서 효과가 있다. 하지만 어플리케이션들을 가로질러 어던 컨텍스트를 "
"구성하는 것에 대한 정의는 일반적으로 다르다; 그리고 다른 컨텍스트들이 현재라"
"고 하는 개념에 대해 다른 영역들을 정의한다. 버전 3.0 이전의 하이버네이트를 사"
"용하는 어플리케이션들은 <literal>HibernateUtil</literal>과 같은 helper 클래스"
"들인, 자가생산된 <literal>ThreadLocal</literal>-기반의 컨텍스트 세션들을 활용"
"하려고 했거나, 프락시/인터셉션 기반의 컨텍스트 세션들을 제공해주었던, Spring"
"이나 Pico와 같은 제 3의 프레임웍들을 활용했다."

#. Tag: para
#, no-c-format
msgid ""
"Starting with version 3.0.1, Hibernate added the <literal>SessionFactory."
"getCurrentSession()</literal> method. Initially, this assumed usage of "
"<literal>JTA</literal> transactions, where the <literal>JTA</literal> "
"transaction defined both the scope and context of a current session. Given "
"the maturity of the numerous stand-alone <literal>JTA TransactionManager</"
"literal> implementations, most, if not all, applications should be using "
"<literal>JTA</literal> transaction management, whether or not they are "
"deployed into a <literal>J2EE</literal> container. Based on that, the "
"<literal>JTA</literal>-based contextual sessions are all you need to use."
msgstr ""
"버전 3.0.1에서부터, 하이버네이트는 <literal>SessionFactory.getCurrentSession"
"()</literal> 메소드를 추가했다. 초기에 이것은 <literal>JTA</literal> 트랜잭"
"션 사용을 전제했으며, <literal>JTA</literal> 트랜잭션은 현 세션의 영역 및 컨"
"텍스트 둘 다 정의했다. 많은 스탠드얼론 <literal>JTA TransactionManager</"
"literal> 구현들이 성숙되면, 전부는 아니겠지만, 대부분의 어플리케이션들이 "
"<literal>J2EE</literal> 컨테이너 내로 배포되든 그렇지 않든 간에 대부분의 어플"
"리케이션들이 <literal>JTA</literal> 트랜잭션 관리를 사용하게 될 것이다. 그것"
"에 기초하면, <literal>JTA</literal>에 기반한 컨텍스트 세션들은 당신이 사용할 "
"필요가 있는 모든 것이다."

#. Tag: para
#, no-c-format
msgid ""
"However, as of version 3.1, the processing behind <literal>SessionFactory."
"getCurrentSession()</literal> is now pluggable. To that end, a new extension "
"interface, <literal>org.hibernate.context.CurrentSessionContext</literal>, "
"and a new configuration parameter, <literal>hibernate."
"current_session_context_class</literal>, have been added to allow "
"pluggability of the scope and context of defining current sessions."
msgstr ""
"하지만 현재 버전 3.1에서  <literal>SessionFactory.getCurrentSession()</"
"literal> 이면의 처리과정이 이제 플러그 가능하다. 그것으로 인해, 하나의 새로"
"운 확장 인터페이스, <literal>org.hibernate.context.CurrentSessionContext</"
"literal>)와 하나의 새로운 구성 파라미터, <literal>hibernate."
"current_session_context_class</literal>가 현재 세션들을 정의하는 영역 및 컨텍"
"스트의 플러그 가능성을 허용하도록 추가되었다."

#. Tag: para
#, no-c-format
msgid ""
"See the Javadocs for the <literal>org.hibernate.context."
"CurrentSessionContext</literal> interface for a detailed discussion of its "
"contract. It defines a single method, <literal>currentSession()</literal>, "
"by which the implementation is responsible for tracking the current "
"contextual session. Out-of-the-box, Hibernate comes with three "
"implementations of this interface:"
msgstr ""
"그것의 계약에 대한 상세한 논의는 <literal>org.hibernate.context."
"CurrentSessionContext</literal> 인터페이스에 관한 javadocs를 보라. 그것은 하"
"나의 메소드, <literal>currentSession()</literal>를 정의하며, 그 구현은 현재"
"의 컨텍스트 상의 세션을 추적할 책임이 있다. 비공식적으로, Hibernate는 이 인터"
"페이스에 대한 세 개의 구현들을 부수적으로 포함하고 있다."

#. Tag: para
#, no-c-format
msgid ""
"<literal>org.hibernate.context.JTASessionContext</literal>: current sessions "
"are tracked and scoped by a <literal>JTA</literal> transaction. The "
"processing here is exactly the same as in the older JTA-only approach. See "
"the Javadocs for details."
msgstr ""
"<literal>org.hibernate.context.JTASessionContext</literal>: 현재 세션들은 "
"<literal>JTA</literal> 트랜잭션에 의해 추적되고 영역화 된다. 여기서 처리는 예"
"전의 JTA-전용 접근법과 정확하게 같다. 상세한 것은 Javadocs를 보라."

#. Tag: para
#, no-c-format
msgid ""
"<literal>org.hibernate.context.ThreadLocalSessionContext</literal>:current "
"sessions are tracked by thread of execution. See the Javadocs for details."
msgstr ""
"<literal>org.hibernate.context.ThreadLocalSessionContext</literal> :현재 세션"
"들은 실행 쓰레드에 의해 추적된다. 상세한 것은 다시 javadocs를 보라."

#. Tag: para
#, no-c-format
msgid ""
"<literal>org.hibernate.context.ManagedSessionContext</literal>: current "
"sessions are tracked by thread of execution. However, you are responsible to "
"bind and unbind a <literal>Session</literal> instance with static methods on "
"this class: it does not open, flush, or close a <literal>Session</literal>."
msgstr ""
"<literal>org.hibernate.context.ManagedSessionContext</literal> : 현재 세션들"
"은 실행 쓰레드에 의해 추적된다. 하지만 <literal>Session</literal> 인스턴스를 "
"이 클래스 상에 있는 static 메소드들에 바인딩시키고 언바인딩 시킬 책임이 당신"
"에게 있다: 그것은 <literal>Session</literal>을 열지도 flush 시키거나 닫지 않"
"는다."

#. Tag: para
#, fuzzy, no-c-format
msgid ""
"The first two implementations provide a \"one session - one database "
"transaction\" programming model. This is also also known and used as "
"<emphasis>session-per-request</emphasis>. The beginning and end of a "
"Hibernate session is defined by the duration of a database transaction. If "
"you use programmatic transaction demarcation in plain JSE without JTA, you "
"are advised to use the Hibernate <literal>Transaction</literal> API to hide "
"the underlying transaction system from your code. If you use JTA, you can "
"utilize the JTA interfaces to demarcate transactions. If you execute in an "
"EJB container that supports CMT, transaction boundaries are defined "
"declaratively and you do not need any transaction or session demarcation "
"operations in your code. Refer to <xref linkend=\"transactions\" /> for more "
"information and code examples."
msgstr ""
"첫 두 개의 구현들은 \"한 개의 세션 - 한 개의 데이터베이스 트랜잭션\" 프로그래"
"밍 모형을 제공한다. 이것은 또한  <emphasis>요청 당 세션</emphasis>으로 알려"
"져 있고 사용된다. 하이버네이트 세션의 시작과 끝은 데이터베이스 트랜잭션의 존"
"속 기간에 의해 정의된다. 만일 당신이 JTA없이 평범한 JSE에서 프로그램 상의 트"
"랜잭션 격리를 사용할 경우, 당신에게 당신의 코드에서 기본 트랜잭션 시스템을 은"
"폐시키는데 하이버네이트 <literal>Transaction</literal> API를 사용하도록 권장"
"된다.만일 당신이 CMT를 지원하는 EJB 컨테이너 내에서 실행할 경우, 트랜잭션 경"
"계들은 선언적으로 정의되며 당신이 당신의 코드에 임의의 트랜잭션 또는 세션 경"
"계설정 오퍼레이션을 필요로 하지 않는다. 만일 당신이 CMT를 지원하는 하나의 "
"EJB 컨테이너에서 실행할 경우, 트랜잭션 경계들이 선언적으로 정의되고 당신은 당"
"신의 코드 내에서 어떠한 트랜잭션이나 세션 경계구분 오퍼레이션들을 필요로 하"
"지 않는다. 부가 정보와 코드 예제들은 <xref linkend=\"transactions\"/>를 참조"
"하라."

#. Tag: para
#, no-c-format
msgid ""
"The <literal>hibernate.current_session_context_class</literal> configuration "
"parameter defines which <literal>org.hibernate.context."
"CurrentSessionContext</literal> implementation should be used. For backwards "
"compatibility, if this configuration parameter is not set but a <literal>org."
"hibernate.transaction.TransactionManagerLookup</literal> is configured, "
"Hibernate will use the <literal>org.hibernate.context.JTASessionContext</"
"literal>. Typically, the value of this parameter would just name the "
"implementation class to use. For the three out-of-the-box implementations, "
"however, there are three corresponding short names: \"jta\", \"thread\", and "
"\"managed\"."
msgstr ""
"<literal>hibernate.current_session_context_class</literal> 구성 파라미터는 어"
"느 <literal>org.hibernate.context.CurrentSessionContext</literal> 구현이 사용"
"될 것인지를 정의한다. 역호환을 위해. 만일 이 구성 파라미터가 설정되지 않지만 "
"하나의 <literal>org.hibernate.transaction.TransactionManagerLookup</literal>"
"이 구성되는 경우에, 하이버네이트는 <literal>org.hibernate.context."
"JTASessionContext</literal>를 사용할 것이다. 일반적으로, 이 파라미터의 값은 "
"단지 사용할 구현 클래스를 명명할 것이다; 하지만 세 개의 비공식적인 구현들에 "
"대해, 세 개의 대응하는 짧은 이름들 \"jta\"와 \"thread\", 그리고 \"managed"
"\"가 존재한다."
