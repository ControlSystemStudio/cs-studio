# translation of best_practices.po to
# translation of Collection_Mapping.po to
# translation of Collection_Mapping.po to
# translation of Collection_Mapping.po to
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2006.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# , 2007.
# Michael H. Smith <mhideo@redhat.com>, 2007.
# Glaucia Cintra <gcintra@redhat.com>, 2007.
msgid ""
msgstr ""
"Project-Id-Version: best_practices\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2010-02-11T05:38:15\n"
"PO-Revision-Date: 2010-03-15 15:52+1000\n"
"Last-Translator: \n"
"Language-Team:  <en@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: KBabel 1.11.4\n"

#. Tag: title
#, no-c-format
msgid "Best Practices"
msgstr "Melhores práticas"

#. Tag: term
#, no-c-format
msgid ""
"Write fine-grained classes and map them using <literal>&lt;component&gt;</"
"literal>:"
msgstr ""
"Escreva classes compactas e mapeie-as usando <literal>&lt;component&gt;</"
"literal>:"

#. Tag: para
#, no-c-format
msgid ""
"Use an <literal>Address</literal> class to encapsulate <literal>street</"
"literal>, <literal>suburb</literal>, <literal>state</literal>, "
"<literal>postcode</literal>. This encourages code reuse and simplifies "
"refactoring."
msgstr ""
"Use uma classe <literal>Endereço</literal> para encapsular <literal>rua</"
"literal>, <literal>bairro</literal>, <literal>estado</literal>, "
"<literal>CEP</literal>. Isto promove a reutilização de código e simplifica o "
"refactoring."

#. Tag: term
#, no-c-format
msgid "Declare identifier properties on persistent classes:"
msgstr "Declare propriedades identificadoras em classes persistentes:"

#. Tag: para
#, no-c-format
msgid ""
"Hibernate makes identifier properties optional. There are a range of reasons "
"why you should use them. We recommend that identifiers be 'synthetic', that "
"is, generated with no business meaning."
msgstr ""
"O Hibernate constrói propriedades identificadoras opcionais. Existem "
"inúmeras razões para utilizá-las. Nós recomendamos que os identificadores "
"sejam 'sintéticos', quer dizer, gerados sem significado para negócios. "

#. Tag: term
#, no-c-format
msgid "Identify natural keys:"
msgstr "Identifique chaves naturais:"

#. Tag: para
#, no-c-format
msgid ""
"Identify natural keys for all entities, and map them using <literal>&lt;"
"natural-id&gt;</literal>. Implement <literal>equals()</literal> and "
"<literal>hashCode()</literal> to compare the properties that make up the "
"natural key."
msgstr ""
"Identifique chaves naturais para todas as entidades, e mapeie-as usando "
"<literal>&lt;natural-id&gt;</literal>. Implemente <literal>equals()</"
"literal> e <literal>hashCode()</literal> para comparar as propriedades que "
"compõem a chave natural."

#. Tag: term
#, no-c-format
msgid "Place each class mapping in its own file:"
msgstr "Coloque cada classe de mapeamento em seu próprio arquivo:"

#. Tag: para
#, no-c-format
msgid ""
"Do not use a single monolithic mapping document. Map <literal>com.eg.Foo</"
"literal> in the file <literal>com/eg/Foo.hbm.xml</literal>. This makes "
"sense, particularly in a team environment."
msgstr ""
"Não use um único código de mapeamento monolítico. Mapeie <literal>com.eg."
"Foo</literal> no arquivo <literal>com/eg/Foo.hbm.xml</literal>. Isto faz "
"bastante sentido, especialmente em ambiente de equipe."

#. Tag: term
#, no-c-format
msgid "Load mappings as resources:"
msgstr "Carregue os mapeamentos como recursos:"

#. Tag: para
#, no-c-format
msgid "Deploy the mappings along with the classes they map."
msgstr "Implemente os mapeamentos junto às classes que eles mapeiam."

#. Tag: term
#, no-c-format
msgid "Consider externalizing query strings:"
msgstr "Considere a possibilidade de externar as strings de consultas:"

#. Tag: para
#, no-c-format
msgid ""
"This is recommended if your queries call non-ANSI-standard SQL functions. "
"Externalizing the query strings to mapping files will make the application "
"more portable."
msgstr ""
"Esta é uma boa prática se suas consultas chamam funções SQL que não sejam "
"ANSI. Externar as strings de consultas para mapear arquivos irá tornar a "
"aplicação mais portável. "

#. Tag: term
#, no-c-format
msgid "Use bind variables."
msgstr "Use variáveis de vínculo."

#. Tag: para
#, no-c-format
msgid ""
"As in JDBC, always replace non-constant values by \"?\". Do not use string "
"manipulation to bind a non-constant value in a query. You should also "
"consider using named parameters in queries."
msgstr ""
"Assim como em JDBC, sempre substitua valores não constantes por \"?\". Nunca "
"use a manipulação de strings para concatenar valores não constantes em uma "
"consulta. Até melhor, considere a possibilidade de usar parâmetros nomeados "
"nas consultas."

#. Tag: term
#, no-c-format
msgid "Do not manage your own JDBC connections:"
msgstr "Não gerencie suas conexões JDBC:"

#. Tag: para
#, no-c-format
msgid ""
"Hibernate allows the application to manage JDBC connections, but his "
"approach should be considered a last-resort. If you cannot use the built-in "
"connection providers, consider providing your own implementation of "
"<literal>org.hibernate.connection.ConnectionProvider</literal>."
msgstr ""
"O Hibernate permite que a aplicação gerencie conexões JDBC, mas esta "
"abordagem deve ser considerada um último recurso. Se você não pode usar os "
"provedores de conexão embutidos, considere fazer sua implementação a partir "
"de <literal>org.hibernate.connection.ConnectionProvider</literal>."

#. Tag: term
#, no-c-format
msgid "Consider using a custom type:"
msgstr "Considere a possibilidade de usar tipos customizados:"

#. Tag: para
#, no-c-format
msgid ""
"Suppose you have a Java type from a library that needs to be persisted but "
"does not provide the accessors needed to map it as a component. You should "
"consider implementing <literal>org.hibernate.UserType</literal>. This "
"approach frees the application code from implementing transformations to/"
"from a Hibernate type."
msgstr ""
"Suponha que você tenha um tipo Java, de alguma biblioteca, que precisa ser "
"persistido mas não provê de acessórios necessários para mapeá-lo como um "
"componente. Você deve implementar <literal>org.hibernate.UserType</literal>. "
"Esta abordagem livra o código da aplicação de implementar transformações de/"
"para o tipo Hibernate. "

#. Tag: term
#, no-c-format
msgid "Use hand-coded JDBC in bottlenecks:"
msgstr "Use código manual JDBC nos afunilamentos:"

#. Tag: para
#, no-c-format
msgid ""
"In performance-critical areas of the system, some kinds of operations might "
"benefit from direct JDBC. Do not assume, however, that JDBC is necessarily "
"faster. Please wait until you <emphasis>know</emphasis> something is a "
"bottleneck. If you need to use direct JDBC, you can open a Hibernate "
"<literal>Session</literal>, wrap your JDBC operation as a <literal>org."
"hibernate.jdbc.Work</literal> object and using that JDBC connection. This "
"way you can still use the same transaction strategy and underlying "
"connection provider."
msgstr ""
"Nas áreas de desempenho crítico do sistema, alguns tipos de operações podem "
"se beneficiar do uso direto do JDBC. Mas por favor, espere até você "
"<emphasis>saber</emphasis> se é um afunilamento. E não suponha que o uso "
"direto do JDBC é necessariamente mais rápido. Se você precisar usar "
"diretamente o JDBC, vale a pena abrir uma <literal>Session</literal> do "
"Hibernate, embrulhar a sua operaçäo JDBC como um objeto <literal>org."
"hibernate.jdbc.Work</literal> e usar uma conexão JDBC. De modo que você possa ainda usar a mesma "
"estratégia de transação e ocultar o provedor a conexão."

#. Tag: term
#, no-c-format
msgid "Understand <literal>Session</literal> flushing:"
msgstr "Entenda o esvaziamento da <literal>Session</literal>:"

#. Tag: para
#, no-c-format
msgid ""
"Sometimes the Session synchronizes its persistent state with the database. "
"Performance will be affected if this process occurs too often. You can "
"sometimes minimize unnecessary flushing by disabling automatic flushing, or "
"even by changing the order of queries and other operations within a "
"particular transaction."
msgstr ""
"De tempos em tempos a sessão sincroniza seu estado persistente com o banco "
"de dados. O desempenho será afetado se este processo ocorrer frequentemente. "
"Você pode algumas vezes minimizar a liberação desnecessária desabilitando a "
"liberação automática ou até mesmo mudando a ordem das consultas e outras "
"operações em uma transação particular. "

#. Tag: term
#, no-c-format
msgid "In a three tiered architecture, consider using detached objects:"
msgstr "Em uma arquitetura de três camadas, considere o uso de objetos separados:"

#. Tag: para
#, no-c-format
msgid ""
"When using a servlet/session bean architecture, you can pass persistent "
"objects loaded in the session bean to and from the servlet/JSP layer. Use a "
"new session to service each request. Use <literal>Session.merge()</literal> "
"or <literal>Session.saveOrUpdate()</literal> to synchronize objects with the "
"database."
msgstr ""
"Ao usar a arquitetura do bean de sessão/servlet, você pode passar os objetos "
"persistentes carregados no bean de sessão para e a partir da camada servlet/"
"JSP. Use uma nova sessão para manipular cada solicitação. Use a "
"<literal>Session.merge()</literal> ou a <literal>Session.saveOrUpdate()</"
"literal> para sincronizar objetos com o banco de dados.  "

#. Tag: term
#, no-c-format
msgid "In a two tiered architecture, consider using long persistence contexts:"
msgstr ""
"Em uma arquitetura de duas camadas, considere o uso de contextos de longa "
"persistência:"

#. Tag: para
#, no-c-format
msgid ""
"Database Transactions have to be as short as possible for best scalability. "
"However, it is often necessary to implement long running "
"<emphasis>application transactions</emphasis>, a single unit-of-work from "
"the point of view of a user. An application transaction might span several "
"client request/response cycles. It is common to use detached objects to "
"implement application transactions. An appropriate alternative in a two "
"tiered architecture, is to maintain a single open persistence contact "
"session for the whole life cycle of the application transaction. Then simply "
"disconnect from the JDBC connection at the end of each request and reconnect "
"at the beginning of the subsequent request. Never share a single session "
"across more than one application transaction or you will be working with "
"stale data."
msgstr ""
"As Transações do Banco de Dados precisam ser as mais curtas possíveis para "
"uma melhor escalabilidade. No entanto, é geralmente necessário implementar "
"<emphasis>transações de aplicações</emphasis> de longa duração, uma única "
"unidade de trabalho a partir do ponto de vista de um usuário. Uma transação "
"de aplicação pode transpor diversos ciclos de solicitação/resposta de "
"cliente. É comum usar objetos desanexados para implementar as transações de "
"aplicação. Uma outra alternativa, extremamente apropriada em uma arquitetura "
"de duas camadas, é manter um único contato de persistência aberto (sessão) "
"para todo o tempo de vida da transação de aplicação e simplesmente "
"disconectá-lo do JDBC ao final de cada solicitação e reconectá-lo no início "
"de uma solicitação subsequente. Nunca compartilhe uma sessão única com mais "
"de uma transação de aplicação, ou você irá trabalhar com dados antigos."

#. Tag: term
#, no-c-format
msgid "Do not treat exceptions as recoverable:"
msgstr "Não trate as exceções como recuperáveis:"

#. Tag: para
#, no-c-format
msgid ""
"This is more of a necessary practice than a \"best\" practice. When an "
"exception occurs, roll back the <literal>Transaction</literal> and close the "
"<literal>Session</literal>. If you do not do this, Hibernate cannot "
"guarantee that in-memory state accurately represents the persistent state. "
"For example, do not use <literal>Session.load()</literal> to determine if an "
"instance with the given identifier exists on the database; use "
"<literal>Session.get()</literal> or a query instead."
msgstr ""
"Isto é mais uma prática necessária do que uma \"melhor\" prática. Quando uma "
"exceção ocorre, retorne à <literal>Transaction</literal> e feche a "
"<literal>Sessão</literal>. Se não fizer isto, o Hibernate não poderá "
"garantir que o estado em memória representará de forma precisa o estado "
"persistente. Como este é um caso especial, não utilize a <literal>Session."
"load()</literal> para determinar se uma instância com dado identificador "
"existe em um banco de dados, use <literal>Session.get()</literal> ou então "
"uma consulta. "

#. Tag: term
#, no-c-format
msgid "Prefer lazy fetching for associations:"
msgstr "Prefira a busca lazy para associações:"

#. Tag: para
#, no-c-format
msgid ""
"Use eager fetching sparingly. Use proxies and lazy collections for most "
"associations to classes that are not likely to be completely held in the "
"second-level cache. For associations to cached classes, where there is an a "
"extremely high probability of a cache hit, explicitly disable eager fetching "
"using <literal>lazy=\"false\"</literal>. When join fetching is appropriate "
"to a particular use case, use a query with a <literal>left join fetch</"
"literal>."
msgstr ""
"Use a busca antecipada de forma moderada. Use as coleções proxy e lazy para "
"a maioria das associações para classes que possam não ser completamente "
"mantidas em cache de segundo nível. Para associações de classes em cache, "
"onde existe uma enorme probabilidade de coincidir caches, desabilite "
"explicitamente a busca antecipada usando <literal>lazy=\"false\"</literal>. "
"Quando uma busca de união é apropriada para um caso específico, use a "
"consulta com <literal>left join fetch</literal>."

#. Tag: term
#, no-c-format
msgid ""
"Use the <emphasis>open session in view</emphasis> pattern, or a disciplined "
"<emphasis>assembly phase</emphasis> to avoid problems with unfetched data:"
msgstr ""
"Use o modelo <emphasis>sessão aberta na visualização</emphasis>, ou uma "
"<emphasis>fase de construção</emphasis> para evitar problemas com dados não "
"encontrados."

#. Tag: para
#, no-c-format
msgid ""
"Hibernate frees the developer from writing tedious <emphasis>Data Transfer "
"Objects</emphasis> (DTO). In a traditional EJB architecture, DTOs serve dual "
"purposes: first, they work around the problem that entity beans are not "
"serializable; second, they implicitly define an assembly phase where all "
"data to be used by the view is fetched and marshalled into the DTOs before "
"returning control to the presentation tier. Hibernate eliminates the first "
"purpose. Unless you are prepared to hold the persistence context (the "
"session) open across the view rendering process, you will still need an "
"assembly phase. Think of your business methods as having a strict contract "
"with the presentation tier about what data is available in the detached "
"objects. This is not a limitation of Hibernate. It is a fundamental "
"requirement of safe transactional data access."
msgstr ""
"O Hibernate libera o desenvolvedor de escrever <emphasis>Objetos de "
"Transferência de Dados</emphasis> (DTO). Em uma arquitetura tradicional EJB, "
"os DTOs servem dois propósitos: primeiro, eles se deparam com o problema de "
"que os beans de entidade não são serializáveis, depois, eles implicitamente "
"definem uma fase de construção onde todos os dados a serem utilizados pelo "
"view são buscados e conduzidos aos DTOs antes mesmo de retornar o controle à "
"camada de apresentação. O Hibernate elimina o primeiro propósito. No "
"entanto, você ainda precisará de uma fase de construção (pense em seus "
"métodos de negócios como tendo um contrato estrito com a camada de "
"apresentação sobre o quais dados estão disponíveis nos objetos desanexados) "
"a não ser que você esteja preparado para manter o contexto de persistência "
"(sessão) aberto no processo de renderização da visualização. Isto não é uma "
"limitação do Hibernate. É uma solicitação fundamental para acesso a dados "
"transacionais seguros."

#. Tag: term
#, no-c-format
msgid "Consider abstracting your business logic from Hibernate:"
msgstr "Considere abstrair sua lógica comercial do Hibernate:"

#. Tag: para
#, no-c-format
msgid ""
"Hide Hibernate data-access code behind an interface. Combine the "
"<emphasis>DAO</emphasis> and <emphasis>Thread Local Session</emphasis> "
"patterns. You can even have some classes persisted by handcoded JDBC "
"associated to Hibernate via a <literal>UserType</literal>. This advice is, "
"however, intended for \"sufficiently large\" applications. It is not "
"appropriate for an application with five tables."
msgstr ""
"Oculte (Hibernate) o código de acesso a dados atrás de uma interface. "
"Combine os modelos <emphasis>DAO</emphasis> e <emphasis>Sessão Local de "
"Thread</emphasis>. Você pode também persistir algumas classes pelo JDBC "
"handcoded, associado ao Hibernate via um  <literal>UserType</literal>. Este "
"é um conselho para aplicações \"grandes o suficiente\", não é apropriado "
"para uma aplicação com cinco tabelas."

#. Tag: term
#, no-c-format
msgid "Do not use exotic association mappings:"
msgstr "Não use mapeamentos de associação exóticos:"

#. Tag: para
#, no-c-format
msgid ""
"Practical test cases for real many-to-many associations are rare. Most of "
"the time you need additional information stored in the \"link table\". In "
"this case, it is much better to use two one-to-many associations to an "
"intermediate link class. In fact, most associations are one-to-many and many-"
"to-one. For this reason, you should proceed cautiously when using any other "
"association style."
msgstr ""
"Casos de testes práticos para associações muitos-para-muitos reais são "
"raros. A maioria do tempo você precisa de informação adicional armazenada na "
"\" tabela de link\". Neste caso, é muito melhor usar associações dois um-"
"para-muitos para uma classe de link intermediário. Na verdade, acreditamos "
"que a maioria das associações é um-para-muitos e muitos-para-um, você deve "
"tomar cuidado ao utilizar qualquer outro tipo de associação e perguntar a "
"você mesmo se é realmente necessário. "

#. Tag: term
#, no-c-format
msgid "Prefer bidirectional associations:"
msgstr "Prefira associações bidirecionais:"

#. Tag: para
#, no-c-format
msgid ""
"Unidirectional associations are more difficult to query. In a large "
"application, almost all associations must be navigable in both directions in "
"queries."
msgstr ""
"As associações unidirecionais são mais difíceis para pesquisar. Em "
"aplicações grandes, quase todas as associações devem navegar nas duas "
"direções em consultas. "

