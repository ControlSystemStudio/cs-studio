<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.csstudio.alarm.beast.ui.alarmtable" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appInfo>
         <meta.schema plugin="org.csstudio.alarm.beast.ui.alarmtable" id="customconfig" name="Custom Configuration"/>
      </appInfo>
      <documentation>
         Extension point allows to customize the alarm table. Extendor can define custom actions that are executed when an alarm in the alarm table is double clicked and/or provide arbitrary text for any of the table cells.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appInfo>
            <meta.element />
         </appInfo>
      </annotation>
      <complexType>
         <choice minOccurs="0" maxOccurs="2">
            <element ref="doubleClickHandler" minOccurs="0" maxOccurs="1"/>
            <element ref="tableTextProvider" minOccurs="0" maxOccurs="1"/>
         </choice>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="doubleClickHandler">
      <annotation>
         <documentation>
            Implementation of the DoubleClickHandler. All registered double click handlers will always be executed, when an item in the table is double clicked.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn=":org.csstudio.alarm.beast.ui.alarmtable.customconfig.DoubleClickHandler"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="tableTextProvider">
      <annotation>
         <documentation>
            The text provider can provide an arbitrary text for any table cell, which will always take precedence over the default values.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn=":org.csstudio.alarm.beast.ui.alarmtable.customconfig.TableTextProvider"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         4.1.0
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         &lt;pre&gt;
   &lt;extension point=&quot;org.csstudio.alarm.beast.ui.alarmtable.customconfig&quot;&gt;
      &lt;doubleClickHandler
             class=&quot;org.csstudio.alarm.beast.ui.alarmtable.customconfig.OpenDisplayDoubleClickHandler&quot;&gt;
      &lt;/doubleClickHandler&gt;
      &lt;tableTextProvider
         class=&quot;my.foo.bar.TextProvider&quot;&gt;
      &lt;/tableTextProvider&gt; 
   &lt;/extension&gt;
&lt;/pre&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiinfo"/>
      </appInfo>
      <documentation>
         &lt;p&gt;
To use this feature add the extension point org.csstudio.alarm.beast.ui.alarmtable.customconfig to one of the plugins in your appliction. There are two customizations possible, which have to be specified through an interface implementation.
&lt;/p&gt;
&lt;p&gt;
&lt;i&gt;org.csstudio.alarm.beast.ui.alarmtable.customconfig.DoubleClickHandler&lt;/i&gt; defines the actions that are executed when an item in the table is double clicked.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;public void activeTableDoubleClicked(AlarmTreePV pv)&lt;/code&gt;: called when an item in the active table is double-clicked&lt;/li&gt;
&lt;li&gt;&lt;code&gt;public void acknowledgedTableDoubleClicked(AlarmTreePV pv)&lt;/code&gt;: called when an item in the acknowledged table is double-clicked&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;i&gt;org.csstudio.alarm.beast.ui.alarmtable.customconfig.TableTextProvider&lt;/i&gt; supplies a string that will be used as the cell content.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;public void getContentForColumn(String columnID, AlarmTreePV pv)&lt;/code&gt;: called for every cell when it is repainted. The return value if not null is set on the table cell.&lt;/li&gt;
&lt;/ul&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         &lt;p&gt;
The following implementation of the DoubleClickHandler are provided:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;OpenDisplayDoubleClickHandler&lt;/code&gt;: open the first related display of the clicked item&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AcknowledgeDoubleClickHandler&lt;/code&gt;: acknowledge/unacknowledge the clicked item&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ExecuteCommandDoubleClickHandler&lt;/code&gt;: execute the first related action&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DisplayGuidanceDoubleClickHandler&lt;/code&gt;: show the first guidance of the clicked item&lt;/li&gt;
&lt;/ul&gt;
      </documentation>
   </annotation>


</schema>
