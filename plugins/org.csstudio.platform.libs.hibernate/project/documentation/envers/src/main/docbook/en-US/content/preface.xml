<?xml version='1.0' encoding="UTF-8"?>
<!--
  ~ Hibernate, Relational Persistence for Idiomatic Java
  ~
  ~ Copyright (c) 2008, Red Hat Middleware LLC or third-party contributors as
  ~ indicated by the @author tags or express copyright attribution
  ~ statements applied by the authors.  All third-party contributions are
  ~ distributed under license by Red Hat Middleware LLC.
  ~
  ~ This copyrighted material is made available to anyone wishing to use, modify,
  ~ copy, or redistribute it subject to the terms and conditions of the GNU
  ~ Lesser General Public License, as published by the Free Software Foundation.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
  ~ or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License
  ~ for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public License
  ~ along with this distribution; if not, write to:
  ~ Free Software Foundation, Inc.
  ~ 51 Franklin Street, Fifth Floor
  ~ Boston, MA  02110-1301  USA
  -->

<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "../Hibernate_Envers_-_Easy_Entity_Auditing.ent">
%BOOK_ENTITIES;
]>

<preface id="preface">
    <title>Preface</title>

    <para>
        The Envers project aims to enable easy auditing of persistent classes. All that you
        have to do is annotate your persistent class or some of its properties, that you
        want to audit, with <literal>@Audited</literal>. For each audited entity, a table
        will be created, which will hold the history of changes made to the entity. You
        can then retrieve and query historical data without much effort.
    </para>

    <para>
        Similarly to Subversion, the library has a concept of revisions. Basically, one
        transaction is one revision (unless the transaction didn't modify any audited entities).
        As the revisions are global, having a revision number, you can query for various
        entities at that revision, retrieving a (partial) view of the database at that
        revision. You can find a revision number having a date, and the other way round,
        you can get the date at which a revision was commited.
    </para>

    <para>
        The library works with Hibernate and requires Hibernate Annotations or Entity Manager.
        For the auditing to work properly, the entities must have immutable unique
        identifiers (primary keys). You can use Envers wherever Hibernate works:
        standalone, inside JBoss AS, with JBoss Seam or Spring.
    </para>

    <para>
        Some of the features:
    </para>

    <orderedlist>
        <listitem>
            <para>
                auditing of all mappings defined by the JPA specification
            </para>
        </listitem>
        <listitem>
            <para>
                auditing of Hibernate mappings, which extend JPA, like custom types and
                collections/maps of "simple" types (Strings, Integers, etc.)
                (see also <xref linkend="exceptions"/>)
            </para>
        </listitem>
        <listitem>
            <para>
                logging data for each revision using a "revision entity"
            </para>
        </listitem>
        <listitem>
            <para>
                querying historical data
            </para>
        </listitem>
    </orderedlist>
</preface>
