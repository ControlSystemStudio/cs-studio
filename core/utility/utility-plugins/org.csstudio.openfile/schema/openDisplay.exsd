<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.csstudio.openfile" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="org.csstudio.openfile" id="openDisplay" name="Open Display"/>
      </appinfo>
      <documentation>
         Extension point that allows generic operator interface tools to register so that programs like an alarm interface can open operator interface panels.

Extensions register the file extension that they handle, and will then receive that file name and a generic string parameter for additional parameters like macros that are specific to the implementation of an operator interface tool.

Multiple tools can register for the same file extension, but only one should then set &quot;default: true&quot; or leave it undefined, while all others need to set &quot;default: false&quot;. If more than one tool registers without &quot;default: false&quot;, the last one found in the registry will be invoked.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
      </annotation>
      <complexType>
         <sequence minOccurs="1" maxOccurs="unbounded">
            <element ref="openDisplay"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="openDisplay">
      <complexType>
         <attribute name="file_extension" type="string" use="required">
            <annotation>
               <documentation>
                  The file extension that identifies this type of display tool. Plain file extension &quot;ext&quot;, not including the dot as in &quot;.ext&quot;.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  Class that can open this type of display
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn=":org.csstudio.openfile.IOpenDisplayAction"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="default" type="boolean">
            <annotation>
               <documentation>
                  Is this the default display tool for the file extension?
When multiple handler classes register for the same file extension, the one defined as &apos;default&apos; will be chosen.
A secondary handler class registered with &quot;default: false&quot; will only be invoked if there is no handler available with &quot;default: true&quot;.
The &quot;default&quot; setting defaults to true.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         Since 2010-06-08
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         &lt;pre&gt;
      &lt;extension
         point=&quot;org.csstudio.openfile.openDisplay&quot;&gt;
      &lt;openDisplay
            class=&quot;org.csstudio.myopi.OpenMyDisplayFile&quot;
            file_extension=&quot;mopi&quot;&gt;
      &lt;/openDisplay&gt;   
   &lt;/extension&gt;
&lt;/pre&gt;
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="apiinfo"/>
      </appinfo>
      <documentation>
         See org.csstudio.openfile.IOpenDisplayAction
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="implementation"/>
      </appinfo>
      <documentation>
         org.csstudio.opibuilder implements this for &apos;opi&apos; files
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="copyright"/>
      </appinfo>
      <documentation>
         Copyright (c) 2010 Oak Ridge National Laboratory.
All rights reserved. This program and the accompanying materials
are made available under the terms of the Eclipse Public License v1.0
which accompanies this distribution, and is available at
http://www.eclipse.org/legal/epl-v10.html
      </documentation>
   </annotation>

</schema>
